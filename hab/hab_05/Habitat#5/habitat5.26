
▐█ █▐▀█▄▐▀█ ▀▐▀▀▌▀█▄▐▀▀▌    ▄▄▄█▀█
 █ █▐  █▐▄█▌█▐  ▄  █▐       █▄▄▄▄    ▄      Исходник Viewer'a
 █▄█▐▄▄█▐  █▐▐  █▄▄█▐       ▀   ▀█  
▐█ █▐▄ █▐▄██▐▐▄ █▄ █▐▄      ▀█▄▄█▀   ▀      (c) somebody
==============================================================================

COMMENT`
                             E-Zine Viewer source

 Представляю вам   исходник вьюера   для электронного   журнала. Конечно,   он
 лишён всяческих фич, типа прыжков по URL'ам, подсветки избранных слов, и т.д.
 и  т.п. Зато сделан он на асме, и весит по минимуму (а вам нравятся  метровые
 вьюеры  на Дельфях ?).

 Работает он просто: вычисляет по  номеру подменю имя файла,  и сбрасывает его
 содержимое в Edit Control, который находится в состоянии Read Only.

 Вот и всё, а хули ж вам ещё надо?

 (*NeKr0!*) Так же я тут немного подправил на свой вкус (*NeKr0!*)
`

.386
.model flat, stdcall
option casemap: none

; ----------------------------------------------------------------------------
        ; INCLUDEZ:
        include         C:\masm32\include\windows.inc
        include         C:\masm32\include\kernel32.inc
        include         C:\masm32\include\user32.inc
        include         C:\masm32\include\gdi32.inc
        include         C:\masm32\include\comdlg32.inc

        includelib      C:\masm32\lib\kernel32.lib
        includelib      C:\masm32\lib\user32.lib
        includelib      C:\masm32\lib\gdi32.lib
        includelib      C:\masm32\lib\comdlg32.lib

        ; PROTOTYPEZ:
        WinMain         PROTO :DWORD, :DWORD, :DWORD, :DWORD

        ; EQUZ:
        MaxMemSize      equ 100000h
        EditID          equ 1
        IDR_ICON        equ 200
        IDM_EXIT        equ 1
; ----------------------------------------------------------------------------
.data
        AppName         db 'Habitat Virus Zine: issue #5',0
        ClassName       db 'VClass',0
        EditClass       db 'Edit',0
        MenuName        db "ViewerMenu",0
	fontName	db "fixedsys",0

        ERROR_MSG       db '                         Cant open file: '

        file            db 'habitat5.'
        file_major      db '0'                                  ;старший номер файла
        file_minor      db '0'                                  ;младший номер файла
                        db  0
; ----------------------------------------------------------------------------
.data?
        hInstance       HINSTANCE ?
        hFile           HANDLE ?
        hMem            HANDLE ?
        hPMem           DWORD ?
        hwndEdit        HWND ?
        CommandLine     LPSTR ?
        Bytes           DWORD ?
; ----------------------------------------------------------------------------
.code

start:
        invoke  GetModuleHandle, NULL
        mov     hInstance, eax
        invoke  GetCommandLine
        mov     CommandLine, eax

        invoke  WinMain, hInstance, NULL, CommandLine, SW_NORMAL
        invoke  ExitProcess, eax
; ----------------------------------------------------------------------------
WinMain         proc hInst:HINSTANCE, hPrevInst:HINSTANCE, CmdLine:LPSTR, CmdShow:DWORD

        LOCAL   wc:WNDCLASSEX
        LOCAL   msg:MSG
        LOCAL   hwnd:HWND

        mov     wc.cbSize, sizeof WNDCLASSEX
        mov     wc.style, CS_HREDRAW or CS_VREDRAW
        mov     wc.lpfnWndProc, offset WndProc
        mov     wc.cbClsExtra, NULL
        mov     wc.cbWndExtra, NULL
        push    hInst
        pop     wc.hInstance
        mov     wc.hbrBackground, BLACK_BRUSH
        mov     wc.lpszMenuName, offset MenuName
        mov     wc.lpszClassName, offset ClassName

        invoke  LoadIcon, hInst, IDR_ICON
        mov     wc.hIcon, eax                           ; big icon

        mov     wc.hIconSm, 0

        invoke  LoadCursor, NULL, IDC_ARROW
        mov     wc.hCursor, eax

        invoke  RegisterClassEx, addr wc

        invoke  CreateWindowEx, WS_EX_CLIENTEDGE, offset ClassName, \
                offset AppName, WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, \
                CW_USEDEFAULT, 800, 600, NULL, NULL, hInst, NULL

        mov     hwnd, eax
        invoke  ShowWindow, hwnd, SW_MAXIMIZE
        invoke  UpdateWindow, hwnd

        .WHILE  TRUE
                invoke  GetMessage, addr msg, NULL, 0, 0
                .BREAK  .IF (!eax)
                invoke  TranslateMessage, addr msg
                invoke  DispatchMessage, addr msg
        .ENDW

        mov     eax, msg.wParam
        ret

WinMain         endp
; ----------------------------------------------------------------------------
WndProc         proc uses ebx hWnd:HWND, uMsg:UINT, wParam:WPARAM, lParam:LPARAM

        .IF uMsg == WM_CREATE

                invoke  CreateWindowEx, NULL, offset EditClass, NULL, \
                        WS_VISIBLE or WS_CHILD or ES_READONLY or ES_LEFT or \
                        ES_MULTILINE or WS_VSCROLL or WS_HSCROLL, 0, \
                        0, 0, 0, hWnd, EditID, hInstance, NULL
                mov     hwndEdit, eax

;                invoke  GetStockObject, OEM_FIXED_FONT
		invoke  CreateFont,14h,0,0,0,FW_NORMAL,0,0,0,OEM_CHARSET,OUT_DEVICE_PRECIS, \
			CLIP_DEFAULT_PRECIS,DRAFT_QUALITY,FIXED_PITCH, offset fontName
                invoke  SendMessage, hwndEdit, WM_SETFONT, eax, TRUE

                call    OpenAndDisplay

        .ELSEIF uMsg == WM_SIZE
                mov     eax, lParam
                mov     edx, eax
                shr     edx, 16
                and     eax, 0FFFFh
                invoke  MoveWindow, hwndEdit, NULL, NULL, eax, edx, TRUE

         .ELSEIF uMsg == WM_DESTROY
                invoke  PostQuitMessage, NULL

         .ELSEIF uMsg == WM_COMMAND
                mov     eax, wParam
                .IF lParam == 0
                        .IF ax == IDM_EXIT
                                invoke  DestroyWindow, hWnd
                        .ELSEIF
                                ; фича: вычисление имени нужного файла
                                ; по номеру подменю
                                movzx   eax, word ptr wParam
                                mov     ebx, eax
                                shr     ebx, 4
                                and     eax, 7
                                add     eax, '0'
                                add     ebx, '0'-1
                                mov     file_major, bl
                                mov     file_minor, al

                                call    OpenAndDisplay
                         .ENDIF
                .ENDIF
         .ELSE

                invoke  DefWindowProc, hWnd, uMsg, wParam, lParam
                ret
         .ENDIF

         xor   eax, eax
         ret
WndProc         endp
; ----------------------------------------------------------------------------
OpenAndDisplay          proc
        ;отображение содержимого файла в Edit Control

        invoke  CreateFile, offset file, GENERIC_READ, \
                FILE_SHARE_READ, NULL, OPEN_EXISTING, \
                FILE_ATTRIBUTE_ARCHIVE or FILE_ATTRIBUTE_NORMAL, NULL

        .IF eax == -1
                invoke  SendMessage, hwndEdit, WM_SETTEXT, NULL, offset ERROR_MSG
                jmp     OutDisplay
        .ENDIF

        mov     hFile, eax

        invoke  GlobalAlloc, GMEM_ZEROINIT, MaxMemSize
        mov     hMem, eax
        invoke  GlobalLock, hMem
        mov     hPMem, eax
        invoke  ReadFile, hFile, hPMem, MaxMemSize, offset Bytes, NULL
        invoke  SendMessage, hwndEdit, WM_SETTEXT, NULL, hPMem

        invoke  GlobalUnlock, hPMem
        invoke  GlobalFree, hMem
        invoke  CloseHandle, hFile

OutDisplay:
        invoke  SetFocus, hwndEdit
        ret

OpenAndDisplay          endp
; ----------------------------------------------------------------------------

end     start
