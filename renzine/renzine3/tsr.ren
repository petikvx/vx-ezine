<html>

<head>
<title>REN - ZINE #3 dedicato a VirusBuster&nbsp;&nbsp;&nbsp; TSR</title>
<script lanuage="JavaScript">


var count = -1;
var counter;
var nchar
var speedtogo = 200

var a = new Array();

a[1] = "REN - ZINE #3";
a[2] = "ren - zine #3";


function capswitch() {
 count++
 if(count == 0){
   document.wow.display.value = a[1]
  }
 if(count == 1){
    document.wow.display.value = a[2].substring(0, 1) +
a[1].substring(20, 1) 
	}
 if(count > 1){
   a[3] = a[1].substring(0, count - 1) + a[2].substring(count - 1,
count) + a[1].substring(20, count)
  document.wow.display.value = a[3]
 }
 if(count == a[1].length){
    count = -1
  }

	 counter    = setTimeout("capswitch()",speedtogo);

 }
</script>
</head>

<body bgcolor="#FFFFFF" onload="capswitch()" background="gray.ren        ">

<form name="wow">
  <div align="center"><center><p><input type="text" size="18" name="display" value> </p>
  </center></div>
</form>

<p align="center"><font face="Copperplate Gothic Bold" size="5" color="#FFFF00">TSR</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Terminate and stay resident
(TSR), ovvero programmi residenti in memoria.Il mondo del TSR è un passo molto
importante, specialmente per i virus.Stando residente in memoria possiamo controllare
tutti i movimenti eseguiti dal nostro sistema operativo.</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Iniziamo con un esempio con il
quale carichiamo un programma nella memoria, e tramite un'altra opzione lo rimuoviamo di
nuovo.</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push cs ; </font><font
face="Arial" size="3" color="#FFFF00">salviamo cs</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">pop ds;</font><font
face="Arial" size="3" color="#FFFF00">e lo carichiamo direttamente in ds</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov si, 81h</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cld ; </font><font
face="Arial" size="3" color="#FFFF00">iniziando con la riga di comando segue il codice che
controlla se è stato </font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">premuto il tasto per la
rimozione o meno</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">lodsb ; </font><font
face="Arial" size="3" color="#FFFF00">nulla di nuovo</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cmp al,0dh ; </font><font
face="Arial" size="3" color="#FFFF00">qui controlliamo se la nostra stringa è finita, in
caso affermativo</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">ciò significa che nella riga
di comando non si trova nessun'altra lettera.Quindi</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">possiamo continuare ad
eseguire il codice che installa il programma, oppure </font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">prima controlla se è già
stato installato.</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">jne XXX ; </font><font
face="Arial" size="3" color="#FFFF00">Se non corrisponde vuol dire che è stato inserito
un'altra lettere.</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Quindi a questo punto bisogna
inserire un jump condizionale al codice che </font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">controlla se la lettera
corrisponde, come esempio, alla lettera &quot;r&quot;, che useremo</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">per la rimozione.</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">jmp continua_normalmente ; </font><font
face="Arial" size="3" color="#FFFF00">altrimenti andiamo direttamente al codice
d'installazione</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Adesso controlliamo se la
lettera inserita nel caso del </font><font face="Arial" size="3" color="#00FF00">jne </font><font
face="Arial" size="3" color="#FFFF00">,cioè se la riga di</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">comando non fosse finita,
corrisponde ad una &quot;r&quot;</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cmp al,&quot;r&quot; ; </font><font
face="Arial" size="3" color="#FFFF00">lettera è una &quot;r&quot; ?</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">je rimuovi ; </font><font
face="Arial" size="3" color="#FFFF00">allora andiamo alla rimozione</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cmp al, &quot;R&quot; ; </font><font
face="Arial" size="3" color="#FFFF00">in caso la lettera fosse maiuscola</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">jne XXX ; </font><font
face="Arial" size="3" color="#FFFF00">se non corrisponde possiamo uscire a questo punto
,oppure ritornare</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">al lodsb, come preferite.</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Ora diamo uno sguardo alla
parte del codice che si occupa della rimozione.</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">call siamo_residenti ; </font><font
face="Arial" size="3" color="#FFFF00">prima di tutto dobbiamo verificare bene se il nostro</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">programma è caricato in
memoria</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">siamo_residenti: mov dx, 0 </font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov bh,192 ; </font><font
face="Arial" size="3" color="#FFFF00">qui controlliamo i numeri dal 192 al 255, visto che
i numeri fino al</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">192 sono riservati</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah, bh ; </font><font
face="Arial" size="3" color="#FFFF00">copiamo il valore in ah</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov al,0 ; </font><font
face="Arial" size="3" color="#FFFF00">funzione 0 dell'interrupt 2f = installation check</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push bx,ds</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 2fh ; </font><font
face="Arial" size="3" color="#FFFF00">esegue la funzione</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">pop ds bx ; </font><font
face="Arial" size="3" color="#FFFF00">ripristiniamo i valori</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cmp al, 0ffh ; </font><font
face="Arial" size="3" color="#FFFF00">vediamo se questo numero è usato o meno</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">In caso che fosse occupato
dobbiamo controllare tutti i numeri.Per questo </font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">inseriamo un jump condizionale
che ci porterebbe a questo codice</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">inc bh ; </font><font
face="Arial" size="3" color="#FFFF00">incremente bh di 1 = al prossimo numero</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">jnz siamo_residenti ; </font><font
face="Arial" size="3" color="#FFFF00">in caso il zero flag non sia settato, continuiamo
con siamo_residenti</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov si, identificazione ; </font><font
face="Arial" size="3" color="#FFFF00">ora carichiamo la stringa d'identificazione (quella
che volete)</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov cx,
lunghezza_identificazione; </font><font face="Arial" size="3" color="#FFFF00">adesso
invece l'intera lunghezza della stringa ( lunghezza_identificazione = $ - identificazione)</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cld</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">repe cmpsb ; </font><font
face="Arial" size="3" color="#FFFF00">corrisponde alla nostra stringa ?</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">jne XXX; </font><font
face="Arial" size="3" color="#FFFF00">se no andiamo dal codice che incrementa il numero
cercando l'intera</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">memoria della nostra string</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx, 1</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">jmp finiamo_check ; </font><font
face="Arial" size="3" color="#FFFF00">se abbiamo trovato la nostra stringa possiamo
concludere</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">il nostro check</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ax, dx ; </font><font
face="Arial" size="3" color="#FFFF00">ecco fatto</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Adesso continuiamo con il
codice della rimozione</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cmp ax,1 ; </font><font
face="Arial" size="3" color="#FFFF00">stringa installata ?</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">je continua ; </font><font
face="Arial" size="3" color="#FFFF00">bene, allora continuiamo</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx, offset non_residente ;
</font><font face="Arial" size="3" color="#FFFF00">carichiamo il messaggio che il
programma non</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">è residente,quindi ovviamente
non sarà possibile rimuoverlo</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah, 9 ; </font><font
face="Arial" size="3" color="#FFFF00">lo facciamo visualizzare sullo schermo</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font
face="Arial" size="3" color="#FFFF00">fatto</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ax, 4c00h ; </font><font
face="Arial" size="3" color="#FFFF00">ed usando la funzione 4c00</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font
face="Arial" size="3" color="#FFFF00">possiamo tornare direttamente al DOS</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Ora invece dobbiamo
controllare se ci sono stati dei cambiamente al vettore dell'interrupt 2fh.Se ci sarà
qualche problema non saremo in grado di rimuovere il nostro programma dalla memoria.</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ax,352fh</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push es ; </font><font
face="Arial" size="3" color="#FFFF00">salviamo es</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">pop es ; </font><font
face="Arial" size="3" color="#FFFF00">quindi ripristiniamo es</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cmp bx, es: nuovo_handler ;</font><font
face="Arial" size="3" color="#FFFF00">corrisponde al nuovo handler dlel'interrupt 2fh ?</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">je ripristina ; </font><font
face="Arial" size="3" color="#FFFF00">si=allora continuiamo con la rimozione</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Adesso però vediamo in che
cosa consiste il nuovo_handler</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cmp ah,cs:corrisponde ; </font><font
face="Arial" size="3" color="#FFFF00">si tratta del nostro programma ? (corrisponde db ?)</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">je controlla ; </font><font
face="Arial" size="3" color="#FFFF00">allora si continua con il controllo
dell'installazione</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">jmp cs:vecchio_handler ; </font><font
face="Arial" size="3" color="#FFFF00">altrimenti andiamo dal handler vecchio
(vecchio_handler dd ? )</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">controlla: cmp al,0 ; </font><font
face="Arial" size="3" color="#FFFF00">ora controlliamo se il programma è installato o
meno</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">jne ritorna ; </font><font
face="Arial" size="3" color="#FFFF00">altrimenti metteteci qualche riga che ritorna al
codice della rimozione</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov al, 0ffh ; </font><font
face="Arial" size="3" color="#FFFF00">è residente ,quindi carichiamo il valore in al</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push cs ; </font><font
face="Arial" size="3" color="#FFFF00">qui salviamo cs</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">pop es ; </font><font
face="Arial" size="3" color="#FFFF00">e lo ripristiniamo in es</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov di , offset
cs:identificazione ; </font><font face="Arial" size="3" color="#FFFF00">carica la nostra
stringa d'identificazione</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Ritornando al codice di sopra,
nel caso che non fosse uguale ci manca solo un messaggio d'errore.</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx, offset impossibile</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah,9</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h ; </font><font
face="Arial" size="3" color="#FFFF00">usando come stringa per esempio: impossibile db
&quot; Impossibile rimuovere </font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">programma dalla memoria.</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Ora invece il codice
&quot;ripristina&quot;</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ax,252fh ; </font><font
face="Arial" size="3" color="#FFFF00">iniziamo a ripristinare il vecchio vettore
dell'interrupt 2fh</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push ds ; </font><font
face="Arial" size="3" color="#FFFF00">salviamo ds</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">lds dx,es:vecchio_handler ; </font><font
face="Arial" size="3" color="#FFFF00">carichiamo il pointer a 32 bit</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h ; </font><font
face="Arial" size="3" color="#FFFF00">esegue tutto ciò</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">pop ds ; </font><font
face="Arial" size="3" color="#FFFF00">ripristiniamo ds</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Adesso dobbiamo ripristinare i
segmenti e gli indirizzi dell'installazione</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov word ptr es:(16h),cs ; </font><font
face="Arial" size="3" color="#FFFF00">per quanto riguarda il program segment prefix</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov word ptr es:(0ah),offset
segmenti; </font><font face="Arial" size="3" color="#FFFF00">dopo continuiamo con il resto
dei segmenti</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov word ptr es:(0ch),cs ; </font><font
face="Arial" size="3" color="#FFFF00">ecco fatto</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov sp_salvato,sp ; </font><font
face="Arial" size="3" color="#FFFF00">ora salviamo l'sp in sp_salvato (dw ?)</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ss_salvato,ss ; </font><font
face="Arial" size="3" color="#FFFF00">lo stesso vale per il stack segment</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ds_salvato,ds ; </font><font
face="Arial" size="3" color="#FFFF00">ed infine salviamo anche il ds</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah, 50h ; </font><font
face="Arial" size="3" color="#FFFF00">funzione 50h dell'interrupt 21h = set current
process </font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov bx,es</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h ; </font><font
face="Arial" size="3" color="#FFFF00">e lo eseguiamo</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Ecco quello che riguarda il
resto dei segmenti</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cli ; </font><font
face="Arial" size="3" color="#FFFF00">clear interrupt flag, per disabilitare interrupts</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ds,cs:ds_salvato</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ss,ss_salvato ; </font><font
face="Arial" size="3" color="#FFFF00">copiamo il valore di nuovo in ss</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov sp;sp_salvato ; </font><font
face="Arial" size="3" color="#FFFF00">la stessa cosa per il stack pointer</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">sti ; </font><font
face="Arial" size="3" color="#FFFF00">set interrupt flag , per riabilitare interrupts</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx,offset rimosso ; </font><font
face="Arial" size="3" color="#FFFF00">il messaggio finale dopo la rimozione</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah,9</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21; </font><font
face="Arial" size="3" color="#FFFF00">come esempio scegliamo &quot; rimosso db &quot;
Programma rimosso dalla memoria&quot;</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ax,4c00h</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h ; </font><font
face="Arial" size="3" color="#FFFF00">e quindi possiamo uscire</font></p>

<p align="left">&nbsp;</p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Se invece non è stata
inserita alcuna lettera dopo la stringa, andiamo subito alla parte che si occupa
dell'installazione.Nel nostro caso, corrisponde a continua_normalmente.</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Prima di tutto, anche qua,
facciamo un controllo se il programma è già residente in memoria o meno.</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">call siamo_residenti; </font><font
face="Arial" size="3" color="#FFFF00">una call va benissimo, visto che il codice che
controlla tutto</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">l'abbiamo già scritto.</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cmp ax,0 ; </font><font
face="Arial" size="3" color="#FFFF00">vediamo se non è ancora installato</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">je vai ; </font><font
face="Arial" size="3" color="#FFFF00">in questo caso iniziamo con il codice
d'installazione</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx,gia_installato </font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah,9</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font
face="Arial" size="3" color="#FFFF00">quindi carichiamo un messaggio se il nostro
programma è già residente </font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">con un semplice gia_installato
db &quot; Programma già residente in memoria&quot;</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">E poi possiamo tranquillamente
uscire al DOS</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Adesso l'installazione vera e
propria</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov bh,192 ; </font><font
face="Arial" size="3" color="#FFFF00">qui controlliamo i numeri dal 192 al 255, visto che
i numeri fino al</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">192 sono riservati</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah,bh ; </font><font
face="Arial" size="3" color="#FFFF00">adesso abbiamo caricato il numero in ah</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov al,0 ; </font><font
face="Arial" size="3" color="#FFFF00">ecco l'installation check</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push bx ds ; </font><font
face="Arial" size="3" color="#FFFF00">ora salviamo</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 2fh; </font><font
face="Arial" size="3" color="#FFFF00">eseguiamo tutto ciò</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">pop ds bx ; </font><font
face="Arial" size="3" color="#FFFF00">ripristiniamo i nostri valori salvati</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cmp al,0 ; </font><font
face="Arial" size="3" color="#FFFF00">verifichiamo il numero attuale è usato o meno</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">je installa ; </font><font
face="Arial" size="3" color="#FFFF00">se è libero possiamo installare il programma</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">inc bh ; </font><font
face="Arial" size="3" color="#FFFF00">altrimenti aumenteremo bh fino a quando non avremo
trovato un numero</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">libero</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">jnz XXX; </font><font
face="Arial" size="3" color="#FFFF00">ecco il ciclo, che dovrà essere ripetuto se non
abbiamo trovato un </font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">numero non usato</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">installa: mov ah, salva_num ; </font><font
face="Arial" size="3" color="#FFFF00">salviamo il numero trovato (salva_num db ?)</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ax,352fh ; </font><font
face="Arial" size="3" color="#FFFF00">ora iniziamo a salvare il vettore vecchio</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov word ptr
vecchio_handler(0),bx</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov word ptr
vecchio_handler(2),es ; </font><font face="Arial" size="3" color="#FFFF00">ecco fatto</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ax,252fh ; </font><font
face="Arial" size="3" color="#FFFF00">adesso procediamo all'installazione del nuovo
handler</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx, offset nuovo_handler ;
</font><font face="Arial" size="3" color="#FFFF00">ecco che lo carichiamo (il codice lo
trovate più sopra)</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h ; </font><font
face="Arial" size="3" color="#FFFF00">eseguito !</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx,offset installato</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah,9</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h ; </font><font
face="Arial" size="3" color="#FFFF00">e allora finiamo un un piccolo messaggio che ci
segnala il successo,tipo</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">installato db &quot; Programma
residente in memoria&quot;</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx, offset installazione; </font><font
face="Arial" size="3" color="#FFFF00">ricordate l'inizio dove verificavamo la
&quot;r&quot; ?</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">shr dx,4</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">inc dx ; </font><font
face="Arial" size="3" color="#FFFF00">incrementa dx di 1 </font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ax,3100h</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h; </font><font
face="Arial" size="3" color="#FFFF00">Bene..e siamo giunti alla conclusione..il programma
di installazione e rimozione in memoria è finito.</font></p>

<p align="left">&nbsp;</p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Adesso invece ci rivolgiamo ad
un altro campo della programmazione, sempre in memoria.Si tratta di una tecnica
indispensabile per ogni virus residente in memoria, l'aggancio di un interrupt, ovvero il
cosiddetto &quot;interrupt hooking&quot;.In questo caso prenderemo il controllo totale
dell'interrupt.Quello che segue è un semplice programma che, una volta installato, vi
farà ascoltare un &quot;beep&quot; quando l'interrupt agganciato è in uso.E' un esempio
abbastanza semplice, e come interrupt sceglieremo quello che si occupa della stampante,
cioè l'interrupt </font><font face="Arial" size="3" color="#00FF00">17h</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov es, enseg ; </font><font
face="Arial" size="3" color="#FFFF00">abbiamo bisogno del environment segment</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah,49h ; </font><font
face="Arial" size="3" color="#FFFF00">funzione 49h dell'interrupt 21= release memory</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Ora agganciamo l'interrupt</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ax,3500h + aggancio ; </font><font
face="Arial" size="3" color="#FFFF00">carichiamo il vecchio interrupt handler.Abbiamo
detto </font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">che come sempio useremo
l'interrupt 17h, quindi il nostr aggancio corrisponde a&nbsp;&nbsp; </font><font
face="Arial" size="3" color="#00FF00">(aggancio equ 17h)</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov word ptr
interrupt_vecchio,bx ; </font><font face="Arial" size="3" color="#FFFF00">salviamo
l'indirizzo del interrupt handler vecchio ( interrupt_vecchio dd ?)</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov word ptr interrupt_vecchio
+ 2,es; </font><font face="Arial" size="3" color="#FFFF00">salviamo l'interrupt segment
vecchio</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ax,2500h + aggancio; </font><font
face="Arial" size="3" color="#FFFF00">funzione 25h dell'interrupt 21h = set interrupt
vector. Con questo iniziamo ad installare il nostro nuovo interrupt handler</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx, offset interrupt_nuovo
; </font><font face="Arial" size="3" color="#FFFF00">ecco che carichiamo il nuovo
interrupt handler che constiste in</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">pushf ; </font><font
face="Arial" size="3" color="#FFFF00">simula la chiamata dell'interrupt al handler vecchio</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">cli </font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">call CS:interrupt_vecchio ; </font><font
face="Arial" size="3" color="#FFFF00">ora ritroviamo il nostro interrupt_vecchio</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push ds ; </font><font
face="Arial" size="3" color="#FFFF00">salva ds</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push cs</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">pop ds ; </font><font
face="Arial" size="3" color="#FFFF00">quindi abbiamo cs in ds</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">sti ; </font><font
face="Arial" size="3" color="#FFFF00">riabilitiamo gli interrupts</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push ax</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push bx</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push cx</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push dx</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push si</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push di</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push bp</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">push es ; </font><font
face="Arial" size="3" color="#FFFF00">Prima di accedere alla memoria salviamo tutti i
registri</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Ed ora la routine del signale
acustico</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov al,07h</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov bh,0</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov cx,1</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah,0eh</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 10h ; </font><font
face="Arial" size="3" color="#FFFF00">quindi eseguiamo tutto ciò</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Quando scrivetere il vostro
codice che termina il programma non dimenticatevi di ripristinare tutti i registri.</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Ora possiamo caricare un
messaggio d'installazione</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx,offset installato</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah,9</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h ; </font><font
face="Arial" size="3" color="#FFFF00">Per esempio :installato db &quot; Programma
residente caricato&quot;</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Adesso,tramite la funzione </font><font
face="Arial" size="3" color="#00FF00">31h </font><font face="Arial" size="3"
color="#FFFF00">dell'interrupt 21h possiamo stare residenti nella memoria.</font></p>

<p align="left">&nbsp;</p>

<p align="center"><font face="Arial Black" size="4" color="#00FF00">L'assembly - </font><font
face="Arial Black" size="4" color="#000080"><a href="assembly.ren">VAI</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font><font face="Arial Black" size="4"
color="#00FF00">Indice - </font><font face="Arial Black" size="4" color="#000080"><a
href="indice.ren">VAI</a> </font></p>
</body>
</html>
