; ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
; ³ (c) Lord Julus - 2000                Vxtasy #1 - Magazine source code ³
; ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

;===========( The main routine that waits keyboard input )===================

browse_menu proc near                      ; browsing procedure
        call reorder_menu                  ; put on screen
        mov cs:events, 1                   ;
                                           ;
browse_loop:                               ;
        cmp exit_flag, 1                   ;
        je exit                            ;
        cmp actualizate, 1                 ;
        jne no_done_move                   ;
        jmp done_move                      ;
                                           ;
no_done_move:                              ;
        cmp pressed_like_enter, 1          ;
        jne no_mouse_buttons_press         ;
        mov was_in_buttons, 1              ;
        jmp key_enter                      ;
                                           ;
no_mouse_buttons_press:                    ;
        cmp pressed_like_esc, 1            ;
        jne no_mouse_esc                   ;
                                           ;
        mov ax, 1                          ;
        sub ax, showpopup                  ;
        mov showpopup, ax                  ;
        mov actualizate, 1                 ;
        mov onlyactualize, 0               ;
        mov pressed_like_esc, 0            ;
        jmp done_move                      ;
                                           ;
no_mouse_esc:                              ;
        call check_for_key                 ;
        cmp al, 0                          ;
        jne some_key_pressed               ;
        cmp cs:keys[Kf8], 1                ;
        je sound_toggle                    ;
        cmp cs:keys[KDARROW], 1            ; pressed down-arrow ?
        je key_down                        ;
        cmp cs:keys[KKEYPAD2], 1           ;
        je key_down                        ;
        cmp cs:keys[KUARROW], 1            ; pressed up-arrow ?
        je key_up                          ;
        cmp cs:keys[KKEYPAD8], 1           ;
        je key_up                          ;
        cmp cs:keys[KRARROW], 1            ; pressed right-arrow ?
        je key_right                       ;
        cmp cs:keys[KKEYPAD6], 1           ;
        je key_right                       ;
        cmp cs:keys[KLARROW], 1            ; pressed left-arrow ?
        je key_left                        ;
        cmp cs:keys[KKEYPAD4], 1           ;
        je key_left                        ;
        cmp cs:keys[KPGUP], 1              ; pressed pageup ?
        je key_pgup                        ;
        cmp cs:keys[KKEYPAD9], 1           ;
        je key_pgup                        ;
        cmp cs:keys[KPGDN], 1              ; pressed pagedn ?
        je key_pgdn                        ;
        cmp cs:keys[KKEYPAD3], 1           ;
        je key_pgdn                        ;
        cmp cs:keys[KHOME], 1              ; pressed home ?
        je key_home                        ;
        cmp cs:keys[KKEYPAD7], 1           ;
        je key_home                        ;
        cmp cs:keys[KEND], 1               ; pressed end ?
        je key_end                         ;
        cmp cs:keys[KKEYPAD1], 1           ;
        je key_end                         ;
        cmp cs:keys[KENTER], 1             ;
        je key_enter                       ;
        cmp cs:keys[KKEYPADENTER], 1       ;
        je key_enter                       ;
        cmp cs:keys[KESC], 1               ; pressed ESC ?
        je key_esc                         ;
        cmp cs:keys[KF1], 1                ;
        je key_f1                          ;
        cmp cs:keys[KF4], 1                ;
        jne no_key_f4                      ;
        call key_f4                        ;
no_key_f4:                                 ;
        jmp browse_loop                    ;
                                           ;
;======( Enter pressed )===================;
                                           ;
key_enter:                                 ;
        mov cs:events, 0                   ;
        mov hot_touched, 0                 ;
        mov cs:keys[KENTER], 0             ;
        mov cs:keys[KKEYPADENTER], 0       ;
                                           ;
        cmp showpopup, 0                   ;
        je toggle_popup                    ;
                                           ;
        pusha                              ;
        push current_popup                 ;
        push current_popit                 ;
        call locate_popup_item_name        ;
        mov al, byte ptr [si-1]            ;
        mov overallno, al                  ;
        call check_toggleability           ;
        popa                               ;
        jc no_toggleable_menus             ;
                                           ;
;        call toggle_current_popup         ;
;        mov onlyactualize, 1              ;
;        mov cs:[un_buton], 0              ;
;        mov was_in_buttons, 0             ;
;        jmp over_save_restore             ;
                                           ;
no_toggleable_menus:                       ;
        call save_to_page_2                ;
        call procedures                    ;
        call restore_from_page_2           ;
        mov onlyactualize, 1               ;
                                           ;
over_save_restore:                         ;
        mov pressed_like_enter, 0          ;
        mov actualizate, 1                 ;
        mov cs:events, 1                   ;
                                           ;
 call hide_mouse                           ;
                                           ;
                                           ;
        jmp browse_loop                    ;
                                           ;
toggle_popup:                              ;
        mov ax, exit_bar                   ;
        cmp ax, current_popup              ;
        je exit                            ;
                                           ;
        mov disable, 0                     ;
        mov ax, 1                          ;
        mov showpopup, ax                  ;
        mov actualizate, 1                 ;
        mov onlyactualize, 0               ;
        mov cs:events, 1                   ;
        jmp browse_loop                    ;
                                           ;
;==========================================;
;=====( Down key pressed )=================;
                                           ;
key_down:                                  ;
        mov cs:keys[KDARROW], 0            ; reset the key
        mov cs:keys[KKEYPAD2], 0           ; reset the key
        mov onlyactualize, 1               ;
        inc current_popit                  ;
        mov ax, popup_height               ;
        cmp ax, current_popit              ;
        jb reset_to_one                    ;
        jmp exit_key_down                  ;
                                           ;
reset_to_one:                              ;
        mov current_popit, 1               ;
                                           ;
exit_key_down:                             ;
        lea di, pop_pos                    ;
        mov cx, current_popup              ;
        shl cx, 1                          ;
        add di, cx                         ;
        dec di                             ;
        dec di                             ;
        mov ax, current_popit              ;
        mov word ptr [di], ax              ;
        mov showpopup, 1                   ;
        jmp done_move                      ;
                                           ;
;=====( Up key pressed )===================;
                                           ;
key_up:                                    ;
        mov cs:keys[KUARROW], 0            ; reset the key
        mov cs:keys[KKEYPAD8], 0           ; reset the key
        mov onlyactualize, 1               ;
        mov ax, current_popit              ;
        cmp ax, 1                          ;
        je reset_to_last                   ;
        dec current_popit                  ;
        jmp exit_key_up                    ;
                                           ;
reset_to_last:                             ;
        mov ax, popup_height               ;
        mov current_popit, ax              ;
                                           ;
exit_key_up:                               ;
        lea di, pop_pos                    ;
        mov cx, current_popup              ;
        shl cx, 1                          ;
        add di, cx                         ;
        dec di                             ;
        dec di                             ;
        mov ax, current_popit              ;
        mov word ptr [di], ax              ;
        mov showpopup, 1                   ;
        jmp done_move                      ;
                                           ;
;=====( Right key pressed )================;
                                           ;
key_right:                                 ;
        mov cs:keys[KRARROW], 0            ; reset the key
        mov cs:keys[KKEYPAD6], 0           ; reset the key
        mov onlyactualize, 0               ;
        mov current_popit, 1               ;
        inc current_popup                  ;
        mov ax, current_popup              ;
        cmp ax, max_menu_item              ;
        ja over_number                     ;
        jmp exit_key_right                 ;
                                           ;
over_number:                               ;
        mov current_popup, 1               ;
                                           ;
exit_key_right:                            ;
        lea di, pop_pos                    ;
        mov cx, current_popup              ;
        shl cx, 1                          ;
        add di, cx                         ;
        dec di                             ;
        dec di                             ;
        mov ax, word ptr [di]              ;
        mov current_popit, ax              ;
                                           ;
        jmp done_move                      ;
                                           ;
;=====( Right key pressed )================;
                                           ;
key_left:                                  ;
        mov cs:keys[KLARROW], 0            ; reset the key
        mov cs:keys[KKEYPAD4], 0           ; reset the key
        mov onlyactualize, 0               ;
        mov current_popit, 1               ;
        mov ax, current_popup              ;
        cmp ax, 1                          ;
        je over_one                        ;
        dec current_popup                  ;
        jmp exit_key_left                  ;
                                           ;
over_one:                                  ;
        mov ax, max_menu_item              ;
        mov current_popup, ax              ;
                                           ;
exit_key_left:                             ;
        lea di, pop_pos                    ;
        mov cx, current_popup              ;
        shl cx, 1                          ;
        add di, cx                         ;
        dec di                             ;
        dec di                             ;
        mov ax, word ptr [di]              ;
        mov current_popit, ax              ;
        jmp done_move                      ;
;=====( Right key pressed )================;
                                           ;
key_pgup:                                  ;
        mov cs:keys[KPGUP  ], 0            ; reset the key
        mov cs:keys[KKEYPAD9], 0           ; reset the key
        mov current_popit, 1               ;
        mov onlyactualize, 1               ;
        lea di, pop_pos                    ;
        mov cx, current_popup              ;
        shl cx, 1                          ;
        add di, cx                         ;
        dec di                             ;
        dec di                             ;
        mov ax, current_popit              ;
        mov word ptr [di], ax              ;
        mov showpopup, 1                   ;                                   ;
        jmp done_move                      ;
;=====( Right key pressed )================;
                                           ;
key_pgdn:                                  ;
        mov cs:keys[KPGDN  ], 0            ; reset the key
        mov cs:keys[KKEYPAD3], 0           ; reset the key
                                           ;
        mov ax, popup_height               ;
        mov current_popit, ax              ;
        mov onlyactualize, 1               ;
        lea di, pop_pos                    ;
        mov cx, current_popup              ;
        shl cx, 1                          ;
        add di, cx                         ;
        dec di                             ;
        dec di                             ;
        mov ax, current_popit              ;
        mov word ptr [di], ax              ;
        mov showpopup, 1                   ;                                   ;
        jmp done_move                      ;
;=====( Right key pressed )================;
                                           ;
key_home:                                  ;
        mov cs:keys[KHOME]  , 0            ; reset the key
        mov cs:keys[KKEYPAD7], 0           ; reset the key
                                           ;
        mov current_popup, 1               ;
        mov onlyactualize, 0               ;
        jmp done_move                      ;
;=====( Right key pressed )================;
                                           ;
key_end:                                   ;
        mov cs:keys[KEND   ], 0            ; reset the key
        mov cs:keys[KKEYPAD1], 0           ; reset the key
                                           ;
        mov ax, max_menu_item              ;
        mov current_popup, ax              ;
        mov onlyactualize, 0               ;
                                           ;
        jmp done_move                      ;
                                           ;
key_esc:                                   ;
        mov cs:keys[KESC], 0               ;
        cmp showpopup, 0                   ;
        je exit                            ;
        mov showpopup, 0                   ;
        mov onlyactualize, 0               ;
        jmp done_move                      ;
                                           ;
                                           ;
sound_toggle:                              ;
        mov cs:keys[KF8], 0                ;
        mov ax, 1                          ;
        sub ax, soundstatus                ;
        mov soundstatus, ax                ;
        cmp soundstatus, 0                 ;
        jne no_stopping                    ;
        call EndPlayer                     ;
                                           ;
no_stopping:                               ;
        jmp browse_loop                    ;
                                           ;
key_f1:                                    ;
        mov cs:keys[KF1], 0                ;
        mov cs:events, 0                   ;
        call save_to_page_2                ;
        mov disable, 1                     ;
        mov ax, 1                          ;
        call makewindow                    ;
                                           ;
        mov ax, 1                          ;
        mov dx, 1421h                      ;
        mov b_shad_attr, 03h shl 4 + 00h   ;
        mov waitread, 0                    ;
        call waitwindow                    ;
                                           ;
over_help:                                 ;
        call restore_from_page_2           ;
        mov disable, 0                     ;
        mov cs:events, 1                   ;
        jmp browse_loop                    ;
                                           ;
key_f4:                                    ;
        push soundstatus                   ;
        mov soundstatus, 0                 ;
        call EndPlayer                     ;
        mov cs:keys[KF4], 0                ;
        mov cs:events, 0                   ;
        call save_to_page_3                ;
        mov disable, 1                     ;
        call hide_mouse                    ;
        pusha                              ;
        push es                            ;
        mov ax, 0b800h                     ;
        mov es, ax                         ;
        mov di, 0                          ;
        mov cx, 80*25                      ;
        mov ax, 0700h                      ;
        rep stosw                          ;
        mov dx, 0                          ;
        call pos_cursor                    ;
        lea dx, boss_text                  ;
        mov ah, 09h                        ;
        int 21h                            ;
                                           ;
wait_escape:                               ;
        cmp cs:keys[KX], 1                 ;
        je maybe_out_of_boss               ;
        jmp wait_escape                    ;
                                           ;
maybe_out_of_boss:                         ;
        mov cs:keys[KX], 0                 ;
        cmp cs:keys[KLEFTALT],1            ;
        jne wait_escape                    ;
                                           ;
                                           ;
out_of_boss:                               ;
        mov cs:keys[KX], 0                 ;
        mov cs:keys[KLEFTALT], 0           ;
        pop es                             ;
        popa                               ;
        call show_mouse                    ;
        call restore_from_page_3           ;
        mov disable, 0                     ;
        mov cs:events, 1                   ;
        pop soundstatus                    ;
        ret                                ;
;       jmp browse_loop                    ;
                                           ;
some_key_pressed:                          ;
        cmp cs:keys[KLEFTSHIFT], 1         ;
        je check_password                  ;
                                           ;
        cmp cs:keys[KLEFTALT], 1           ;
        je some_alt_pressed                ;
        cmp cs:keys[KRIGHTALT], 1          ;
        je some_alt_pressed                ;
                                           ;
; handle hot keys on popup                 ;
                                           ;
        cmp showpopup, 0                   ;
        je hot_letter_not_found            ;
                                           ;
        mov cx, hot_letters_number         ;
        inc cx                             ;
        lea di, hot_letters                ;
        repnz scasb                        ;
;       dec di                             ;
;       cmp byte ptr [di], 0FFh            ;
        cmp cx, 0                          ;
        je hot_letter_not_found            ;
                                           ;
        mov bx, hot_letters_number         ;
        sub bx, cx                         ;
        inc bx                             ;
        mov current_popit, bx              ;
                                           ;
        lea di, pop_pos                    ;
        mov cx, current_popup              ;
        shl cx, 1                          ;
        add di, cx                         ;
        dec di                             ;
        dec di                             ;
        mov ax, current_popit              ;
        mov word ptr [di], ax              ;
        mov showpopup, 1                   ;
        mov hot_touched, 1                 ;
        jmp done_move                      ;
                                           ;
hot_letter_not_found:                      ;
        jmp browse_loop                    ;
                                           ;
;handle hot keys on menu bar               ;
                                           ;
some_alt_pressed:                          ;
;       mov cs:keys[KLEFTALT], 0           ;
;       mov cs:keys[KRIGHTALT], 0          ;
        mov bl, al                         ;
        xor ax, ax                         ;
        lea si, menu_hot_keys              ;
                                           ;
scan_for_hot_letter:                       ;
        lodsb                              ;
        cmp al, 0FFh                       ;
        je no_hot_letter                   ;
        mov dx, ax                         ;
        lodsb                              ;
        cmp al, bl                         ;
        je found_hot_letter                ;
        jmp scan_for_hot_letter            ;
                                           ;
found_hot_letter:                          ;
        cmp dx, exit_bar                   ;
        je exit                            ;
        mov current_popup, dx              ;
        mov onlyactualize, 0               ;
        mov actualizate, 1                 ;
        jmp exit_key_left                  ;
;       jmp done_move                      ;
                                           ;
no_hot_letter:                             ;
        jmp browse_loop                    ;
                                           ;
;==========================================;
done_move:                                 ;
        mov cs:events, 0                   ;
        call hide_mouse                    ;
        call reorder_menu                  ; flush buffer to screen
        mov actualizate, 0                 ;
        mov pressed_like_enter, 0          ;
        call show_mouse                    ;
        mov cs:events, 1                   ;
        cmp hot_touched, 1                 ;
        je key_enter                       ;
        jmp browse_loop                    ; and loop
                                           ;
exit:                                      ; exit now...
        ret                                ;
                                           ;
check_password:                            ;
        lea di, secret_password            ;
        add di, secret_pass_pos            ;
        add al, 3                          ;
        cmp byte ptr [di], al              ;
        jne reset_password                 ;
        inc secret_pass_pos                ;
        mov ax, secret_pass_len            ;
        cmp ax, secret_pass_pos            ;
        je password_activated              ;
        jmp browse_loop                    ;
                                           ;
reset_password:                            ;
        mov secret_pass_pos, 0             ;
        jmp browse_loop                    ;
                                           ;
browse_menu endp                           ;
                                           ;
password_activated proc                    ;
        call save_to_page_3                ;
        mov secret_pass_pos, 0             ;
        mov cs:events, 0                   ;
        push soundstatus                   ;
        cmp soundstatus, 0                 ;
        je no_need                         ;
        mov soundstatus, 0                 ;
        call EndPlayer                     ;
                                           ;
no_need:                                   ;
        call surprise                      ;
                                           ;
        mov cs:events, 1                   ;
        pop soundstatus                    ;
        call restore_from_page_3           ;
        jmp browse_loop                    ;
password_activated endp                    ;
;============================================================================