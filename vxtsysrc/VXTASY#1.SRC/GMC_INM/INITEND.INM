; ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
; ³ (c) Lord Julus - 2000                Vxtasy #1 - Magazine source code ³
; ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

;==========( The procedure that makes all the initializations )==============

initialize1 proc near                      ;
           mov ax, ds                      ;
           mov cs:[data1_seg], ds          ;
           mov cs:[data2_seg], ds          ;
           call savescreen                 ; save screen
           call savepalette                ;
           call fadeout                    ;
           call WaitVerticalRetrace        ;
           ret                             ;
initialize1 endp                           ;
                                           ;
initialize2 proc near                      ;
           mov ax,3                        ;
           int 10h                         ;
           mov ax,500h                     ;
           int 10h                         ;
           mov al,3                        ;
           mov ah,2                        ;
           mov dx,1900h                    ;
           xor bh,bh                       ;
           int 10h                         ;
           mov ax,0100h                    ; hide the cursor
           mov cx,0800h                    ;
           int 10h                         ;
           mov cs:events, 0                ;
           call setnewint9                 ; set new keyboard vector
           call setnewint1c                ;
           mov current_popup, 1            ;
           mov current_popit, 1            ;
           mov onlyactualize, 0            ;
           mov actualizate, 0              ;
           mov anysave, 0                  ;
           mov in_gfc, 0                   ;
           call setfont                    ;
           call setpalette                 ;
           call calculate_menus            ;
                                           ;
           if musicon                      ;
           cmp no_sound, 1                 ;
           je dont_do_it                   ;
           mov soundstatus, 1              ;
           push es                         ;
           mov  ax,seg module              ; player initialization stuff
           mov  es,ax                      ;
           call initplayer                 ;
           jc no_adlib                     ;
           call setint                     ;
           pop es                          ;
           jmp  dont_do_it                 ;
                                           ;
no_adlib:                                  ;
           mov no_sound, 1                 ;
                                           ;
dont_do_it:                                ;
           endif                           ;
                                           ;
           ret                             ;
initialize2 endp                           ;

;==========( Finish procedure )==============================================

finish proc near                           ;
           if musicon                      ;
           cmp no_sound, 1                 ;
           je dont_restore_it              ;
           call ResetInt                   ;
           call EndPlayer                  ;
dont_restore_it:                           ;
           endif                           ;
           Call setoldint9                 ; restore int 9 handler
           call setoldint1c                ;
           call deinit_mouse               ;
           call destroyscreen              ;
           call savepalette                ;
           call brightout                  ;
           call WaitVerticalRetrace        ;
           mov ax, 0b800h                  ;
           mov es, ax                      ;
           mov cx, 80*25                   ;
           mov ax, 0720h                   ;
           xor di, di                      ;
           rep movsw                       ;
           call fadeout                    ;
           call WaitVerticalRetrace        ;
           mov ax, 0003h                   ; restore text mode
           int 10h                         ;
           call restorescreen              ; restore screen
           ret                             ;
finish endp                                ;
;============================================================================