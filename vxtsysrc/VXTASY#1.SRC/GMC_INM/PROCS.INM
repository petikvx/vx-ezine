; ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
; ³ (c) Lord Julus - 2000                Vxtasy #1 - Magazine source code ³
; ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

;==========( Procedures called by the popup items )==========================

; Customize these procedures to do whatever you want

proc00:
        lea dx, art_00
        call gfc_start
        ret


proc11:
        lea dx, art_11
        call gfc_start
        ret

proc12:
        lea dx, art_12
        call gfc_start
        ret

proc13:
        lea dx, art_13
        call gfc_start
        ret

proc14:
        lea dx, art_14
        call gfc_start
        ret

proc15:
        lea dx, art_15
        call gfc_start
        ret

proc16:
        lea dx, art_16
        call gfc_start
        ret

proc17:
        lea dx, art_17
        call gfc_start
        ret


proc21:
        lea dx, art_21
        call gfc_start
        ret

proc22:
        lea dx, art_22
        call gfc_start
        ret

proc23:
        lea dx, art_23
        call gfc_start
        ret

proc24:
        lea dx, art_24
        call gfc_start
        ret

proc25:
        lea dx, art_25
        call gfc_start
        ret

proc26:
        lea dx, art_26
        call gfc_start
        ret

proc27:
        lea dx, art_27
        call gfc_start
        ret

proc28:
        lea dx, art_28
        call gfc_start
        ret

proc29:
        lea dx, art_29
        call gfc_start
        ret

proc2a:
        lea dx, art_2a
        call gfc_start
        ret

proc2b:
        lea dx, art_2b
        call gfc_start
        ret

proc2c:
        lea dx, art_2c
        call gfc_start
        ret

proc2d:
        lea dx, art_2d
        call gfc_start
        ret

proc2e:
        lea dx, art_2e
        call gfc_start
        ret


proc31:
        lea dx, art_31
        call gfc_start
        ret

proc32:
        lea dx, art_32
        call gfc_start
        ret

proc33:
        lea dx, art_33
        call gfc_start
        ret

proc34:
        lea dx, art_34
        call gfc_start
        ret

proc35:
        lea dx, art_35
        call gfc_start
        ret

proc36:
        lea dx, art_36
        call gfc_start
        ret


proc41:
        lea dx, art_41
        call gfc_start
        ret

proc42:
        lea dx, art_42
        call gfc_start
        ret

proc43:
        lea dx, art_43
        call gfc_start
        ret

proc44:
        lea dx, art_44
        call gfc_start
        ret

proc45:
        lea dx, art_45
        call gfc_start
        ret

proc46:
        lea dx, art_46
        call gfc_start
        ret

proc47:
        lea dx, art_47
        call gfc_start
        ret

proc48:
        lea dx, art_48
        call gfc_start
        ret

proc49:
        lea dx, art_49
        call gfc_start
        ret

proc4a:
        lea dx, art_4a
        call gfc_start
        ret

proc4b:
        lea dx, art_4b
        call gfc_start
        ret

proc4c:
        lea dx, art_4c
        call gfc_start
        ret

proc4d:
        lea dx, art_4d
        call gfc_start
        ret


proc51:
        lea dx, art_51
        call gfc_start
        ret

proc52:
        lea dx, art_52
        call gfc_start
        ret

proc53:
        lea dx, art_53
        call gfc_start
        ret

proc54:
        lea dx, art_54
        call gfc_start
        ret

proc55 proc near
        lea dx, art_55
        call gfc_start
        ret
proc55 endp

proc56 proc near
        lea dx, art_56
        call gfc_start
        ret
proc56 endp

proc57 proc near
        lea dx, art_57
        call gfc_start
        ret
proc57 endp

proc58:
        lea dx, art_58
        call gfc_start
        ret

procedures proc near
        mov cs:events, 0
        pusha
        push ds
        push es

        mov ax, current_popup
        cmp ax, exit_bar
        jne no_exit_pressed
        mov ax, current_popit
        cmp ax, exit_pop
        jne no_exit_pressed
        mov exit_flag, 1
        jmp return_to_innocence

no_exit_pressed:
        mov ax, current_popup
        push ax
        mov ax, current_popit
        push ax
        call locate_popup_item_name
        dec si
        lodsb
        lea di, item_links
        dec ax
        shl ax, 1
        add di, ax
        mov ax, word ptr [di]
        call ax

return_to_innocence:
        pop es
        pop ds
        popa
        mov cs:events, 1
        ret
procedures endp
