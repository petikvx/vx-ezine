                   Allenware.com Batch Library
                    StudyPack 5 (study05.zip)
         Transferring files with FTP under Batch file control
                   For use in Windows 95/98/ME

===Disclaimer

This package is provided free of charge. It is purely for educational
and study purposes. Use it at your own risk. No warranties are given.
Never use a computer unless all valuable data are properly backed up.


===Version information

This is Version 1.01


===StudyPack 5 files in study05.zip

 README.TXT     Common README file contained in all StudyPacks
 BATFTP.TXT     This file
 BATFTP1.BAT    Simple template for basic Batch FTP
 BATFTP2.BAT    FTP using command line parameters for:
                 (a) RemoteSiteName UserName PassWord
 BATFTP3.BAT    FTP using command line parameters for
                 (a) RemoteSiteName UserName PassWord
                 (b) list of files to PUT to remote site
 BATFTP4.BAT    FTP using command line parameters for
                 (a) RemoteSiteName UserName PassWord
                 (b) list of files (including wildcards) to PUT to remote site
 BATFTP5.BAT    FTP using command line parameters for
                 (a) RemoteSiteName UserName PassWord
                 (b) list of files (including wildcards) to PUT to remote site
                 Identifies file type and uses ASCII or BINARY accordingly
 BATFTP6.BAT    FTP using command line parameters for
                 (a) RemoteSiteName UserName PassWord
                 (b) list of files (including wildcards) to PUT to remote site
                 Identifies file type and uses ASCII or BINARY accordingly
                 Suppresses session display; displays simple progress messages
 BATFTP7.BAT    FTP using command line parameters for
                 (a) RemoteSiteName UserName PassWord
                 (b) list of files (including wildcards) to PUT to remote site
                 Identifies file type and uses ASCII or BINARY accordingly
                 Logs session display; displays simple progress messages
                 (Identical to BATFTP6.BAT except for redirection to LogFile)


===Introduction to StudyPack 5

The standard Microsoft FTP command is fully-scriptable, and all its FTP
operations can be controlled from a Batch file. This is a convenient way
to automate FTP processes.

The sections below describe each of the example Batch files, list the
syntax for command-line use of FTP and detail the FTP commands that are
available.


===Instructions for using StudyPack 5

The example Batch files are fully documented with comments to explain
how they work.

When you study or run them, you must use your own FTP SiteName, UserName,
and PassWord, and specify your own remote FolderName. Run the examples
as Batch files at the MS-DOS prompt in the normal way. The Batch files
will create an FTP script for you, open the FTP session automatically,
and run the FTP process without needing any interaction with a user.

BATFTP1.BAT is a simple template you can alter to suit basic needs.

BATFTP2.BAT and BATFTP3.BAT are similar, but show how to write a Batch
file where the FTP SiteName, UserName, and Password are entered on the
command line. BATFTP3.BAT also shows the syntax to process an indefinite
list of filenames on the command line, one-by-one, using a SHIFT loop.

SHIFT loops are explained in detail in our Batch File Course (Lesson 20).

BATFTP4.BAT shows how to modify the SHIFT loop to process wildcards in
the list of filenames, so that it can be used thus:

  batftp4.bat my.sitename.net myuser mypasswd *.htm *.css

to process all files matching those wildcards.

BATFTP5.BAT is a more practical extension of BATFTP4.BAT, which includes
automatic detection of file transfer type. Files are transferred as type
BINARY unless they are in the list of ASCII extensions (in which case
they are transferred as type ASCII). So you could use:

  batftp5.bat my.sitename.net myuser mypasswd *.htm *.cgi *.zip

and the HTM and CGI files would be transferred as ASCII types, but the
ZIP files would be transferred as type BINARY. BINARY transfers handle
files exactly as they are. ASCII transfers change the UNIX line endings
(single LineFeed) to PC style line endings (CarriageReturn LineFeed).

It's important to transfer files as the correct type, or they may become
corrupted (in the case of binary files) or not work properly (in the case
of CGI or Perl scripts).

BATFTP6.BAT and BATFTP7.BAT implement all the features of BATFTP5.BAT
and add the ability to display progress messages on screen as the FTP
transfer proceeds. This is done by using !commands to have the FTP
session recall a Subroutine in the current Batch script.

This enables the session information to be suppressed (in the case
of BATFTP6.BAT) or logged to a file (in the case of BATFTP7.BAT) while
at the same time displaying simple progress messages to reassure you
that the transfer is in progress.

In each case, the Batch files use the remote folder name:

/work/myfiles

You must change this to specify the correct remote folder name.


===Command-line syntax for Microsoft FTP

Transfers files to and from a computer running an FTP server service
(sometimes called a daemon). FTP can be used interactively.

FTP [-v] [-d] [-i] [-n] [-g] [-s:filename] [-a] [-w:buffersize] [-A] [host]

  -v             Suppresses display of remote server responses.
  -n             Suppresses auto-login upon initial connection.
  -i             Turns off interactive prompting during multiple file
                 transfers.
  -d             Enables debugging.
  -g             Disables filename globbing (see GLOB command).
  -s:filename    Specifies a plain text file containing FTP commands;
                 the commands will run automatically after FTP starts.
                 Use this switch instead of redirection with > operator.
  -a             Use any local interface when binding data connection.
  -A             login as anonymous.
  -w:buffersize  Overrides the default transfer buffer size of 4096.
  host           Specifies the host name or IP address of the remote
                 host to connect to.

Notes:
  - mget and mput commands take y/n/q for yes/no/quit.
  - Use Control-C to abort commands.


==Using the FTP command in immediate mode

At the MS-DOS command prompt, type:

  ftp

and press [Enter]. You can add any switches from the above list to the
basic FTP command before you press the [Enter] key.

An FTP session opens, and you can use any of the commands in the section
below headed "Microsoft FTP commands". Press the key [?] to see a brief
list of the commands. End your session with the QUIT command.

To see a list of FTP switches, at the MS-DOS command prompt type:
  ftp -?

Note: Transfering Filenames that contain [Space]s

  For Filenames that contain [Space]s, use "double-quotes" around them
  in PUT, MPUT, GET, MGET and similar operations.

==Using FTP non-interactively with a script

At the MS-DOS command prompt or in a Batch file, use:

  ftp -i -s:ftpscript

where ftpscript is your FTP script file name. This should be a plain
text file consisting of FTP commands and closing with the QUIT, BYE,
or CLOSE commands, to end the session. The -i switch will normally be
used along with the -s switch (to avoid prompting during wildcard file
transfers).

You can create the FTP script file on-the-fly in a Batch file (as in
the example Batch files in this StudyPack).


===Microsoft FTP commands

Note: for commands that are not built in, you can use the LITERAL
      command - see the next section below entitled:
      Using the LITERAL command for sending commands not built in


Command       Purpose

!             Runs the specified command on the local computer.

?             Displays descriptions for ftp commands. Identical to help.

append        Appends a local file to a file on the remote computer,
              using the current file type setting.

ascii         Sets the file transfer type to ASCII, the default.

bell          Toggles a bell to ring after each file transfer command is
              completed. By default, the bell is off.

binary        Sets the file transfer type to binary.

bye           Ends the FTP session with the remote computer and exits ftp.

cd            Changes the working directory on the remote computer.

close         Ends the FTP session with the remote server and returns to
              the MS-DOS prompt.

debug         Toggles debugging. When debugging is on, each command sent
              to the remote computer is displayed. Commands are preceded
              by the string --->. By default, debugging is off.

delete        Deletes files on remote computers. Use "double-quotes" for
              filenames that contain [Space]s in them.

dir           Displays a list of a remote directory’s files and subdirectories.

disconnect    Disconnects from the remote computer, retaining the ftp prompt.

get           Copies a remote file to the local computer, using the
              current file transfer type. Use "double-quotes" for filenames
              that contain [Space]s in them.

glob          Toggles filename globbing. Globbing permits use of wildcard
              characters in local file or path names. By default, globbing
              is on.

hash          Toggles hash-mark (#) printing for each 2048 bytes data block
              transferred. By default, hash-mark printing is off.

help          Displays descriptions for FTP commands.

lcd           Changes the working directory on the local computer. By
              default, the current directory on the local computer is used.

literal       Sends arguments, verbatim, to the remote FTP server. A
              single FTP reply code is expected in return.

ls            Displays an abbreviated list of a remote directory’s files
              and subdirectories.
              Useful ls options: ls -a   (list all files including hidden)
                                 ls -l   (verbose format listing)

mdelete       Deletes multiple files on remote computers.

mdir          Displays a list of a remote directory’s files and subdirectories.
              Allows you to specify multiple files.

mget          Copies multiple remote files to the local computer using the
              current file transfer type. Use "double-quotes" for single
              filenames that contain [Space]s in them.

mkdir         Creates a remote directory. Use "double-quotes" for directory
              names that contain [Space]s in them.

mls           Displays an abbreviated list of a remote directory’s files and
              subdirectories.

mput          Copies multiple local files to the remote computer, using the
              current file transfer type. Use "double-quotes" for single
              filenames that contain [Space]s in them.

open          Connects to the specified FTP server.

prompt        Toggles prompting. During multiple file transfers, ftp
              provides prompts to allow you to selectively retrieve or
              store files; mget and mput transfer all files if prompting
              is turned off. By default, prompting is on.

put           Copies a local file to the remote computer, using the
              current file transfer type. Use "double-quotes" for filenames
              that contain [Space]s in them.

pwd           Displays name of the current directory you are using on
              the remote computer.

quit          Ends the FTP session with the remote computer and exits ftp.

quote         Sends arguments, verbatim, to the remote FTP server. A
              single FTP reply code is expected in return. Identical
              to literal.

recv          Copies a remote file to the local computer, using the
              current file transfer type. Identical to get. Use
              "double-quotes" for filenames that contain [Space]s in them.

remotehelp    Displays help for remote commands.

rename        Renames remote files.

rmdir         Deletes a remote directory. Use "double-quotes" for directory
              names that contain [Space]s in them.

send          Copies a local file to the remote computer, using the
              current file transfer type. Identical to put. Use
              "double-quotes" for filenames that contain [Space]s in them.

status        Displays the current status of FTP connections and toggles.

trace         Toggles packet tracing; displays the route of each packet
              when running an FTP command.

type          Sets or displays the file transfer type.

user          Specifies a user to the remote computer.

verbose       Toggles verbose mode. If on, all FTP responses are
              displayed; when a file transfer completes, statistics
              regarding the efficiency of the transfer are also
              displayed. By default, verbose is on.

==End of FTP command list


===Using the LITERAL command for sending commands that aren't built in

For commands that are not built in to Microsoft FTP, you can use the
LITERAL command to send exact text.

For example, when files are PUT to the remote machine with FTP, they
are allocated default permissions: -rw-r--r-- (which means Read/Write
for owner, Read-Only for Group, and Read-Only for others). This is the
normal permission set for, say, a Web page or an associated file such
as a Cascading Style Sheet, or a JavaScript file.

-rw-r--r-- translates to 644 in numeric form. To convert to numeric
format, you simply translate each group of three after the first dash
(the directory flag position) as separate three-bit binary numbers.

Owner rw-  = 110 binary = 6 decimal
Group r--  = 100 binary = 4 decimal
Other r--  = 100 binary = 4 decimal

so the permission set -rw-r--r-- = 644

If you upload (PUT) a Perl Script to a remote machine, you will need to
assign eXecute permission for Owner/Group/Other, thus:  -rwxr-xr-x

-rwxr-xr-x translates to 755 in numeric form

Owner rwx  = 111 binary = 7 decimal
Group r-x  = 101 binary = 5 decimal
Other r-x  = 101 binary = 5 decimal

The command to modify permissions is CHMOD (CHange MODe), and in an FTP
session, you need to prefix it with the SITE command (get/set any SITE
specific information on remote machine).

For example if you upload a Perl Script thus:
  put perlscript.pl

you need to use the further command:
  site chmod 755 perlscript.pl

to make it executable for Owner/Group/User. Microsoft FTP doesn't
include the SITE or CHMOD commands, so you need to use LITERAL to
send this command line. The following screen capture from an FTP
session shows the syntax in operation with some sample files:

The three FTP commands used are:

  ls -l (to list files with permissions - equivalent to DIR)
  literal site chmod 755 perlscript.pl (to change the permissions)
  ls -l (to re-list files with permissions - equivalent to DIR)

============Screen capture in Windows 95/98/ME FTP session:
ftp> ls -l
200 PORT command successful.
150 Opening ASCII mode data connection for file list.
-rw-r--r--   1 owner    group       10054 Jan 15 12:01 datafile.txt
-rw-r--r--   1 owner    group        3389 Jan 15 12:02 filename.ext
-rw-r--r--   1 owner    group       12910 Jan 15 12:03 moredata.htm
-rw-r--r--   1 owner    group        8150 Jan 15 12:04 perlscript.pl
226 Transfer complete.
ftp: 277 bytes received in 0.05Seconds 5.54Kbytes/sec.
ftp> literal site chmod 755 perlscript.pl
200 SITE CHMOD command successful.
ftp> ls -l
200 PORT command successful.
150 Opening ASCII mode data connection for file list.
-rw-r--r--   1 owner    group       10054 Jan 15 12:01 datafile.txt
-rw-r--r--   1 owner    group        3389 Jan 15 12:02 filename.ext
-rw-r--r--   1 owner    group       12910 Jan 15 12:03 moredata.htm
-rwxr-xr-x   1 owner    group        8150 Jan 15 12:04 perlscript.pl
226 Transfer complete.
ftp: 277 bytes received in 0.06Seconds 4.62Kbytes/sec.
ftp>
============End screen capture


               We hope you find this StudyPack useful


                     William and Linda Allen
 (c) Copyright Allen & Company 2003 - all rights reserved (c)
