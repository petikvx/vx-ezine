

                                   BatMenu

                             V1.00    28-Jun-1989
    
                 Copyright (C) 1989 by Simple Solutions, Inc.
                             All Rights Reserved

                             A Shareware Product
                                     from

                            Simple Solutions, Inc.
                               P.O. Box 640189
                               Kenner, LA 70064
                                (504) 464-5748

                                  Written by
                              Mark W. Geisinger

                                CIS 76440,76
                             GEnie M.GEISINGER
                               BIX m.geisinger


BatMenu is a menu utility intended to be used within DOS batch files.  Well,
that's how it started out anyway.  Explore some of the possibilities here and
you'll see its a bit more than just a "menu utility".

BatMenu provides you with a simple interface into a powerful menu control
system which allows you considerable flexibility in displaying windowed text
and prompting your batch file user for a response.  The user of your batch
files is given a sophisticated interface including intelligent circular
scrolling of the highlight bar and bi-directional scrolling of text.

BatMenu is a copyrighted work and has been released for distribution as
SHAREWARE.  Please read the file LICENSE.DOC before using BatMenu.

Overview
--------

BatMenu uses a data file for menu text storage and allows you to store
numerous menus in a single file through the use of "keyword" system. Keywords
are identified in the data file by a "keyword character", or marker,
preceding the keyword as the first character on a line.  The data file size
limits are generous.  You are allowed up to 500 lines of 76 characters each. 

Menu selections are returned to your batch file (or other calling program)
via the DOS errorlevel.  There are ten possible values for errorlevel, 0
through 9.  BatMenu reserves 0 (zero) as an error indicator, leaving values 1
through 9 available for your use.

Menu Limits
-----------

A single menu may, in theory, contain up to 500 lines.  As a practical matter
however, each menu is limited to 9 choices which return a unique value to
your batch file.  The return values correspond directly with the order of the
menu items.  The first menu item sets errorlevel to 1, the ninth menu item
will set errorlevel to 9.

If an error occurs, BatMenu returns with errorlevel set to zero.  You'll
find that the error checking in BatMenu is very good for the most likely to
occur errors.  Additionally, an error message is generated if BatMenu aborts
for any reason.

Menus with more than nine choices will function properly, except that the
highest return value is 9, so any menu selection by the user past the ninth
item will return with errorlevel set to 9.  This is a limit imposed by using
errorlevel as a method of communication with the batch file, not one imposed
by BatMenu's menu system.

Windows with BatMenu
--------------------

While BatMenu was not developed as a windowing system, menus and windows here
are closely related and much of the work necessary to display windowed text
has been done in the implementation of the menu system.

You can take advantage of this by using BatMenu to display formatted text in
a window. Bi-directional scrolling is allowed. This should come in handy if
you want to place an attractive message on the screen or allow a user of your
batch file to scroll through text or instructions of some kind.  The demo
batch file included here has several examples of just such a usage of
BatMenu.

By the way, if you like this aspect of BatMenu let me know.  As I said, much
of the work for a windowing system is place for the menus. Enhancing the
windowing capabilities is certainly possible given the demand for it.

Menu/Window Definition
----------------------

Menu definition with BatMenu is simple.  You tell it where to place the menu
and what size it should be.  This is done with four command line parameters
that represent the first-row, first-column, number-rows, and the
number-columns for the menu.  The command line parameters are named as 'fr',
'fc', 'nr', and 'nc' in the abstract below.

Here's the fun part.  This is how you specify to BatMenu where to place the
menu on the screen and what size it should be.  While this is very simple, it
may not be as straightforward as it first appears.  The reason for my
qualification of its simplicity is that you must realize that you are
specifying the menu window borders, not just the size of the text area.

BatMenu will attempt to put a leading and trailing space on each line in the
window to separate it from the border. This means the total width of a menu
will be the length of your longest line (limited to 76 char. in the
BATMEN.TXT file) plus 2 characters for the left and right borders, plus two
characters for spacing.  Simply stated, line length + 4 = number-columns.

    For instance, if you want a menu that borders your text tightly
    on all sides...

       Assuming your menu's first-column is 10
       and your longest menu line is 20 characters
       then, specify the number-columns with the calculation -

             first-column + number-columns + 4
                            or
                 10       +       20       + 4 = 34

       Thus, 34 would be specified on the command line for the
       'nc' parameter.


Formatted Text
--------------

This is one place where BatMenu doesn't do all the work for you.  That's no
problem though.  You can format the text in a window or menu any way you like
in the data file BATMEN.TXT.  Formatting should be done with spaces, not
embedded tab characters.  Just decide how you want your text to appear in the
window (with consideration of window size, of course), and use your favorite
text editor to edit the BATMEN.TXT file.  Take a look at the BATMEN.TXT
included with BatMenu and you'll see several examples used in the BatDemo
file (I really should go see the movie...).

BatMenu will allow the user to scroll forwards or backwards through text that
is larger than the window.  This is bi-directional vertical scrolling.  No
provision is made for horizontal scrolling.  Additionally, long lines will be
truncated when displayed, so check your line length against the window size
you are using to make sure that nothing gets zapped from the end of a line.
This applies to both windows and menus.


The BATMEN.TXT Data file
------------------------

BatMenu uses a simple ASCII text file for its menu and window data.  The file
must be named BATMEN.TXT.  An example BATMEN.TXT file is included with
BatMenu for use in the demo.  BatMenu uses a very simple "keyword" system to
allow you to store as many menus or windows as you like in the BATMEN.TXT
file.

==== Storing Menu/Window text in the Data file

The data stored for a menu or window is simply the ASCII text that will be
displayed in the menu or window.  No translation of characters is done, so
you shouldn't include any control characters or non-printing characters. 
Spacing or formatting should be done only with true spaces, not embedded tab
characters.  Other than that, whatever text you put into the file will be
displayed in the format (spaced) you wrote it.

==== The "keyword" system

Different menus or windows are distinguished in the data file using the
"keyword" method mentioned previously.  This is a very simple method that
allows you to store numerous groups of text in one file.  You may think of
the data file being divided into sections by the keywords and you may access
or use any individual section by telling BatMenu which one to use by giving
it the proper keyword.

A keyword in the data file must start with an asterisk, '*', and the asterisk
must be the first character on the line containing the keyword.  The
remainder of keyword may be any combination of characters or words that may
otherwise be used in the data file.  The keyword must be the only text on the
line.  You should keep the keywords relatively short, since you must pass a
keyword to BatMenu on the command line, but there is no need to be cryptic. 

For instance, the following illustrates two groups separated by keywords.

*Resident utility menu
1) Install SideKick
2) Install PC-Tools
3) Install Cache
*Apps menu
   A) WordPerfect
   B) dBASE
   C) R:BASE

   In order to use the *Resident utility menu you could call BatMenu
   like this:

   batmen -t "TSR Menu" -l 1 -k "*Resident utility menu" 10 12 5 23

   That command line tells BatMenu to use "TSR Menu" as the menu's title,
   highlight only the first character, use the *Resident utility menu, start
   the menu at row 10, col 12, and there are 5 rows in the menu (includes
   top and bottom border) and there are 23 col in the menu (19 char is the
   longest line, plus 4 for the border and spacing).

Please note the quotation marks around the parameters on the command line
that have embedded spaces (more than one word). THIS IS ABSOLUTELY NECESSARY!

Simple, isn't it.  You can have as many of these blocks as you want in a data
file, within the restrictions set forth below.  Text for windows works the
same way.

By the way, you are not restricted from using the asterisk in the text of
your menus, it just can't be the first character on the line.  


==== BATMEN.TXT Location

I don't like programs that force me to keep data files (or anything else for
that matter) in only one special place, like the root directory of drive C:
for instance.  Along those lines, and because this is my personal pet peeve,
you can put the BATMEN.TXT file anywhere you like, as long as BatMenu can
either find it or you specify its storage location by using the '-p' command
line switch with the complete path (no file name, just the path) to the
BATMEN.TXT file.

BatMenu will try to find the file in the two most likely locations so you may
not need the option of specifying a path.  BatMenu will first look in the
current directory for the file.  If it doesn't find it there, it checks the
directory where it (BatMenu.EXE) was executed from for the file. If either of
these are ok with you, then nothing more is required.  If you want to keep
the BATMEN.TXT file somewhere else, or perhaps use several of them, you may
do so by using the '-p' switch.

==== BATMEN.TXT Storage Limits

There are only two limits to the amount of data that may be stored in the
BATMEN.TXT file.  You should not store more than 500 lines in the file and no
line should contain more that 76 characters.  You may have as many menus or
windows in the file as you like though (within the stated limits).  The
reason these limits are imposed is simple, but they are not set in stone.
The 500 line limit seems like a fair compromise between memory usage and
functionality.  The 76 character line length limit is based on the common 80
column display and the fact that the menu/window borders and spacing
requires 2 characters on each side (left and right).

You may have as many of these BATMEN.TXT files as you like, (see BATMEN.TXT
Location for how to do this) so I don't think anyone will have any problem
with the size limitations as they are.  If you have a special need for larger
BATMEN.TXT files, please feel free to contact me about it.  I will be glad to
modify this for any registered user.


A Note on Video Displays
------------------------

BatMenu should operate as expected on CGA, EGA, and VGA systems.  I developed
BatMenu on a standard, boring, monochrome system.  I have no direct method to
test its performance or behaviour on other video systems.  If you find
problems with BatMenu on your system, please let me know and I will attempt
to resolve them.


Usage:
------

BatMenu should be executed in the following manner:

batmen 
[[-t "menu title"] [-p path to batmen.txt] [-l n] [-c] [-k "*kwd"] fr fc nr nc
        
        Brackets indicate optional parameters.

    Parameters:

        -t  Menu Title
            Optional
            Default: No menu title

            BatMenu offers you the option of placing a title on menu border.
            The title is automatically centered for you. Enclose the text of
            the title in double quotes if there are embedded spaces (more
            than one word).

        -p path to BATMEN.TXT
            Optional
            Default: see below

            Use this switch to tell BatMenu where to find its file, BATMEN.TXT.
            This is optional and is provided for your convenience in case you
            like to have a program keep its data files where YOU want them,
            not where it thinks they should be (it is YOUR computer, right?).
            If you use this option, specify the full DOS path to the file
            BATMEN.TXT, but not the filename (ie. -p c:\bin\). Please note
            that the trailing slash, '\', on the end of the path is needed.

            You may not even need this option.  Let me explain how BatMenu
            attempts to find its data file.  BatMenu will first look in the
            current directory for the BATMEN.TXT file.  If it doesn't find
            it there, it checks the directory where it (BatMenu.EXE) was
            executed from for the file.  If either of these are ok with you,
            then nothing more is required.  If you want to keep the BATMEN.TXT
            file somewhere else, or perhaps use several of them, you may do
            so with this option.

        -l n   Length of highlighted portion of menu line
               Optional
               Default: highlight entire line

            BatMenu provides you the option of highlighting only a portion of
            the menu line.  You specify this option with the '-l' (lower case
            L) switch and the number of characters you would like highlighted.
            This allows you to have explanatory text follow each menu choice
            displayed in normal video.  Highlighting always begins with the
            first character on the line (ie. you can highlight just the first
            5 characters of a line but not the last 5).

        -c  Clear the screen
            Optional
            Default: No screen clear

            BatMenu offers you the option of having it clear the screen for
            you.  This is here mostly because it is easy to implement and
            seems to go well with a menu or window utility. You can do this
            just as easily in your batch file, although BatMenu may be
            slightly faster (we're talking fractions of a second here...)

            The screen clear is performed before any other screen writing is
            done.

        -k "*kwd with marker"
            Optional (see text)
            Default: None

            As you'll see shortly, BatMenu allows you to store the text for
            numerous menus in one BATMEN.TXT (the limit is 500 lines of 76
            characters each). In order to allow this, a "keyword" method of
            locating the text for any particular menu is implemented.

            In order for keywords to be distinguishable from other text, a
            marker, or keyword character, must precede each keyword in the
            BATMEN.TXT file.  You must also include this marker with the '-k'
            switch, as indicated above. The marker chosen is an asterisk,
            '*', and must not appear as the first character on any line other
            than one specifying a keyword.

            As indicated in the abstract above, this switch is optional.  You
            may have a BATMEN.TXT file with only the text for one menu and
            thus not need a keyword.  I suspect that this will generally not
            be the case.

        fr fc nr nc -- read as: first-row first-column
                                number-rows number-columns
            Required
            Default: None

            Specify the menu dimensions as

                    fr        fc           nr           nc
                first-row first-column number-rows number-columns

            IMPORTANT:

               See the discussion above on Menu/Window Definition.
               There's nothing complex about this, but you must take into
               consideration the size the borders and horizontal spacing in
               addition to the size of your text when calculating these
               parameters.

        NOTE:

            For those command line options that require a parameter it is
            important that you include a space between the switch and the
            parameter as illustrated above.

            Executing BatMenu with no command line will cause a help screen
            to be displayed.


Questions and Support:
----------------------

I believe that you will find BatMenu very easy to use.  If you do experience
any problems, or have a question or comment, please let me hear from you.  I
can be contacted as indicated below.


    Mail:           Mark W. Geisinger
                    Simple Solutions, Inc.
                    P.O. Box 640189
                    Kenner, LA 70064

    Phone:          (504) 464-5748

    Compuserve:     76440,76
         GEnie:     M.GEISINGER
           BIX:     m.geisinger


Please see the file LICENSE.DOC for the license agreement and registration
form.


                                  Disclaimer

BatMenu is inherently complex and may not be completely free of errors.  SSI
will not be responsible for any costs or damage associated with loss of use
of the Licensed Product or any other resources, loss of business or profits,
any loss of data, any third party claims, or costs of substitute programs. IN
NO EVENT WILL SSI BE LIABLE FOR ANY INCIDENTAL, INDIRECT, SPECIAL,
CONSEQUENTIAL OR PUNITIVE DAMAGES SUFFERED BY THE LICENSEE OR ANY OTHER
PERSON OR ENTITY, WHETHER FROM THE USE OF THE LICENSED PRODUCT, ANY FAILURE
THEREOF, OR OTHERWISE EVEN IF SSI OR ITS DEALERS OR AGENTS ARE AWARE OF THE
POSSIBILITY OF SUCH DAMAGES.  THIS CONSTITUTES SSI'S SOLE WARRANTY, EXPRESS
OR IMPLIED, AND LICENSEE WAIVES ALL OTHER WARRANTIES INCLUDING WITHOUT
LIMITATION, WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
PURPOSE.

