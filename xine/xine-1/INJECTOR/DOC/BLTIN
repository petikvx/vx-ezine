List of built-in command that can be activated with do:

inject:
	Sends the packet in the file refered by the variable "infile". If
	"filleth" is defined then the ethernet from field is filled
	by the current ethernet from address. The same for "fillethto". 

injectip:
	Sends the packet in the file refered by the variable "infile". If
	"filleth" is defined then the ethernet from field is filled by the
	current ethernet from adress. The same for "fillethto". If the 
	variable "fillipfrom" is defined then the value of "myip" is
	set instead of the "From IP" in the original packet. If the
	variable "fillipto" is defined then the value of the "toip" is
	set instead of the "To IP" in the original packet. If the
	variable "portto" is set then the destination port of the packet
	is changed to the value of "portto". If the variable "portfrom" is
	set then the source port of the packet is changed to the value of
	"portfrom". The port modifications applies only to TCPIP or UDPIP
	packets. Of course after all these changes all the checksums are
	recalculated where needed.

rawlog:
	Starts raw logging to file raw.log until a key is pressed.

getarp:
	Generates an ARP request for the IP adress defined by the variable
	"arpip" and stores the HW adress from the reply (of course if
	there has been a reply in  a short time) into the current ethernet
	FROM adress. If the variable "myarpip" is defined then the arp
	requested will be made as from the IP defined by the "myarpip"
	value.

getarpto:
	Generates an ARP request for the IP adress defined by the variable
	"arpip" and stores the HW adress from the reply (of course if
	there has been a reply in a short time) into the current ethernet
	TO adress. If the variable "myarpip" is defined then the arp
	requested will be made as from the IP defined by the "myarpip"
	value.

flood:
	Sends the packet in the file refered by the variable "infile" for
	an amount of time that is defined in the variable "pktnumber".

synflood:
	This is a more complex example of flooding. Infact this will try
	to flood the server specified by the variable "synip" (ex. set
	synip 192.166.123.2) sending TCP request to start a connection
	(SYNs) from host port specified by the variable "synportfrom" to
	the host port specified by the variable "synportto" (ex. if you
	set synportfrom to 5 and synportto to 15 it will send requests to
	start a TCP connections to all the ports from 5 to 15). The number
	of SYN packets that will be sent is defined by the variable
	"synpkt" (ex. set synpkt 20 will sent 20 packets to each port from
	the synportfrom to the synportto). This functionw will also
	provide to change randomly the source port and the source IP.
	Remember that TCP packets in an ethernet network MUST have the
	real destination hardware adress (or the gateway hardware adress
	if you would like to go from your local network).

