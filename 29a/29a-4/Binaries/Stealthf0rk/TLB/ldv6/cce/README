+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
           Stealthf0rk's Source Code Randomizer Version 0.7
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

I hate README's, so i make it short.

SSCR is a polymorphic engine for the High Level Language C.
It generates junk instructins as if() statements, switch(), else,
while(), for() sequences as well as function calls to special
(also generated) functions. Every file wich you give to sscr,
gives you a randomized output file,wich produces the same outupt as
the original, but with tons of junk-code in it.
For example if you have a program wich makes a telnet connection to
a host and you passes its source to sscr, and compile the output,
the output-program does the same as the original. It is a bit
slower, and has random instruction in it.
To pass a .c-file clean to sscr, it must have a special format.
I give you sth.:

allowed			also allowed		not allowed
===================================================================
if(x) {			if(x) do_this();	if(x)
	do_this();					do_this();
}
-------------------------------------------------------------------
if(x) {			if(x) i++; else j++;	if(x) {
	i++;						i++;
} else {					}
	j++;					else
}							j++;
-------------------------------------------------------------------
switch(x) {					switch(x)
	case 1:					{
	...					case 1:
	...					...
}						}
------------------------------------------------------------------
for(x) {		for(x) do_it();		for(x)
	...						do_it();
}
------------------------------------------------------------------
while(x) {		while(x) do_it();	while(x)
	do_it();					do_it();
}
------------------------------------------------------------------
int foo() {					int 
	...					foo() 
}						{
						...
						}
------------------------------------------------------------------

and so on.
There are also lines like

/***4***/

wich tells sscr to read 4 lines after this line and put it
'unrandomized' to the file. So you should have this on the
the c-file:

/***2***/			<- tell sscr to leave it untouched
#include <stdio.h>		   dont put a /***6***/ to begin of this, since
#include <unistd.h>		   we need the following space here...
				<- ... sscr will include its prototypes
/***2***/			<- dont split func.defs and vars.
void main(void) {
	int i;
				<- here sscr adds its own int's
				<- junk-code goes here...
	fuxor();
				<- ... and maybe here
/***end***/			<- note this! it tells sscr that we leave the
}				   current function

Ok ?
You find an example in the .. directory (the close.c file) and a virus
wich demonstrates the power of SSCR.
Since this is an early version its maybe detectable.
But further releases will follow wich makes it absolutley clean.

Greets and Thanx go out to all my friends i'm in touch with,
and who support/love/gimme accs/mails/talks to me...

Stealthf0rk/SVAT	<stealth@dione.ids.pl>


	




