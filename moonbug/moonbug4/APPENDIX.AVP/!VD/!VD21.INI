; ╔════════════════════════════════════════════════════════════════════════╗
; ║               Virus Detector v2.0beta configuration file               ║
; ╚════════════════════════════════════════════════════════════════════════╝

; ─────────────────────────────────────────────────────────────────────────┐
; Логи и результаты. По умолчанию все файлы создаются в том же каталоге,   │
; из которого был запущен !VD20.EXE. Временный файл !vd20.flt всегда       │
; создается там (если, конечно, LogDetail=Fault или Full)                  │
;
// LogFileName=z:\!vd20.log

; None        - не вести лог
; Normal      - вести лог
; Fault       - вести только бинарный лог
; Full        - вести и бинарный, и обычный лог
LogDetail Full

; Содержит в себе список файлов, содержащих код обработчиков прерываний
; (см. опцию SaveCode), и комментарии -- какой диапазон адресов в каком
; файле записан
// HeuristicFile=z:\!vd20.emu
// ReportFile=z:\!vd20.rep

; Append - добавлять в конец файла
; Over   - перезаписывать файл
WriteLog=Append
WriteRep=Append

; ─────────────────────────────────────────────────────────────────────────┐
; Секция настроек работы с памятью                                         │
;                                                                          │

; Минимальный размер (в параграфах) MCB, который подлежит тестированию
MinMCBSize=2

; Максимальный размер (в параграфах) MCB, который будет протестирован
; Hе больше 4090 !
MaxMCBSize=1024

; Указывается в байтах
EndOfMemory=4096
EndOfLastMCB=4096

; Hа сколько уменьшать размер Conventional Memory
MemoryDecr=0

; ─────────────────────────────────────────────────────────────────────────┐
; Тестирование                                                             │
;                                                                          │

; Проверять наличие обработчиков прерываний в видеопамяти
TestB000 Off
TestB800 Off

; Тестировать подозрительные MCB
MCBTest On

; Поиск резидентных вирусов
; +1  - Renamed EXE
; +2  - EXE
; +4  - COM
TestTSRVir=7
; Использовать функции FCB
TSRFCB Yes
; Проверять наличие TSR-вирусов путем запуска файла-ловушки
TSRExec Yes
; То же, но с помощью командного просессора (%COMSPEC%)
ShellExec No
; Использовать Int 25h (проверка контрольных сумм файлов-ловушек)
UseInt25 Yes

; ─────────────────────────────────────────────────────────────────────────┐
; Разная эвристика                                                         │
;                                                                          │

; Выделять код обработчиков прерываний (для последующего анализа/записи)
MemHeuristic Yes

; Записывать код обработчиков
SaveCode Yes

; Если в коде обработчика встречаются (например) Int 9Eh, Int 60h, т.е.
; "необычные" int'ы, то пытаться определить, не являются ли они указателями
; на (опять-таки например) Int 21h, Int 13h
CalcRedirInt Yes

; Проверять, указывают ли найденые jmp/call far на точки входа в обработ-
; чики прерываний
CheckEntryPoints Yes

; None    - Hе проверять точки входа на сплайсинг
; Checked - Проверять только те точки входа, которые удалось идентифици-
;           ровать (см. CheckEntryPoints)
; All     - Проверять все точки входа
SplicingTest All

; Проверка наличия Anti-ADINF вирусов
AntiADINF Yes

InstructSet Yes

SaveCMP 6