ooOoOoÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄoOooOoÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄoOOo

  PPPPPPPPPP        VVVVVVVVVV      VVVVVVVVV  WWWWWWWW       WWWWWWWWW
    PPPPPPPPPPPP     VVVVVV            VVVVV    WWWWW           WWWWW
     PPP    PPPPPP    VVVV             VVVV    WWWWW             WWWWW
      PPP     PPPPP    VVVV           VVVV      WWWW              WWWW
       PPPPPPPPPP       VVVV         VVVV       WWWWW     W      WWWWW
       PPPPPPPP          VVVV       VVVV         WWWW    WWW     WWWW
       PPPP               VVVV     VVVV           WWWW  WW WW   WWWW
      PPPP                  VVV   VVV              WWWWWWW  WWWWWWW
     PPP                      VVVVV                 WWWWW    WWWWW
    PP                         VVV                   WWW      WWW


ooOoOoÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ [ Pinoy Virus Writers ] ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄoOOo
                             Issue No. 5

ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
                                                                          
Trojan Horse

I. Description

   A Trojan horse is an apparently useful program containing hidden
   functions that can exploit the privileges of the user [running the
   program], with a resulting security threat. A Trojan horse does things
   that the program user did not intend.

   Trojan horses rely on users to install them, or they can be installed
   by intruders who have gained unauthorized access by other means. Then,
   an intruder attempting to subvert a system using a Trojan horse relies
   on other users running the Trojan horse to be successful.  

II. Impact

   Trojan horses can do anything that the user executing the program has
   the privileges to do. This includes
     * deleting files that the user can delete
     * transmitting to the intruder any files that the user can read
     * changing any files the user can modify
     * installing other programs with the privileges of the user, such as
       programs that provide unauthorized network access
     * executing privilege-elevation attacks, that is the Trojan horse
       can attempt to exploit a vulnerability to increase the level of
       access beyond that of the user running the Trojan horse. If this
       is successful, the Trojan horse can operate with the increased
       privileges.
     * installing viruses
     * installing other Trojan horses

   If the user has administrative access to the operating system, the
   Trojan horse can do anything that an administrator can. The Unix
   'root' account, the Microsoft Windows NT 'administrator' account, or
   any user on a single-user operating system has administrative access
   to the operating system. If you use one of these accounts, or a
   single-user operating system (e.g., Windows 95 or MacOS), keep in mind
   the potential for increased impact of a Trojan horse.

   A compromise of any system on your network, including a compromise
   through Trojan horses, may have consequences for the other systems on
   your network. Particularly vulnerable are systems that transmit
   authentication material, such as passwords, over shared networks in
   cleartext or in a trivially encrypted form. This is very common. If a
   system on such a network is compromised via a Trojan horse (or another
   method) the intruder may be able to install a network sniffer and
   record usernames and passwords or other sensitive information as it
   traverses the network.

   Additionally, a Trojan horse, depending on the actions it takes, may
   implicate your site as the source of an attack and may expose your
   organization to liability.

III. How Trojan Horses Are Installed

   Users can be tricked into installing Trojan horses by being enticed or
   frightened. For example, a Trojan horse might arrive in email
   described as a computer game. When the user receives the mail, they
   may be enticed by the description of the game to install it. Although
   it may in fact be a game, it may also be taking other action that is
   not readily apparent to the user, such as deleting files or mailing
   sensitive information to the attacker. As another example, an intruder
   may forge an advisory from a security organization, such as the CERT
   Coordination Center, that instructs system administrators to obtain
   and install a patch.

   Other forms of "social engineering" can be used to trick users into
   installing or running Trojan horses. For example, an intruder might
   telephone a system administrator and pose as a legitimate user of the
   system who needs assistance of some kind. The system administrator
   might then be tricked into running a program of the intruder's design.

   Software distribution sites can be compromised by intruders who
   replace legitimate versions of software with Trojan horse versions. If
   the distribution site is a central distribution site whose contents
   are mirrored by other distribution sites, the Trojan horse may be
   downloaded by many sites and spread quickly throughout the Internet
   community.

   Because the Domain Name System (DNS) does not provide strong
   authentication, users may be tricked into connecting to sites
   different that the ones they intend to connect to. This could be
   exploited by an intruder to cause users to download a Trojan horse, or
   to cause users to expose confidential information.

   Intruders may install Trojan horse versions of system utilities after
   they have compromised a system. Often, collections of Trojan horses
   are distributed in toolkits that an intruder can use to compromise a
   system and conceal their activity after the compromise, e.g., a
   toolkit might include a Trojan horse version of ls which does not list
   files owned by the intruder. Once an intruder has gained
   administrative access to your systems, it is very difficult to
   establish trust in it again without rebuilding the system from
   known-good software. 

   A Trojan horse may be inserted into a program by a compiler that is
   itself a Trojan horse. 

   Finally, a Trojan horse may simply be placed on a web site to which the
   intruder entices victims. The Trojan horse may be in the form of a
   Java applet, JavaScript, ActiveX control, or other form of executable
   content.

IV. Solutions

   The best advice with respect to Trojan horses is to avoid them in the
   first place.
     * System administrators (including the users of single-user systems)
       should take care to verify that every piece of software that is
       installed is from a trusted source and has not been modified in
       transit. When digital signatures are provided, users are
       encouraged to validate the signature (as well as validating the
       public key of the signer). When digital signatures are not
       available, you may wish to acquire software on tangible media such
       as CDs, which bear the manufacturer's logo. Of course, this is not
       foolproof either. Without a way to authenticate software, you may
       not be able to tell if a given piece of software is legitimate
       regardless of the distribution media.
     * Use cryptographically strong validation for all software they produce
       or distribute. Any popular technique based on algorithms that are
       widely believed to be strong will provide users a strong tool to
       defeat Trojan horses.
     * Anyone who invests trust in digital signatures must also take care
       to validate any public keys that may be associated with the
       signature. It is not enough for code merely to be signed -- it
       must be signed by a trusted source.
     * Do not execute anything sent to you via unsolicited electronic
       mail.
     * Use caution when executing content such as Java applets,
       JavaScript, or Active X controls from web pages. You may wish to
       configure your browser to disable the automatic execution of web
       page content.
     * Apply the principle of least privilege in daily activity: do not
       retain or employ privileges that are not needed to accomplish a
       given task. For example, do not run with enhanced privilege, such
       as "root" or "administrator" for ordinary tasks such as reading
       email.
     * Install and configure a tool such as Tripwire® that will allow you
       to detect changes to system files in a cryptographically strong
       way. 
     * Educate your users regarding the danger of Trojan horses.
     * Use firewalls and virus products that are aware of popular Trojan
       horses. Although it is impossible to detect all possible Trojan
       horses using a firewall or virus product (because a Trojan horse
       can be arbitrary code), they may aid you in preventing many
       popular Trojan horses form affecting your systems.
     * Review the source code to any open source products you choose to
       install. Open source software has an advantage compared to
       proprietary software that the source code can be widely reviewed
       and any obvious Trojan horses will probably be discovered very
       quickly. However, open source software also tends to be developed
       by a wide variety of people with little or no central control.
       This makes it difficult to establish trust in a single entity.
       Keep in mind that reviewing source code may be impractical at
       best, and that some Trojan horses may not be evident from a review
       of the source as described in [Thompson].
     * Adopt the use of cryptographically strong mutual authentication
       systems such as ssh for terminal emulation, X.509 public key
       certificates in web servers, S/MIME or PGP for electronic mail,
       and kerberos for a variety of services. Avoid the use of systems
       that trust the domain name system for authentication, such as
       telnet, ordinary http (as opposed to https), ftp, or smtp unless
       your network is specifically designed to support that trust.
     * Do not rely on timestamps, file sizes, or other file attributes
       when trying to determine if a file contains a Trojan horse.
     * Exercise caution when downloading unauthenticated software. If you
       choose to install software that has not been signed by a trusted
       source, you may wish to wait for a period of time before
       installing it in order to see if a Trojan horse is discovered.
     * All security organizations should digitally sign any advisories or
       other alerts. Users should validate any signatures, and to beware of
       unsigned security advice. 

							- LORZ 
                                                      l0rz@mailcity.com
<OoOoo-------------------------------------------------------------------ooOoO>  	
  
      
