ฤฤฤฤฤฤฤ[PVW4.020]ฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤ
Written for the : Pinoy Virus Writers E-Zine #4
DATE : October 1998
                                % % % % %

                               - = %|% = -

 ษอออ   Hostile !!!  ออออออออออออออออออออออออออออออออออออออออออป
 ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ

                    " Hostile Applets Explanation "

  By : Lorz

-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ--

Hostile Applet web pages have been compiled and published on the web.
These are collections of Java applets that consume resources in rude or
malicious ways, so that either all the CPU or memory resources of your
computer are consumed, or, you are tricked into thinking a dangerous attack
has been launched on your computer. These hostile applets are exercising what
is known as a denial of service attack. 

For example, one attack displayed from Ladue's Georgia Tech site is an applet
that paints huge black windows on your screen, in such a way that you can't
access other parts of the screen. The applet then displays a fake name/password
dialog box, instructing you to enter your name and password in order to restart
the browser securely. (This is a deliberate attempt to cull name/password pairs
from people on the internet, and people should not enter their name/password.)
Instead, one way to recover from this applet is to kill the browser running on
your computer. On a unix system, one way to accomplish this is to remotely log
into your computer from another computer on your local network, use "ps" to
find the process ID that matches the hijacked browser's process ID, and issue
a "kill -9 PID."

Malicious or rude people might place hostile applets on web pages without
labeling the web page as hostile, of course, and it's this realization that
makes people nervous. The threat, or exposure, of visiting a page that contains
hostile applets is that the applets might 

    1. freeze your browser, by consuming all the available resources,
       or trying to grab the threads of  xecution used by other applets
    2. freeze your computer, by consuming so many resources inside the browser
       that the computer has no more resources to parcel out to other applica-
       tions
    3. pop up misleading or scary-looking windows on your workstation

We are actively investigating ways to better monitor and control resource
consumption by applets. It is hard to automatically tell the difference between
an MPEG decompressor and a hostile applet! However, there might be good ways to
let both the browser and the user specify resource limits on downloaded applets.
For example, the browser could enforce some automatic limits, and the user could
selectively override the built-in limits. We recognize the importance of providing
people with some mechanism to help them deal with hostile applets.

The problem of an applet interfering with the threads of execution of another
applet is an implementation bug in the security check for thread access. The security
policy for downloaded applets is that applets should not be able to access threads
outside their own thread group. 



There are four basic categories of applets that fall under the term hostile
applet:

   Pranks and hoaxes.  These are typically just threatening messages that cannot
damage data or hardware. These types of pranks are easily written in JavaScript,
though they sometimes appear as a Java applet or an ActiveX control.
                               
   Denial of Service attacks.  The purpose for Denial of Service attacks is to
eat up system resources. There are many variations, but a common example is
a simple JavaScript that continuosly opens new browser windows until the computer
runs out of memory, possibly causing a system crash. This does not damage the
computer, but effectively wastes the user's time. Another example is a
computer that continuously dials someone's phone number so that nobody else
can call that person.
                               
  Read-only attacks.  These refer to applets or controls that read data from
your computer, or capture data you transmit through a web page, usually
without your knowledge.  Theoretically, Java applets cannot read or write to
your system; however, only the most current versions of web browsers have
eliminated all of the known flaws in the Java engines.
                               
  Read and/or write attacks.  These are the most dangerous attacks. Here an
applet or control can read, write, destroy or alter data on your computer, or
data you transmit over the web.  Java applets cannot access your system in this
way, but certain flaws might make it a possibility, depending on your browser.
ActiveX has no access constraints and can be easily used for this type of an
attack.

-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ---ฤฤ-ฤ--
(C) Pinoy Virus Writers 1998
http://members.tripod.com/~lorz
