
 Tunneling 기법에 관해                                      CVC #01   97/06

--------------------------------------------------------------------> kiminwoo

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
    Tunneling 기법에 관해                                    
         Oilot 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
  
  안녕하세요?
  요즘 바이러스에 때아닌 Tunneling기법이 불고 있습니다.
  이건 예전에 김용님께서 언급하신 int01h(싱글인터럽트)를 이
  용하여 프로그램의 자체 수정을 가능케 하는 방법이지요.
  아마 HWB등 램에서 암호화 된다는것은 이런 기법을 이용한 
  걸껍니다.
  우선 이 기법을 쓰시려면 FLAG에 관하여 아셔야 하는데
  다들 아실걸로 믿고 Trace Flag에 관하여 씁니다.
  우선 플래그를 변경할때 CLC STC CLD STD 등의 명령어로 제
  어할수 있는 플래그가
  몇개 존재하긴 합니다만 TF에관하여는 명령어가 없더군요.
  그래서 연구해본결과 pushf와 플래그 비트를 이용하면 가능
  하다는것을 알수가 있었죠.
  플래그 레지스터 상태를 보시면
 (X는 미사용)

+-----------------------+---------------------+              
|         상위          |        하위         |          
| 15 14 13 12 11 10 9 8 |   7 6 5 4 3 2 1 0   |              
|=============================================|              
|  X  X  X  X  O  D I T |   S Z X A X P X C   |              
+---------------------------------------------+              
     
  O:오버 플로우 플래그
  D:디렉션 플래그  
  I:인터럽트 제어 플래그(CLI STI)
  T:Trace 플래그
  S:부호 플래그
  Z:제로 플래그
  A:보조 캐리 플래그
  P:패리티 플래그
  C:캐리 플래그

 처럼 되어있지요.
 자세히 보시면 2진수로 표현이 된다는 것을 아실겁니다.
 그럼 pushf할때 플래그 상태가 2진수로 된것을 16진수로 바꿔 
 저장하니까 우리는 저장된 값에 2진수자리8번째 값을 세팅 해
 주면 되는겁니다.그게 OR명령이죠.
 근데 추적플래그로 어떻게 암호화 할까요?
 헤~
 추적 플래그를 세팅 하시면 한명령어가 실행될때마다 인터럽트
 1번이 불립니다.
 근데 디버거로 디버깅하면 추적 플래그가 세팅이 안되요~
 디버거가 계속 사용하니깐..
 그걸 이용해서 디버깅도 방지하고 암호화도 하는 기법이 이
 거죠.
 그래서 우선 TF를 세팅 하는 법을 갈켜드리면
 pushf
 pop  ax
 or   ax,100h
 push ax
 popf

 어셈을 아시는 분이라면 누구나 아~ 하실겁니다.
 단순하니깐..
 근데 세팅하고 인터럽트 1을 가로채서 프로그램에 내장하는거
 잊지 마세요.
 인터럽트 1을 가로챈후에 XOR로 암호화를 하거나 해서 나중에
 꼭 IRET명령을 줘야합니다. 당연한거죠.
 이번 글은 워낙 간단해서 뭐 예를 들필요도 없었지만 거의 이
 방법을 쓰면 디버깅이 안될것을 보장해 드립니다. 그무서운 
 소아나 코드뷰도 맛이가게 할 방법이니까요.아마 이거랑 폴리
 모픽이랑 스텔스랑 합치면 거의 천하무적~
 이 아닐까 하고 생각합니다~
 참 요즘 매크로 바이러스가 인기인데...
 근데 매크로 바이러스는 아마 한국에선 안될꺼에요..
 문서바이러스라고도 불리는데 매크로가 달라선 안된다네요..

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This Article is a message for 40hex dong(in Smart line).     
                                                       Oilot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
