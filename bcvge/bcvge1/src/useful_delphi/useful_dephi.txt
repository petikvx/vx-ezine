Article: Some useful sources for HLL Virus Coder  (Delphi)
Author : D`ART  ( Black Cat Virology Network )
------------------------------------------------

Hi!
Today I`d like to present You some pieces of code, which will be very useful
for VirMakers.

-------------------------------------------------------------
1. How to hide Your program from Ctrl+Alt+Del list?

function RegisterServiceProcess(dwProcessID, dwType: integer): 
         integer; stdcall; external 'KERNEL32.DLL';

implementation

procedure TForm1.Button1Click(Sender: TObject);
begin //Hide
  if not (csDesigning in ComponentState) then
    RegisterServiceProcess(GetCurrentProcessID, 1);
end;

procedure TForm1.Button2Click(Sender: TObject);
begin //Show
  if not (csDesigning in ComponentState) then
    RegisterServiceProcess(GetCurrentProcessID, 0);
end;
-------------------------------------------------------------

2. How to intercept Windows shutdown?
...
private 
  { Private declarations } 
  procedure WMQE(var Message: TMessage); message WM_QUERYENDSESSION; 
...


procedure TMesForm.WMQE(var Message: TMessage); 
begin 
  inherited; 
  { Your code, which will executed on Windows shutdown}
end; 
-------------------------------------------------------------

3. How to get the list of active programs/tasks?

procedure TTaskListForm.FormShow(Sender: TObject);
var
  Wnd : hWnd;
  buff: array [0..127] of Char;
begin
  ListBox1.Clear;
  Wnd := GetWindow(Handle, gw_HWndFirst);
  while Wnd <> 0 do begin
    if (Wnd <> Application.Handle) and IsWindowVisible(Wnd) and
      (GetWindow(Wnd, gw_Owner) = 0) and
      (GetWindowText(Wnd, buff, sizeof(buff)) <> 0) then begin
      GetWindowText(Wnd, buff, sizeof(buff));
      ListBox1.Items.Add(StrPas(buff));
    end;
    Wnd := GetWindow(Wnd, gw_hWndNext);
  end;
  ListBox1.ItemIndex := 0;
end;
-------------------------------------------------------------

4. How to copy executed program (self-copying)?

CopyFile( paramstr(0) ,'E:\DDD\Proga2.exe',False);

-------------------------------------------------------------

5. How to execute another program and wait while it`ll be closed?

procedure Start;
var
  si: TStartupInfo;
  p:  TProcessInformation;
begin
  FillChar(Si,SizeOf(Si),0);
  with Si do begin
    cb := SizeOf( Si);
    dwFlags := startf_UseShowWindow;
    wShowWindow := 4;
  end;
  Form1.WindowState:=wsMinimized;
  Createprocess(nil,Your_program.exe',nil,nil,false,
    Create_default_error_mode,nil,nil,si);
  Waitforsingleobject(p.hProcess,infinite);
  Form1.WindowState:=wsNormal;
end;

-------------------------------------------------------------

6. How to execute another program and wait while it`ll be closed? (Variant 2)

procedure TForm1.BtnArchClick(Sender: TObject);
var
  lpApplicationName   : PChar;
  lpCommandLine       : PChar;
  lpThreadAttributes,
  lpProcessAttributes : PSECURITYATTRIBUTES;
  bInheritHandles     : BOOL;
  dwCreationFlags     : DWORD;
  lpEnvironment       : Pointer;
  lpCurrentDirectory  : PChar;
  lpStartupInfo       : TSTARTUPINFO;
  lpProcessInformation: TPROCESSINFORMATION;
  lpExitCode          : DWORD;
  hProcess            : THandle;

begin
  lpApplicationName   := NIL;
  lpCommandLine       := 'arj.exe a dbf *.dbf';
  lpThreadAttributes  := NIL;
  lpProcessAttributes := NIL;
  bInheritHandles     := true;
  dwCreationFlags     := NORMAL_PRIORITY_CLASS;
  lpEnvironment       := NIL;
  lpCurrentDirectory  := NIL;
  with lpStartupInfo do begin
    cb              := SizeOf(TStartupInfo);
    lpReserved      := NIL;
    lpDesktop       := NIL;
    lpTitle         := PChar('Archiving');
    dwX             := 0;
    dwY             := 0;
    dwXSize         := 0;
    dwYSize         := 0;
    dwXCountChars   := 0;
    dwYCountChars   := 0;
    dwFillAttribute := 0;
    dwFlags         := 0;
    wShowWindow     := SW_SHOWDEFAULT;
    cbReserved2     := 0;
    lpReserved2     := NIL;
    hStdInput       := 0;
    hStdOutput      := 0;
    hStdError       := 0;
  end;
  if (not CreateProcess(lpApplicationName,lpCommandLine,
             lpProcessAttributes,lpThreadAttributes,bInheritHandles,
             dwCreationFlags,lpEnvironment,lpCurrentDirectory,
             lpStartupInfo,lpProcessInformation)) then begin
     Application.MessageBox('          ERROR          ',
               'WARNING!!!',ID_OK);
   end;
   hProcess := lpProcessInformation.hProcess;
   repeat
     GetExitCodeProcess(hProcess,lpExitCode);
     Application.ProcessMessages;
   until (lpExitCode <> STILL_ACTIVE); //Waiting for enclosure
end;

-------------------------------------------------------------


Thats all for now. Look for my next articles, I`ll find a lot of interesting 
things for You.

Best Regards,
D`ART  ( Black Cat Virology Network ) 2002