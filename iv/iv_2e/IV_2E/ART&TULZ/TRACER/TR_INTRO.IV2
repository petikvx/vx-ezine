
      ‹‹                  €
     ﬂﬂﬂ  Virus Magazine  € Box 176, Kiev 210, Ukraine      IV  1997
     ﬂ€€ ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ € ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ ﬂ ﬂﬂﬂﬂﬁﬂﬂﬂ  €ﬂﬂﬂﬂﬂﬂ€
      ﬁ€ €ﬂ‹ €ﬂﬂ ‹ﬂﬂ ‹ﬂﬂ ‹€‹ ‹ﬂﬂ €ﬂ€    › € ‹ﬂ€ € ‹ﬂﬂ €‹‹   € ﬂﬂﬂ€ €
       € € € €ﬂ  €ﬂ  €    €  €ﬂ  € €    € € € € € €   €     € ‹‹‹€ €
       € ﬁ ﬁ ﬁ   ﬁ‹‹ ﬁ‹‹  ﬁ  ﬁ‹‹ ﬁ‹ﬂ     ﬂ€ ﬂ‹€ ﬁ ﬁ‹‹ ﬁ‹‹‹  € €‹‹‹ €
       ﬁ ‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹ ‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹  €‹‹‹‹‹‹€
          (C) Copyright, 1994-97, by STEALTH group WorldWide, unLtd.
                              sgww@hotmail.com
            Digest of IV 8 - 11 russian, including Moscow issues


    €€€€€€€€€€€€€ TRACING WITH DEFENCE AGAINST DETECTING €€€€€€€€€€€€€€

;The Interrupt Penetrator, v2.0  (C) MoscoW 1996, by LovinGOD <SGMoscoW/SGWW>
;Interrupt Tracer.
;Intended for original interrrupt handler address determing.
;
; A couple of words about this program creating: Stupidly thinking that
; watching PUSHF/POPF/IRET leads to victory under resident monitors, I
; had released the first tracing routine in the previous IV. It could
; bypass AVPTSR, which hindered me. But I was surprised very much when
; found that it did not work with the next release of AVPTSR.
; I disassembled AVPTSR and recovered the following code:
;                       push ss
;                       pop  ss
;                       pushf
;                       ......
;
; The instruction after the command altering SS is not traced.
; Try it in TD.EXE and you see it by your own eyes.
; But this problem is easy to solve. Besides I tried to foresee another
; tricks to hinder the tracing.
; It is like Mr Kaspersky closes backdoors when they are already exploited,
; but we choose another way... Nobody tried to stop this routine so I created
; the program which hinder tracing of my interrupt (INT 00-0FFh) with my own
; hands.
; And as any REAL system software developer I had left a couple of backdoors
; in my creation. You have to correct this (also I'll do it by myself).
; Think about AVPTSR's memory checking routine. A check for free memory
; space is very simple...
;
; Frequently I'm hearing from virmakers: "Nobody uses AVP!"
; Don't be lazy! If something moves lets fuck it!

; There is a lot of fighters for communism (Everyone contributes depending
; on his skills and takes depending on his needs) in computer society. So
; like artillerymen we proclaim: "Communism is our aim".
;
; Enough words. Lets act.
;
; TIP abilities:
;       tracing           PUSHF       ( TF is not cleared in stack )
;                         POPF        ( TF is set   )
;                         IRET        ( TF is set   )
;                         MOV SS,reg  ( Instructions after this is traced )
;                         POP SS      ( ----------'''------------- )
;                         INT xx      ( TF is cleared and then restored )
;
;       It does not matter how much prefixes (SS: CS: DS: ES: REP) is placed
;       before Pushf or somewhere else.
;       It does not matter what interrupt you are tracing. This routine can
;       be used multiple times for tracing different interruptes;
;       Every time just set tracing conditions in CMPSEG and CMPCMD
;       (below or above what segment the original handler is located)
;
; Inabilities:
;       When hardware or error interrupt (which are not called with INT xx)
;       is hooked it is possible to monitor tracing by stack.
; Troubleshooting:
;       Check stack overflow, DIV/IDIV for divide by zero, writing word at
;       offset [0ffffh] and so on... Disable as many hardware interrupts as
;       you can. Remember about 16 IRQs!
;

;       .286  PUSH <value> (68 XX XX) may be used.
;       Replace it by something else if you don't like .286 !

; Including in code:
;       START - virus code start offset. This code is written with taking in
;       account relative offsets.

; This routine was written separately, so I'll upgrade it for use in virus.
; Wait for new releases or better create your own code!