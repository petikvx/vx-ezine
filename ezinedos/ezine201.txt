<-------------------------//LineZer0 Network 99\\------------------------->
=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=

                         How 2 crack Powerzip 4.o2

  <----------/\---------------------------------------------/\---------->


Hello folks...

This here is a tutorial, that should show you, how easy cracking can be 
sometimes. Well the application we are going to crack is kinda freeware,
but you have to register it, when you are using it in any commercial way.
But the registration routine is so weak, that i wonder, why they didn't 
give the prog away anyway for free....

The tool is very useful and a good alternative to winzip. As you can use 
it anyway for free, write a short mail to the author, if you really like 
it, and say thanks for his work... thats much more worth, than sending 10$
i think.

Ok... what we are going to crack now is:

App:	PowerZip V. 4.02 for windows
Prot:	Simple key check


As this is so easy, I will not give you so much theoretical stuff. Get my
other tutorials at http://beam.to/lzo if you want deeper and more 
information. Watch out for the e-zine... it really roX...    

-heXcrasher--


Well... lets start here now!

Fire up the PowerZip, to check its protection. Help/About PowerZip. Here
you can read some stuff about it... and blah blah  THIS IS AN UNREGISTERED
VERSION. Below two buttons. Click on register and enter some name and some
serial. For me, this looks like a protection, that calculates a number out
of your name, and if the number you entered is equal to the calculated 
number, you are a registered user. (That this protection is weaker than i
thought will be shown later.) Then press OK. A msg-box appears and says: 
'The registration number is invalid'. 

Write down this msg or keep it in mind... Then fire the w32Dasm and load a
copy of PowerZip.exe in it. I hope you know how to handle w32dasm.... if 
not, get some other tutorial for it.. (maybe from our page;) Well... click
on REFS/STRING DATA REFERENCES and look in the appearing box for the msg 
you got, when you entered the wrong reg-key.  You will find it, doubleclick
it and you will be warped to the place in the programme, where this msg is 
mentioned (doubleclick again, and look if you get a 2nd location in the code
...this means, that you have two locations, that you have to exermine if you
get a second one.. etc.) But here you only get one location. I got:

:00412715 6A01                    push 00000001
:00412717 8BCE                    mov ecx, esi

* Reference To: MFC42.MFC42:NoName0085, Ord:18BEh
                                  |
:00412719 E82CDE0000              Call 0042054A
:0041271E 817E6440800601          cmp dword ptr [esi+64], 01068040
:00412725 742F                    je 00412756
:00412727 6A00                    push 00000000
:00412729 6A10                    push 00000010

* Possible StringData Ref from Data Obj ->"The registration number is invalid."
                                  |
:0041272B 6814BF4200              push 0042BF14

* Reference To: MFC42.MFC42:NoName0170, Ord:04B0h
                                  |
:00412730 E813E00000              Call 00420748
:00412735 8D4C2404                lea ecx, dword ptr [esp+04]
:00412739 C7442410FFFFFFFF        mov [esp+10], FFFFFFFF

* Reference To: MFC42.MFC42:NoName0094, Ord:0320h
                                  |
:00412741 E83ADE0000              Call 00420580
:00412746 8B4C2408                mov ecx, dword ptr [esp+08]
:0041274A 64890D00000000          mov dword ptr fs:[00000000], ecx
:00412751 5E                      pop esi
:00412752 83C410                  add esp, 00000010
:00412755 C3                      ret



* Referenced by a (U)nconditional or (C)onditional Jump at Address:
|:00412725(C)
|
:00412756 8B4C2404                mov ecx, dword ptr [esp+04]
:0041275A 57                      push edi



Take a good look at this code and then read on...

The architecture of the code looks like the following:

Good code
Good code
Good code
Compare the keys
If equal jump to ok

Bad code
Bad code
Bad code

Ok:
Good code
Good code
Good code

What you have to do is to patch the :00412725 742F               je 00412756. 

This je only jumps if the keys are equal...   a 'jmp' would jump always.. 
that would be better I think. 


So how can you do the patch? Write down the offset address (you can see it
on the bottom of w32dasm) or write down the heXadecimal code of the je and
and the command before and after it. This would be... 
817E6440800601 742F 6A00 on my pc... now you only have to look for this 
heXcode in the powerZip.exe with your heXeditor...   i hope you know how to
do this...   and patch the jump if equal into a jump... this means... 
instead of 742F you have EB2F.... thats it.... now every key should work.......       

hm... but do we need this? Is there no faster and more beautiful possibility
to register this peace? Yes there is...  before i did this crack,  I only 
heard about hard-coded keys... but here you can find one... ;) really... you
even do not have to look up the registers you only have to doubleclick on the
FALSE-KEY msg you got first... then trace down and suddenly...   you find... 
coloured GREEN 
        
* Possible StringData Ref from Data Obj ->"17203264" 

hm... if this is the code... which is the correct name to it.... lets try it!
We enter some name... aaaand  this code 17203264 AND?? well done my friend.... 


thats it for today.... :) 
i hope even if this is not a really good tutor... you enjoyed it...  the 
followings will be much better...

THANKS


--heXcrasher aka RUNE--


=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=
<-------------------------\\LineZer0 Network 99//------------------------->