Here are some tables you might find usefull when trying to find out information
about an ELF file's Section Header, particularly labels and their meanings.


SECTION TYPES
-------------

SHT_NULL	This value marks the section header as inactive; it does not 			have an associated section. Other members of the section header			have undefined values.

SHT_PROGBITS	The section holds information defined by the program, whose 			format and meaning are determined solely by the program.

SHT_SYMTAB and SHT_DYNSYM									These sections hold a symbol table. Currently, an object file 			may have only one section of each type, but this restriction			may be relaxed in the future. Typically, SHT_SYMTAB provides			symbols for link editing, though it may also be used for			dynamic linking. As a complete symbol table, it may contain			many symbols unnecessary for dynamic linking. Consequently,			an object file may also contain a SHT_DYNSYM section, which			holds a minimal set of dynamic linking symbols, to save space.

SHT_STRTAB	The section holds a string table. An object file may have			multiple string table sections.

SHT_RELA	The section holds relocation entries with explicit addends,
		such as type ELF32_Rela for the 32-bit class of object files.			An object file may have multiple relocation sections.

SHT_HASH	The section holds a symbol hash table. All object participating			in dynamic linking must contain a symbol hash table. Currently,			an object file may have only one hash table, but this 				restriction may be relaxed in the future.

SHT_NOBITS	A section of this type occupies no space in the file but 			otherwise resembles SHT_PROGBITS. Although this section				contains no bytes, the sh_offset member contains the				conceptual file offset.

SHT_REL		The section holds relocation entries without explicit addends,
		such as type Elf32_Rel for the 32-bin class of object files. An			object file may have multiple relocation sections.

SHT_SHLIB	This section type is reserver but has unspecified semantics.			Programs that conatain a section of this type do not conform
		to the ABI.

SHT_LOPROC through SHT_HIPROC									Values in this inclusive range are reserved for
		processor-specific semantics.

SHT_LOUSER	This value specifies the lower bound of the range of indexes			reserved for application programs.

SHT_HIUSER	This value specifies the upper bound of the range of indexes
		reserved for application programs. Section types between
		SHT_LOUSER and SHT_HIUSER may be used by the application,
		without conflicting with current or future system-defined			section types.
