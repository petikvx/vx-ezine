			Merging the segments.

One could free	a record  for  a virus segment	in  the Program Header
Table by  merging two adjacent loadable segments  of the program  into
single segment.  (A new record would describe  an area of the file and
memory containing both segments).

There are two ways to merge: movement and complement.

During movement  the segments  will be mapped into memory  in the same
way they are stored in the file,  but an amount of memory is allocated
to hold  both segments	being them located  at	their original	memory
locations. Before passing the control  to the  host program  the virus
moves the second segment to its place in memory:

Before				After	       Virus moves the segment
File		Memory		File		Memory	     Memory
--------- ----> ---------	---------	---------    ---------
Segment 1	Segment 1	Segment 1	Segment 1    Segment 1
--------- -	---------				     - - - - -
Segment 2   \	0 0 0 0 0	Segment 2	Segment 2
---------     - ---------	---------	- - - - -    - - - - -
	  \	Segment 2	Virus			     Segment 2
	   \			---------
	     -> ---------			---------    ---------

Moving is a right way,	but not a very practical. When dynamic linking
is involved a number of problems will arise: it is  necessary to fix a
bunch of different tables  and	addresses.  There are also a number of
limitations would be introduced:  the location of some structures used
by RTLD  must be fixed (in a  well formed ELF  they  are  all  located
in the	first segment), virus should take the control before the host.

During complement  the file copy  of the segments  would have the same
layout as in memory.  The gap between code and data segments should be
complemented  by a  necessary amount  of bytes	(usually one page)  to
preserve  the memory  layout  upon  mapping  the joined  segment  into
memory:

Before				After
File		Memory		File
--------- ----> ---------	---------
Segment 1	Segment 1	Segment 1
--------- -	---------	- - - - -
Segment 2   \	0 0 0 0 0	0 0 0 0 0
---------     - ---------	- - - - -
	  \	Segment 2	Segment 2
	   \
	     -> ----------	---------

Also  it  is  possible that all segments in a file are located on page
boundary  (because the first segment have the size submultiple of page
size  or  has been properly  padded  to  have  such a size).  There is
nothing  one  should do,  it will be enough  to change a corresponding
PT_LOAD record.


--
F0g.								  2010
