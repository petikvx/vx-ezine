<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>ThE NeW OrDeR #1</title>
</head>

<body bgcolor="#000000" link="#0000FF" vlink="#000080"
bgproperties="fixed" topmargin="15" leftmargin="20" "
vlink="#000080">

<p align="center"><font color="#FF0000" size="5"><strong>HTML и
CGI</strong></font></p>

<p align="center"><font color="#00FF00"><strong>Общий
шлюзовой интерфейс - ключ к
интерактивным узлам Web.</strong></font></p>

<p align="center"><font color="#FF0000" size="5"><strong><img
src="../images/Rs.jpg" width="640" height="12"></strong></font></p>

<p><font color="#FFFF00"><strong>ОБЩИЙ ШЛЮЗОВОЙ
ИНТЕРФЕЙС<br>
</strong></font><font color="#FFFFFF"><strong>HTML, вместе
с HTTP, представляет собой базовую
технологию World Wide Web. Наиболее
привлекательная возможность HTML -
гипертекстовые ссылки. При поиске
информации в обычной книге, вы
должны открыть содержание, а затем
пролистать книгу, чтобы отыскать
нужную страницу. В
противоположность этому, когда вы
ищите информацию на Web, простое
нажатие на гиперссылку приводит к
мгновенному переходу на выбранную
страницу - быстро и удобно. Однако
HTML предлагает информацию главным
образом для чтения. Он не является
интерактивным, за исключением тех
случаев, когда вы для перемещения
по документам используете мышь.
Страницы HTML - это статические
документы; они не изменяются до тех
пор, пока кто-то (обычно
администратор Web) не обратится к
серверу Web и не отредактирует их.С
самого начала разработчики Web
искали способы сделать серверы Web
интерактивными, для того чтобы дать
возможность пользователям не
только получать, но и вводить
информацию. Стандартный способ
создания такой информации теперь
известен как общий шлюзовой
интерфейс. Пользователь
запрашивает информацию у сервера
Web, а тот, используя CGI, запускает
программу для поиска информации и
возвращает результат пользователю.
Для этого сервер Web обычно
генерирует страницу HTML,
посредством вставки нескольких
операторов HTML в уже существующую
страницу. Сервер Web, применяющий CGI
таким образом, может потенциально
запускать самые разнообразные
программы.Если вы использовали
механизм поиска Web для того, чтобы
найти интересующий вас текст, то вы
применяли CGI. Но CGI сам по себе не
является механизмом поиска. На
самом деле он обеспечивает
взаимодействие таких программ, как
механизмы поиска, с серверами Web.
Серверы HTTP (Web) в первую очередь
предназначены для обслуживания
документов HTML. Файлы CGI, однако, не
документы, а программы. Для
хранения программ CGI большинство
серверов используют специальный
каталог, обычно называющийся CGI-BIN.
Сервер Web знает, что файл,
хранящийся в каталоге CGI-BIN, должен
исполняться, а не пересылаться для
воспроизведения пользовательскому
браузеру Web. Программы CGI могут быть
написаны на самых разных языках, в
том числе на языке командных файлов
DOS, BASIC, C и языках описания
сценариев, например Perl. Задача CGI
как раз в том и состоит, чтобы в
нужное время активизировать
программу CGI и передать программе
любые необходимые данные,
созданные пользователем или
операционной средой. Программа CGI
затем обрабатывает вводимые
данные. Выполнив эту обработку
(время исполнения - максимум
несколько секунд, поскольку целью
является интерактивность),
программа должна вернуть некоторый
результат пользователю через его
браузер Web. Для того чтобы браузер
мог воспроизвести результат,
программа CGI должна преобразовать
свои выходные данные в документ HTML.<br>
</strong></font><font color="#FFFF00"><strong>ФОРМА НА
ЛЮБОЙ СЛУЧАЙ<br>
</strong></font><font color="#FFFFFF"><strong>Программа
CGI должна каким-то образом получить
от пользователя данные для
обработки. И тут в игру вступают
формы HTML. Они похожи на бумажные
бланки ввиду наличия полей для
ввода некоторых элементов данных.
Ниже показана простая форма,
имеющая одно поле для ввода текста:
имя продукта. Кроме того, у этой
формы есть поля выбора из
нескольких категорий, в которых
пользователь может, например,
отметить тип продукта, а также
указать, какой из сетевых
протоколов этот продукт
поддерживает. Форма еще имеет
кнопку, на которую пользователь
должен нажать для передачи
введенной информации. (Программа CGI
начнет обрабатывать информацию,
только когда данные в форме будут
переданы программе CGI.) Нажатие
кнопки Clear Form приводит к присвоению
всем переменным формы значения по
умолчанию. Код HTML для этой формы
ниже. </strong></font></p>

<p align="center"><font color="#FFFFFF"><em><strong>Пример
формы HTML с несколькими различными
полями ввода, в том числе текстовым
полем, кнопками переключения и
флажками.</strong></em></font></p>

<h5><font color="#FF0080"><em><strong>Please enter the following
information:</strong></em></font></h5>

<p><font color="#FF0080"><em><strong><br>
Product name: <input type="text" size="25" maxlength="30"
name="NAME"></strong></em></font></p>

<p><font color="#FF0080"><em><strong><br>
Select product type:</strong></em></font></p>

<p><font color="#FF0080"><em><strong><input type="radio" checked
name="ProdType" value="Bridge"> Bridge <input type="radio"
name="ProdType" value="Router"> Router <input type="radio"
name="ProdType" value="Switch"> Switch</strong></em></font></p>

<p><font color="#FF0080"><em><strong>Protocols handled: </strong></em></font></p>

<p><font color="#FF0080"><em><strong><input type="checkbox"
checked name="IP"> IP <input type="checkbox" checked name="IPX">
IPX <input type="checkbox" checked name="AppleTalk"> AppleTalk </strong></em></font></p>

<p><font color="#FF0080"><em><strong><input type="submit"
value="Press here to submit your entry"> <input type="reset"
value="Clear Form"> </strong></em></font></p>

<p><font color="#FFFFFF"><em><strong>ПРИМЕР КОДА
ФОРМЫ HTML</strong></em></font></p>

<p><font color="#0000FF"><strong>1 &lt;FORM
ACTION=&quot;/CGI-BIN/EXAMPLE.PLI METHOD=&quot;GET&quot;&gt;<br>
2 &lt;H5&gt;Please enter the following
information:&lt;/H5&gt;&lt;BR&gt;<br>
3 Product name:<br>
4 &lt;INPUT TYPE=&quot;TEXT&quot; NAME=&quot;NAME&quot;
size=&quot;25&quot; MAXLENGTH =&quot;30&quot;&gt;&lt;BR&gt;<br>
5 Select product type:<br>
6 &lt;INPUT TYPE=&quot;RADIO&quot; NAME=&quot;ProdType&quot;
VALUE=&quot;Bridge&quot; CHECKED&gt; Bridge<br>
7 &lt;INPUT TYPE=&quot;RADIO&quot; NAME=&quot;ProdType&quot;
VALUE=&quot;Router&quot;&gt; Router<br>
8 &lt;INPUT TYPE=&quot;RADIO&quot; NAME=&quot;ProdType&quot;
VALUE=&quot;Switch&quot;&gt; Switch&lt;P&gt;<br>
9 Protocols handled: &lt;INPUT TYPE=&quot;CHECKBOX&quot;
NAME=&quot;IP&quot; CHECKED&gt; IP<br>
10 &lt;INPUT TYPE=&quot;CHECKBOX&quot; NAME=&quot;IPX&quot;
CHECKED&gt; IPX<br>
11 &lt;INPUT TYPE=&quot;CHECKBOX&quot; NAME=&quot;AppleTalk&quot;
CHECKED&gt; AppleTalk<br>
12 &lt;INPUT TYPE=&quot;SUBMIT&quot; VALUE=&quot;Press here to
submit your entry&quot;&gt;<br>
13 &lt;INPUT TYPE=&quot;RESET&quot; VALUE=&quot;Clear
Form&quot;&gt;<br>
14 &lt;/FORM&gt;</strong></font></p>

<p><font color="#FFFFFF"><strong>Отметим, что
указанные номера строк, в реальной
программе на HTML отсутствующие,
введены для упрощения
изложение.Исходный код формы
окружают теги &lt;FORM ACTION =
&quot;/SGI-BIN/EXAMPLE.PL&quot;&gt; и &lt;/FORM&gt; (см.
строки 1 и 14). ACTION определяет
действия, которые будут
предприняты после передачи формы.
Иными словами, ACTION определяет,
какая программа CGI должна быть
запущена для обработки формы, и вы
указываете или полный, или
частичный URL данной программы (в
нашем случае это /SGI-BIN/EXAMPLE.PL). В
зависимости от сервера Web вы можете
задать для всех программ CGI каталог
по умолчанию. Если программа,
которую вы хотите запустить,
хранится в этом каталоге, то
достаточно указывать только имя
файла, ее содержащего. В противном
случае вам, возможно, придется
написать полный URL файла.METHOD
используется для передачи входных
данных из формы в программу CGI,
обрабатывающую эти данные.
Несколько позже мы подробно
рассмотрим представленный здесь
метод, а пока отметим, что можно
использовать два основных метода:
GET и POST. Если вы собираетесь
применять для передачи данных из
формы в программу CGI, указанную в
ACTION= &quot;/SGI-BIN/EXAMPLE.PL&quot;, метод GET,
убедитесь, что эта программа CGI
способна воспринимать данные,
переданные таким образом. Кроме
того, если вы используете для
передачи данных из вашей формы
метод POST, удостоверьтесь, что
программа ожидает получения данных
именно по этому методу.<br>
Строки 2 и 3 Распечатки 1 сообщают
пользователю о том, что нужно
ввести данные. Следующая затем
строка программы помещает в форму
текстовое поле (строка 4). Ввод INPUT
TYPE=&quot;TEXT&quot; информирует браузер Web
о том, что это поле является
текстовым. Определение NAME=&quot;NAME&quot;
указывает имя поля - NAME. (В нашем
примере запрашивается название
продукта; если вы хотите попросить
пользователя ввести адрес, то
можете назвать это поле ADDRESS.)
SIZE=&quot;25&quot; говорит о том, что
текстовое поле будет иметь размер,
достаточный для отображения 25
символов одновременно.
MXLENGTH=&quot;30&quot; означает, что поле
может вмещать до 30 символов текста.
Иначе говоря, если вы наберете
больше 25 символов, текст начнет
сдвигаться. Как только число
введенных символов достигнет 30,
никакие дополнительные символы
ввести больше не удастся, и
последует предупредительный
сигнал.Далее в форме расположены
кнопки переключения, а еще ниже -
рамки для выставления флажков. И те
и другие позволяют осуществлять
выбор среди нескольких
возможностей, но они несколько
отличаются по своему назначению. Вы
можете одновременно отметить
несколько флажков, но выбрать
только одну кнопку переключения.
Для сравнения, выбор одного флажка
не отменяет выбора другого. Давайте
сначала поговорим о кнопках
переключения. Кнопка определяется
указанием RADIO в качестве типа ввода.
Три строки (с 6 по 8) относятся к
кнопкам переключения, каждую из
которых можно выбрать. Все строки
содержит комбинацию NAME=&quot;PRODTYPE&quot;,
определяя логическое поле с именем
PRODTYPE. Если отмечена первая кнопка,
поле PRODTYPE примет значение BRIDGE.
(Значение определяется комбинацией
&quot;VALUE=&quot;BRIDGE&quot;&quot;.) Обратите
также внимание на ключевое слово
CHECKED в строке 6. При первом появлении
формы будет выделена кнопка BRIDGE;
иными словами, это значение мы
сделали значением по умолчанию;
пользователь может изменить его,
нажав на кнопки Router или Switch.Далее
идет серия из трех флажков,
позволяющих выбрать, какой из
сетевых протоколов поддерживает
продукт (строки с 9 по 11). При щелчке
в рамке флажка появляется &quot;X&quot;,
указывающий на то, что флажок
поднят; при повторном щелчке
&quot;X&quot; исчезает, т.е. флажок
снимается. Рамка флажка создается
при помощи фразы &quot;INPUT
TYPE=&quot;CHECKBOX&quot;. Для того чтобы
программа работала правильно, вы
должны определять тип вводимого
параметра как одно слово. Вы должны
также указать название поля ввода.
В Распечатке 1 имя поля ввода для
первого флажка определено как IP.
Как видите, код содержит еще
ключевое слово CHECKED, указывающее на
то, что по умолчанию этот флажок
будет отмечен; очистить его
пользователь может, просто щелкнув
в рамке.Когда флажок поднят,
значение по умолчанию для поля с
этим именем равно &quot;ON&quot;. Хотя в
примере это не указано, вы можете
дополнительно использовать
атрибут VALUE для установки значения,
например &quot;GREEN&quot;, в случае если
этот флажок отмечается. В нашем
примере все три флажка по умолчанию
выделены. Таким образом, если
пользователь не снимет флажок,
форма вернет значения IP=ON, IPX=ON и
APPLETALK=ON. Если отмечен только флажок
IP, форма вернет только IP=ON. Флажки,
соответствующие IPX и APPLETALK, мы не
включили.Строка 12 определяет
кнопку SUBMIT. После заполнения формы
для ее передачи программе CGI,
запускаемой на сервере Web,
пользователь должен нажать на
кнопку SUBMIT. Как можно видеть в
строке 12, кнопка SUBMIT создается при
указании SUBMIT в качестве типа ввода.
Текст, размещаемый на кнопке, можно
задать в переменной VALUE.Когда
пользователь нажимает на кнопку
SUBMIT, браузер Web предпринимает
некоторые действия, определенные в
ACTION для этой формы (например, как в
строке 1). В данном случае сервер Web
запустит сценарий на языке Perl,
который в нашем примере называется
EXAMPLE.PL и расположен в каталоге
CGI-BIN.Как сервер Web узнает о том, что
ему нужно выполнить программу, а не
просто передать ее в ответ на
запрос браузера Web? Это следует из
названия каталога, где программа
находится - CGI-BIN. В большинстве
серверов Web этот каталог
зарезервирован специально для
исполняемых файлов. (Вы можете
хранить исполняемые файлы и в
других каталогах, но CGI-BIN должен
содержать все файлы,
предназначенные для удаленного
запуска через Web.)Хранение всех
исполняемых файлов в каталоге CGI-BIN
является, кроме того, хорошей мерой
защиты. Как администратор Web, вы
должны разрешить серверу Web
выполнять только находящиеся в
этом каталоге программы. Помимо
этого, тщательно проверьте все
программы, помещаемые в данный
каталог, и убедитесь, что они не
могут быть использованы для порчи,
или замены файлов, или обхода мер
защиты. Если, к примеру, кто-то может
применять одну из ваших программ
для того, чтобы прочитать файл
системных паролей, защита вашей
системы никуда не годится. В
рассматриваемом нами примере мы
упомянули Perl, Practical Extraction and Report
Language. Для тех, кто с ним не знаком,
поясним. Perl представляет собой
интерпретируемый язык, который
изначально разрабатывался для
использования в Unix-системах, но
сейчас он перенесен во многие
другие операционные системы.
Интерпретаторы Perl существуют,
например, для систем Macintosh и Windows NT.
Программы на языке Perl обычно
называют сценариями, поскольку, по
сравнению с разработкой программ
на C и других стандартных языках
программирования, создаются они
относительно быстро и просто. Perl
ближе к языку командных файлов DOS,
нежели к классическим языкам
программирования. Особенно хорош
Perl в работе со строками, что, как вы
уже имели возможность убедиться,
очень важно для программирования
CGI.Строка 13 описывает кнопку Reset.
Если пользователь нажмет на эту
кнопку, все параметры
устанавливаются равными значениям
по умолчанию. В нашем примере будут
отмечены кнопка переключения Bridge и
все три флажка (IP, IPX и AppleTalk). При
нажатии на кнопку Submit информация
передается серверу Web в виде пар из
имен полей (также называемых
ключами) и значений. Предположим,
что в приводимом нами примере формы
пользователь в качестве имени
продукта ввел SuperDuper, отметил кнопку
переключения Router и в качестве
поддерживаемых протоколов указал IP
и IPX. В этом случае, при нажатии на
кнопку Submit, форма будет передана с
параметрами NAME=SuperDuper, IP=ON и IPX=ON.
(Если флажок AppleTalk снят, то значения
поля AppleTalk (&quot;AppleTalk=off&quot;) просто не
будет переданон.)Итак, мы
рассмотрели, как формы HTML получают
информацию от пользователя Web и
передают ее программе CGI в виде пары
ключ/значение. Поскольку оператор
ACTION, заданный в открывающем теге
&lt;FORM&gt;, указывает на файл,
расположенный в каталоге CGI-BIN,
сервер Web знает, что указанный файл
должен быть запущен, а не показан
запрашивающим браузером Web, как это
было бы в случае простого документа
HTML.<br>
</strong></font><font color="#FFFF00"><strong>ЗНАКОМЯСЬ
С CGI<br>
</strong></font><font color="#FFFFFF"><strong>Создание
программ CGI не слишком отличается
от написания других типов программ.
Рискуя слишком упростить, мы бы
охарактеризовали программирование
как получение входной информации
от пользователя или из файла данных
и сохранение ее в переменных
программы с их последующей
обработкой и пересылкой
результатов либо в файл, либо на
экран. Программисты знают, что
программы обычно получают входные
данные с логического устройства,
известного как устройство
стандартного ввода (для краткости
STDIN), и посылают выходные данные на
устройство стандартного вывода
(STDOUT). Чаще всего STDIN и STDOUT
представляют собой консоль
компьютера (клавиатуру и
видеодисплей), но большая часть
операционных систем поддерживает
перенаправление, поэтому STDIN и STDOUT
могут быть и файлами на диске, и
другими устройствами.Многие
операционные системы и языки
программирования также используют
переменные окружения - переменные,
которые могут быть установлены в
операционной системе и прочитаны
программами, или наоборот.
Переменные окружения позволяют
обмениваться информацией либо
операционной системе и исполняемой
программе, либо программам,
написанным на разных языках.
Программы CGI похожи на обычные. Они
тоже получают информацию со STDIN или
через переменные окружения и
посылают выходные данные на STDOUT.
Для того чтобы понять принцип
взаимодействия браузера Web с
программой CGI, нам необходимо
вернуться немного назад и
рассмотреть, каким образом браузер
передает простые запросы HTML и как
на них реагирует сервер
Web.Предположим, вы вставляете
следующую гипертекстовую ссылку в
свой документ HTML:<br>
</strong></font><font color="#0000FF"><em><strong>&lt;A
HREF=&quot;TEST.HTML&quot;&gt;<br>
</strong></em></font><font color="#FFFFFF"><strong>Если
выбрать эту ссылку, браузер
инициирует следующий запрос
серверу Web:<br>
</strong></font><font color="#00FFFF"><em><strong>GET /TEST.HTML
HTTP/1.0<br>
Accept: text/plain<br>
Accept: text/html<br>
</strong></em></font><font color="#FFFFFF"><strong>Каждая
из этих строк называется
заголовком. Первая представляет
собой заголовок GET, сообщающий
серверу Web о том, что браузер хочет
получить документ TEST.HTML и что он
использует версия 1.0 протокола
Hypertext Transport Protocol. Поскольку в этом
случае было указано только имя
файла, сервер Web по умолчанию ищет
файл в корневом каталоге сервера
для документов Web. Если хотите
получить файл, расположенный во
вспомогательном каталоге, ваша
гипертекстовая ссылка должна
содержать полное имя пути к файлу
относительно корневого каталога
для Web-документов. Если вы хотите
сослаться на файл, находящийся на
другом сервере Web, в гипертекстовой
ссылке должен быть указан полный URL
для этого файла.Вслед за заголовком
GET идут два заголовка Accept,
указывающие на то, что браузер
может воспринимать файлы с обычным
текстом или текстом в формате HTML.
Если браузер может воспринимать
большее число типов данных, в
запросе появится больше заголовков
Accept, описывающих каждый тип данных
в терминах Multipurpose Internet Mail Extensions (MIME).<br>
Реакция сервера Web на этот запрос
будет выглядеть примерно следующим
образом:<br>
</strong></font><font color="#00FFFF"><em><strong>HTTP /1.0 200
OK<br>
Date: Monday, 24-May-96<br>
11:09:05 GMT<br>
Server: NCSA/1.3<br>
MIME-version 1.0<br>
Content-type: text/html<br>
Content-length: 231<br>
&lt;HTML&gt;<br>
&lt;HEAD&gt;<br>
&lt;TITLE&gt; Заголовок документа&lt;/TITLE&gt;<br>
&lt;/HEAD&gt;<br>
Пример страниц на HTML.<br>
&lt;/HTML&gt; <br>
</strong></em></font><font color="#FFFFFF"><strong>Заголовок
&quot;Server&quot; передает серверу Web имя и
номер версии, а также версию
используемого HTTP. Другие заголовки
описывают тип информационного
наполнения (в нашем случае это
текст в формате HTML) и длину (231 байт)
передаваемого документа. Браузер Web
затем читает и обрабатывает
HTML-сегмент этого файла.В случае с CGI
вся эта процедура не сильно
отличается, за исключением того,
что запрашиваемый файл будет
находиться в каталоге CGI-BIN. Это
указывает серверу Web на то, что
требуемый файл должен быть
выполнен, а не послан браузеру Web
для отображения как документ
HTML.Выше я уже отмечал, что
информация, получаемая от
пользователя или его браузера Web,
может быть послана серверу Web одним
из двух способов: по методу GET или
POST.При методе GET все данные формы
включаются в URL в так называемую
строку запроса. Для примера
предположим, что у нас есть простая
форма, имеющая только два поля,
которые называются COLOR и SIZE, и что
пользователь ввел SKY BLUE и LARGE
соответственно. Давайте также
предположим, что программа CGI,
которая, как предполагается, будет
обрабатывать данные, является
сценарием на языке Perl, именуется
EXAMPLE.PL и находится в каталоге CGI-BIN.
Вы нажимаете кнопку Submit, и браузер,
предварительно сформировав запрос
HTML, отправит его серверу Web.Код
формы HTML должен содержать оператор
ACTION, а также сообщить серверу Web,
какой из методов (в нашем случае GET)
будет использован для пересылки
данных. Таким образом, первым
оператором нашей формы станет: <br>
&lt;FORM ACTION=&quot;/CGI-BIN/EXAMPLE.PL&quot;
METHOD=&quot;GET&quot;&gt;<br>
Это позволит серверу Web узнать
полный путь к программе, которая
должна быть запущена
(&quot;/CGI-BIN/EXAMPLE.PL&quot;), а также то, что
следует применять метод GET. Как
отмечалось раньше, метод GET
использует строку запроса для
передачи данных программе CGI. В
нашем примере, когда пользователь
нажимает кнопку Submit, его браузер Web
сделает следующий запрос серверу
Web:<br>
</strong></font><font color="#00FFFF"><em><strong>GET
/CGI-BIN/EXAMPLE.PL? COLOR=SKY%20BLUE&amp;size=LARGE HTTP 1.0<br>
</strong></em></font><font color="#FFFFFF"><strong>Строка
текста, следующая за знаком
вопроса, представляет собой строку
запроса. В ответ на этот запрос
сервер запускает сценарий EXAMPLE.PL и
помещает строку COLOR=SKY% 20BLUE&amp;size=LARGE
HTTP 1.0 в переменную окружения QUERY_STRING.<br>
<br>
</strong></font><font color="#FFFF00"><strong>ПОДРОБНОСТИ
В INTERNET<br>
</strong></font><font color="#FFFFFF"><strong>Одним из
лучших способов получить
информацию о сервисах Internet, таких
как World Wide Web, является сама Web. Для
этого можно использовать механизм
поиска AltaVista компании Digital (</strong></font><a
href="http://www.altavista.digital.com" target="_blank"><strong>http://www.altavista.digital.com</strong></a><font
color="#FFFFFF"><strong>), указав в качестве
параметра поиска </strong></font><font
color="#FF0000"><em><strong>&quot;common gateway interface&quot;</strong></em></font><font
color="#FFFFFF"><strong>. <br>
Воспользоваться поиском можно
прямо здесь:</strong></font></p>

<form action="http://altavista.digital.com/cgi-bin/query"
method="GET" target="_blank">
    <input type="hidden" name="pg" value="q"><input type="hidden"
    name="what" value="web"><input type="hidden" name="fmt"
    value="."><p><font color="#000000" size="2"><strong><b><input
    type="text" size="45" maxlength="45" name="q">  <input
    type="submit" value="Поиск"> </b></strong></font></p>
</form>

<p align="center"><a href="../TNO#1_start.htm"><img
src="../images/14ic3.gif" border="0" width="60" height="65"></a></p>

<p align="center"><a href="mailto:nrgteam@mail.ru"><img
src="../images/coollogo_com_7565375.jpg" border="0" width="206"
height="53"></a></p>

<p align="center"><a href="mailto:nrgteam@mail.ru"><img
src="../images/Lurker2.jpg" border="0" width="212" height="119"></a></p>
</body>
</html>
