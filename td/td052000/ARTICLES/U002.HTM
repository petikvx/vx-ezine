<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>-=U=-</title>
</head>

<body bgcolor="#B1B1B1" text="#000000" topmargin="0"
leftmargin="3">

<p><STYLE> </p>

<p>INPUT { FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE: 8pt
}</p>

<p>SELECT { FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE:
8pt } </p>

<p>OPTION { FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE:
8pt } </p>

<p>TEXTAREA { FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE:
8pt } </p>

<p>FORM { FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE: 8pt
} <br>
BODY { FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE: 8pt } <br>
P { FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE: 8pt }
TABLE { FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE: 8pt
}TR { FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE: 8pt } TD
{ FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE: 10pt
}TEXTAREA { FONT-FAMILY: Tahoma, sans-serif, arial; FONT-SIZE:
8pt } A { COLOR: #005500; TEXT-DECORATION: none }A:hover {
TEXT-DECORATION: underline } A:link { TE  XT-DECORATION: none
}A:visited { }text:unknown { FONT-SIZE: 8pt } } </STYLE> </p>

<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td>&nbsp;</td>
        <td valign="top" width="100%"><div align="center"><center><table
        border="0" cellpadding="0" cellspacing="0" width="100%">
            <tr>
                <td width="100%" bgcolor="#000000"img
                src="-.gif" width="1" height="1"></td>
            </tr>
            <tr>
                   <td width="100%" bgcolor="#808080"><strong>05.05.2000</strong>
                   Недокументированные функции WindozeNT/2000 <strong>[ULTRAS/MATRiX]</strong></td>
            </tr>
            <tr>
                <td width="100%" bgcolor="#000000"><img
                src="-.gif" width="1" height="1"></td>
            </tr>
            <tr>
                <td width="100%"><img src="-.gif" width="1"
                height="1"></td>
            </tr>
            <tr>
                <td width="100%" bgcolor="#000000"><img
                src="-.gif" width="1" height="1"></td>
            </tr>
            <tr>
                <td width="100%"><pre>

В этой статье описывается часть недокументированных функций WindowsNT/2000

 <b><a>NtQueryInformationProcess</a></b>

 <strong>NtQueryInformationProcess копирует информацию процесса указанного типа в 
 буфер</strong>

 
  NTSYSAPI

  NTSTATUS

  NTAPI

  NtQuerySystemInformation(

      IN HANDLE ProcessHandle,

      IN PROCESSINFOCLASS InformationClass,

      OUT PVOID ProcessInformation, // pointer to buffer

      IN ULONG ProcessInformationLength, // buffer size in bytes

      OUT PULONG ReturnLength OPTIONAL // number of bytes written to 
                                          the buffer

      );


  <strong>ProcessHandle</strong> - хэндл процесса
  <strong>InformationClass</strong> - информационный тип
  <strong>ProcessInformation</strong> - указатель на буфер
  <strong>ProcessInformationLength</strong> - буферный размер в байтах
  <strong>ReturnLength</strong> - число байтов записываемых в буферу

  Первый аргумент - открытый хендл к процессу, этот хендл должна 
  иметь PROCESS_QUERY_INFORMATION доступ. 
  Чтобы получить хендл, мы должны использовать функцию OpenProcess:

HANDLE hProcess = OpenProcess(PROCESS_QUERY_INFORMATION,FALSE,dwProcessID); 

  Второй аргумент - тип требуемой информации, имеются много параметров 
  для этого аргумента, но мы будем использовать 
  ProcessBasicInformation, он равен 0.

  Поэтому, если второй аргумент - ProcessBasicInformation, третий 
  аргумент обязательно должен быть указатель на структуру 
  PROCESS_BASIC_INFORMATION:

 Typedef struct
 {
  DWORD ExitStatus; // получает статус завершения процесса
  DWORD PebBaseAddress; // получает адрес блока окружающей 
                           среды процесса
  DWORD AffinityMask; // получает маску близости процесса
  DWORD BasePriority; // получает класс приоритета процесса
  ULONG UniqueProcessId; // получает идентификатор процесса
  ULONG InheritedFromUniqueProcessId; // получает родительский 
                                        идентификатор процесса
 } PROCESS_BASIC_INFORMATION; 


  Последний элемент в этой структуре - InheritedFromUniqueProcessId, 
  это - то, что нам нжно:

 DWORD dwParentPID;
 LONG status;
 PROCESS_BASIC_INFORMATION pbi;

 status = NtQueryInformationProcess( hProcess,
 ProcessBasicInformation,
 (PVOID)&pbi,
 sizeof(PROCESS_BASIC_INFORMATION),
 NULL );

 
 if (!status)
 dwParentPID = pbi.InheritedFromUniqueProcessId; 


  <b><a>InternalGetWindowText</a></b>

  <strong>Функция InternalGetWindowText аналог функций GetWindowText, 
  но работает наша функция на много быстрее.</strong>

  Еще одна недокументированная функция WindowsNT/2000.

  InternalGetWindowText:

  BOOL InternalGetWindowText (
  HWND hWnd, // обращается к окну или контролю с текстом
  LPWSTR lpString, // указатель на буфер для текста (UNICODE!!!)
  int nMaxCount, // максимальный значение знаков, чтобы копировать
  ); 


  Microsoft не обеспечивает нас символами экспорта в User32.lib для 
  этой функции, так что мы должны загрузить их, динамически используя 
  Функции GetModuleHandle и GetProcAddress:

  typedef BOOL (WINAPI *PROCINTERNALGETWINDOWTEXT)(HWND,LPWSTR,int);

  PROCINTERNALGETWINDOWTEXT InternalGetWindowText;

  HMODULE hUser32 = GetModuleHandle("user32");

  InternalGetWindowText = (PROCINTERNALGETWINDOWTEXT)
  GetProcAddress(hUser32,"InternalGetWindowText"); 


  <b><a>Admin privileges!</a></b>

  <strong>Определяем если процесс запущен с административными привилегиями в 
  WindowsNT/2000</strong>

  Сначала, мы должны получить handle к текущему символу процесса, вызывая 
  функцию OpenProcessToken:
  HANDLE hAccessToken;

  OpenProcessToken(GetCurrentProcess(),TOKEN_QUERY,&hAccessToken); 

  После этого нам надо получить символический хендл, мы должны 
  получить информацию

  BYTE InfoBuffer[1024];
  DWORD dwInfoBufferSize;

  GetTokenInformation( hAccessToken,
  TokenGroups,
  InfoBuffer,
  1024,
  &dwInfoBufferSize);  

  теперь нам надо получить идентификатор безопасности (SiD) для 
  Local Admin, который мы будем искать через 
  группы всех символов (не забудте вызывать функцию FreeSid, 
  чтобы освободить память):

  PSID psidAdministrators;
  SID_IDENTIFIER_AUTHORITY siaNtAuthority = SECURITY_NT_AUTHORITY;

  AllocateAndInitializeSid( &siaNtAuthority,
				2,
				SECURITY_BUILTIN_DOMAIN_RID,
				DOMAIN_ALIAS_RID_ADMINS,
				0,0,0,0,0,0,
				&psidAdministrators)

  И заключительный шаг - поиск LOCAL Admin (SiD) в группах всех 
  символов:

  PTOKEN_GROUPS ptgGroups = (PTOKEN_GROUPS)InfoBuffer;

   for(UINT i = 0; i < ptgGroups->GroupCount; i ++)
   {
     if( EqualSid(psidAdministrators,ptgGroups->Groups[i].Sid) )
     {
        // Этот процесс имеет admin привилегии!
        break;
    }
   }
        
 
 <a>  ULTRAS[MATRiX]</a>
 <a>What`s my age again</a>

 <a href="mailto:ultras2@hotmail.com"> ultras2@hotmail.com</a> 
 <a href="http://www.coderz.net/ultras">www.coderz.net/ultras</a> 
 <a href="http://www.coderz.net/matrix">www.coderz.net/matrix</a>

<a href="http://topdev.tsx.org"> Статья для журнала Top Device</a>                                     
                </pre>
                 </td>
            </tr>
            <tr>
                <td width="100%" bgcolor="#000000"><img
                src="-.gif" width="1" height="1"></td>
            </tr>
            <tr>
                <td width="100%"><img src="-.gif" width="1"
                height="1"></td>
            </tr>
            <tr>
                <td width="100%" bgcolor="#000000"><img
                src="-.gif" width="1" height="1"></td>
            </tr>
            <tr>
                <td>&nbsp;</td>
            </tr>
        </table>
        </center></div></td>
        <td>&nbsp;</td>
    </tr>
</table>

<p>&nbsp;</p>
</body>
</html>
