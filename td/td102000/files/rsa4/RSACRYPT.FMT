
þ SECRET.RSA file format:
  4       keyhash    -- key ID
  4       keylen     -- key length in BITs, 32-aligned (for example 256)
  4       M_len      -- length of the following M number, in BYTEs, 4-aligned
  M_len   M          -- M (Modulus), m = p * q
  4       D_len      -- length of the following D number, in BYTEs, 4-aligned
  D_len   D          -- D (big secret number), d = modinv(e, (p-1)*(q-1))
<-- here begins redundant information, i.e. it may be skipped.
  --e--              -- low exponent, same as in public.rsa.
  --p--              -- p
  --q--              -- q
  --u--              -- (u * p) % q = 1     // modinv(p,q)
  --dp--             -- d % (p-1)
  --dq--             -- d % (q-1)

þ PUBLIC.RSA file format:
  4       keyhash    -- key ID
  4       keylen     -- key length in BITs, 32-aligned
  4       M_len      -- length of the following M number, in BYTEs, 4-aligned
  M_len   M          -- M (Modulus)
  4       E_len      -- length of the following E number, in BYTEs, 4-aligned
  E_len   E          -- E (exponent used to Decrypt, as a rule 3, 17, etc.)

þ RSA-encrypted .PGN (or any other) file format:
  4       r1                -- random number
  4       r1 xor '.PGN'     -- ('.PGN'==2E50474Eh)
  4       r2                -- random number
  4       r2 xor in_size    -- original file size, in bytes
  4       r3                -- random number
  4       r3 xor KeyID      -- key ID to decrypt (hash==dwordxored M number)
---variable number of BLOCKs--
  4       checksum          -- checksum of the following DECRYPTED data, != 0
  ?       data              -- RSA-encrypted data. (RSACRYPT.ASM for details)
---end of block---
  4       0                 -- EOF signature
