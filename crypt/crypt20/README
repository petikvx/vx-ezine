              Black Wolf's Picture Encoder (for 320x200x256 ONLY!!!!)

                              Version 0.90á

                     Released into the Public Domain

                     All Code Written By Black Wolf

Disclaimer:  This program is hereby released into the public domain.  I
take no responsibilities for any damages it might cause.  Use it at your
own risk.

Description:  This picture encoder consists of a group of programs designed
to let you capture a picture, encode a message in it, and display it so that
it may be captured again into another format with a third-party program,
then recapture it and decode the message previously place inside it.  It is 
at a bare-bones stage right now, and includes source code if you would
like to tailor it to your own needs.

Uses:  If you have a need to send sensitive data, but don't want it to be
obvious that that is what you are doing, this might be a good program for
you.  The sender can encode anything he/she wants into the picture and then
convert it to .GIF format, .PCX format, or whatever (using a third part
program).  Not many people will look twice if you receive a picture, whereas
an encrypted message might raise an eyebrow or two.  Then, the receiver
is free to decode it at will.  Anything under about 8k can be recorded into
one picture - important letters, lists, small programs (viruses), or just 
about anything else.  If you are sending text, my recommendation is to
encrypt with via PGP or some similar program, then encode it into the 
picture for added security.

Tech:  The programs encodes data into the LSB's (least significant bits) of
the picture file - thus, roughly 50% of the colors are changed, but if they 
are it is only by one pallette value (0-255).  If the picture's pallette is 
based on gradients, then this will most likely be undetectable.  Also - 
ENCODE will put an EOF at the end of the message, so that while there will 
be garbage at the end of the decoded message it will not be displayed if the
file is opened with edit or typed, etc....

The files are as follows:
GETSCR - Captures a picture into MESSAGE.SCR when you press PRINTSCREEN while
         in graphics mode 13h (320x200x256).

PUTSCR - Puts the picture in MESSAGE.SCR onto the screen, generally so that
         it may be re-captured into another program.

ENCODE - Encodes the data in the file MESSAGE.DAT into the picture
         in MESSAGE.SCR.

DECODE - Decode the message in the picture MESSAGE.SCR and puts it into
         NEWMESS.DAT.

Example:  Say you want to send text to someone, but you don't want it to 
"appear" that way to anyone who may intercept the message.  First, what
you'd want to do is find a picture file (like a GIF).  Then, run GETSCR
and pop the picture up into any picture viewer.  While the picture is on
the screen, hit PRINTSCREEN and GETSCR will create a file called
MESSAGE.SCR for you containing that picture.  Then, write your message and
save it as MESSAGE.DAT.  Run ENCODE - this will take your message and encode
it into the picture file.  At this point, you need to find a third-party
screen capture program that wil work with the format that you wish to use.
Run it to make it go memory resident, then run PUTSCR and capture the picture
it puts onto the screen.  Now you can send the picture to your friend.
     
     When he receives it, he can display it, showing that it is, indeed, 
just a picture file.  When he wants to decode it, all he has to do is run 
GETSCR and display the file - hitting PRINTSCREEN while it is displayed.  
Then, he should run DECODE and it will create a file called NEWMESS.DAT that
includes the message you originally put into the file.

