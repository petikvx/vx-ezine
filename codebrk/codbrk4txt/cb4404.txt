  --]        VicodinES VBA String Converter       [--
(as close to Word 97 macro encryption as your going to get)


This utility can help you hide text strings in your macro code.

For example, if you have a string in your macro virus that would 
be extremely obvious to anyone who stumbled into your code. Say 
a text string like this :

msgbox "Virus !!"

Then you need a way to hide your text strings but Word 97 does not 
support macro encrytpion. What can you do? Encode it with my VVSC 
utility. This way it is much less obvious what your message box 
is going to say or even what your macro virus is going to do. The 
converted string from the above example looks like this once it is
converted.

msgbox Chr(86) + Chr(105) + Chr(114) + Chr(117) + Chr(115) + Chr(32) + Chr(33) + Chr(33)

Now there is no way to tell what your module may say or what it might do.

You can utilize this utility to hide "Shell" commands, "Kill" commands 
and many many other string dependant functions.

How do you run the VVSC utility? Just open up the VVSC document and 
click on the [? Convert] button in the top right hand corner of Word. 
Input the text string to convert and then press "ok". The converted 
text string will automatically be placed in the Windows clipboard for 
you to paste where ever you need to. 

It's that simple but it is so necessary!!!

-->Going over the above example again.
Do not input 'msgbox' into the converter. That is a VBA command and should 
not be converted. Also the sting Virus !! should be entered but you do not
need " " anymore. You are feeding the msgbox command characters and do not
need to put them in quotes anymore!

Peace
VicodinES /CB /TNN

::: SOURCE :::

Sub Convert()
Dim this As String
Dim that As String
Dim FinalConvert As String
Set CConvert = New DataObject

this = InputBox("Enter String To Convert :", "The VicodinES VBA String Converter")

If this = "" Then
	MsgBox "No valid input", vbCritical, "VVSC Error"
	End
End If

length_this = Len(this)

For countout = 1 To length_this
	ToConvert = Mid(this, countout, 1)
	For x = 1 To 400
		that = Chr(x)
		If that = ToConvert Then
			FinalConvert = FinalConvert + "Chr(" & x & ")"
			If countout <> length_this Then FinalConvert = FinalConvert + " + "
			GoTo drop
		End If
	Next x
	drop:
Next countout

MsgBox "Your Converted Text String Is In The Clipboard" + vbCr + vbCr + " --> Paste It Now So You Don't To Lose It! <-- ", vbInformation, "String.Poppy.Utility (c)1998"
CConvert.SetText FinalConvert
CConvert.PutInClipboard

End Sub

::: EXAMPLE :::

Sub NOT_converted()
    
    ' Example of a basic file output
    
    Open "c:\test.bat" For Output As 1
    Print #1, "Test File For VVSC"
    Close 1

End Sub

Sub converted()
    
    ' In this converted example you can not
    ' tell what the sub is going to do just
    ' by looking at it
    
    Open Chr(99) + Chr(58) + Chr(92) + Chr(116) + Chr(101) + Chr(115) + Chr(116) + Chr(46) + Chr(98) + Chr(97) + Chr(116) For Output As 1
    Print #1, Chr(84) + Chr(101) + Chr(115) + Chr(116) + Chr(32) + Chr(70) + Chr(105) + Chr(108) + Chr(101) + Chr(32) + Chr(70) + Chr(111) + Chr(114) + Chr(32) + Chr(86) + Chr(86) + Chr(83) + Chr(67)
    Close 1

End Sub
