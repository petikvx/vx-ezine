a       proc

        mov     dx,offset novirinmem

        mov     ax,3513h
        int     21h                     ; Чтим вектор 13

        cmp     es:[ bx ], 882eh        ; Так начинается вирев вектор 13
        jnz     novir1

        mov     al,0eeh                 ; AH=35
        int     21h

        push    es
        push    bx

        mov     al,21h                  ; AX=3521
        int     21h

        cmp     es:[ bx+1 ], 4b00h      ; Так начинается вирев вектор 21
        jnz     no21
                     
        push    es
        pop     ds
        mov     dx,bx

        mov     ah,25h                  ; AL=21
        int     21h

no21:
        pop     dx
        pop     ds

        mov     ax,2513h
        int     21h

        push    cs
        pop     ds

        mov     dx,offset virinmem      ; Выдать сообщение о вирусе, крый был 
                                        ; в памяти
novir1:

        mov     ah,9                    ; А вот мы и выдаем мессагу
        int     21h                     ; был ли в памяти вырь

        push    cs
        pop     es
no_vir:
        mov     bx,offset buf

        mov     dx,offset msg
        mov     ah,9
        int     21h                     ; Сообщение о кнопках.

        xor     ax,ax
        int     16h

        cmp     al,1bh                  ; Это ESC
        jnz     cont

        ret

cont:
        mov     dl,al

        and     dx,00011111b            ; Я понимаю только A:,B:,C:,D:
                                        ; ( Вряд ли где-то есть E: бутовый ) 

        dec     dx
; 'A'=41h. ( ( ( 41h and 1Fh )-1 )=0 )
; 'a'=61h. ( ( ( 61h and 1Fh )-1 )=0 )

; Я нихрена не проверяю, посему 'A'='a'='!'='Б'=...

        xor     cx,cx
        inc     cx

        cmp     dl,2
        jc      floppy                  ; Старше 'B' - винты

        add     dl,80h-2

        mov     ax,201h
        int     13h

        jnc     no_err1

readerror:
        mov     dx,offset cantread      ; Не смог прочитать/была клибо ачипка
        jmp     short store_msg

no_err1:
        xor     dx,dx

        mov     si,bx
loop1:
        mov     dx,[ si+1beh ]                  ; Чтим таблицу разделов
        cmp     dl,80h                  ; DL=80h => раздел загрузочный
        jz      ok

        add     si,10h

        cmp     dl,55h                          ; Конец партишина
        jnz     loop1

        mov     dx,offset no_boot

store_msg:                                      ; Сей шмат используется
        mov     ah,9                            ; в нескольких местах
        int     21h
        jmp     short no_vir

ok:
        mov     cx,[ si+1beh+2 ]                ; Дальше все как для флопа

floppy:
        mov     ax,201h
        push    ax

        int     13h                     ; Два раза делаем на случай,
        pop     ax                      ; если дискету только что вставили
        int     13h                     ; и после первого раза была ошибка
                                ; Если делать проверку после первого 
                                ; INT 13, то размер сего филе выростет еще
                                ; на пару байтов

        jc      readerror

        push    cx

        mov     si,offset id_str
        lea     di,[bx+3eh]
        mov     cx,18h
rep     cmpsb

        jz      virus

        pop     cx
        mov     dx,offset no_virus

        jmp     short store_msg

virus:
        push    dx

        mov     dx,offset vir
        mov     ah,9
        int     21h

        pop     dx
        pop     cx

        xor     ax,ax
        int     16h

        cmp     al,'1'
        jnz     no_vir2

        push    dx
        push    cx

        mov     dx,buf+6eh
        mov     cx,buf+71h
        inc     cx
        mov     ax,201h
        int     13h

        push    bx

        mov     ax,506fh                ; Декриптуем сектор.
        mov     cx,1ffh                 ; Кусок выдран из виря
loop2:
        xor     [ bx ],ax
        add     ax,7075h
        inc     bx
        loop    loop2

        pop     bx
        pop     cx
        pop     dx

        mov     ax,301h                 ; Восстанавливаем Бут
        int     13h

no_vir2:
        jmp     no_vir                  ; Следующий запрос
a       endp

novirinmem db   'No vir in mem detected',0dh,0ah,'$'

virinmem db     7,'Vir detected in memory.'
        db      'I`ll advice you to check the drive from whish comp booted'
        db      0dh,0ah
        db      'Its better to Reboot machine AFTER healing'
        db      0dh,0ah,'$'

msg     db      'Press A..Z - drive spec,',0dh,0ah
        db      'Press ESC, when bored.',0dh,0ah,'$'

no_boot db      'Bootable part not found at Partition Table.',0dh,0ah,'$'

cantread db     'Drive read error. Check, whether',0dh,0ah
        db      'anybody`s stolen thy device during thy absence.',0dh,0ah,'$'

no_virus db      'No vir detected at boot',0dh,0ah,'$'

vir     db      7,'VIR! Cure? (1) - Yes, AnyOtherKey - No',0dh,0ah,'$'

id_str  db      0fah,33h,0c0h,8eh,0d0h,0bch,0,7ch,0bbh,13h,4,36h,83h,2fh,2
        db      0cdh,12h,0b1h,6,0d3h,0e0h,50h,8eh,0c0h,0bah,00,00

buf:
        end